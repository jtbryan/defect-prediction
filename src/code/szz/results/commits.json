{"e2097be55e5c5acf1268a66d31c0c97fceb9a02a":{"changes":{"lib\/vagrant\/bundler.rb":"MODIFY"},"diff":{"lib\/vagrant\/bundler.rb":[{"add":["14","require_relative \"util\/platform\"","15","require \"vagrant\/util\/subprocess\"","44","","45","      # Because of a rubygems bug, we need to set the gemrc file path","46","      # through this method rather than relying on the environment varible","47","      # GEMRC. On windows, that path gets split on `:`: and `;`, which means","48","      # the drive letter gets treated as its own path. If that path exists locally,","49","      # (like having a random folder called `c` where the library was invoked),","50","      # it fails thinking the folder `c` is a gemrc file.","51","      gemrc_val = ENV[\"GEMRC\"]","52","      ENV[\"GEMRC\"] = \"\"","53","      Gem.configuration = Gem::ConfigFile.new([\"--config-file\", gemrc_val])","54","      ENV[\"GEMRC\"] = gemrc_val"],"delete":[]}]}},"90fa705a6dd37118920729d4a072088517c69b36":{"changes":{"test\/unit\/vagrant\/util\/powershell_test.rb":"ADD","lib\/vagrant\/util\/powershell.rb":"MODIFY"},"diff":{"test\/unit\/vagrant\/util\/powershell_test.rb":[{"add":[],"delete":[]}],"lib\/vagrant\/util\/powershell.rb":[{"add":["13","      # Number of seconds to wait while attempting to get powershell version","14","      DEFAULT_VERSION_DETECTION_TIMEOUT = 30","105","          timeout = ENV[\"VAGRANT_POWERSHELL_VERSION_DETECTION_TIMEOUT\"].to_i","106","          if timeout < 1","107","            timeout = DEFAULT_VERSION_DETECTION_TIMEOUT","108","          end","110","            r = Subprocess.execute(*command,","111","              notify: [:stdout, :stderr],","112","              timeout: timeout,","113","            ) {|io_name,data| version = data}","194","","195","      # @private","196","      # Reset the cached values for platform. This is not considered a public","197","      # API and should only be used for testing.","198","      def self.reset!","199","        instance_variables.each(&method(:remove_instance_variable))","200","      end"],"delete":["104","            r = Subprocess.execute(*command, notify: [:stdout, :stderr], timeout: 10) {|io_name,data| version = data}"]}]}},"09af983caa43b58e7a3a988d71a041d33cd4113d":{"changes":{"plugins\/providers\/docker\/action\/login.rb":"MODIFY","test\/unit\/plugins\/providers\/docker\/action\/login_test.rb":"ADD"},"diff":{"plugins\/providers\/docker\/action\/login.rb":[{"add":["11","        def login(env, config, driver)","12","          # Login!","13","          env[:ui].output(I18n.t(\"docker_provider.logging_in\"))","14","          driver.login(","15","            config.email, config.username,","16","            config.password, config.auth_server)","17","","18","          # Continue, so that the auth is protected","19","          # from meddling.","20","          @app.call(env)","21","","22","          # Log out","23","          driver.logout(config.auth_server)","24","        end","25","","33","          if !env[:machine].provider.host_vm?","34","            # no host vm in use, using docker directly","35","            login(env, config, driver)","36","          else","37","            # Grab a host VM lock to do the login so that we only login","38","            # once per container for the rest of this process.","39","            env[:machine].provider.host_vm_lock do","40","              login(env, config, driver)","41","            end"],"delete":["18","          # Grab a host VM lock to do the login so that we only login","19","          # once per container for the rest of this process.","20","          env[:machine].provider.host_vm_lock do","21","            # Login!","22","            env[:ui].output(I18n.t(\"docker_provider.logging_in\"))","23","            driver.login(","24","              config.email, config.username,","25","              config.password, config.auth_server)","26","","27","            # Continue, within the lock, so that the auth is protected","28","            # from meddling.","29","            @app.call(env)","30","","31","            # Log out","32","            driver.logout(config.auth_server)"]}],"test\/unit\/plugins\/providers\/docker\/action\/login_test.rb":[{"add":[],"delete":[]}]}},"3844a8e9f9efbedfa3c16905fb90806ad3c0ec01":{"changes":{"lib\/vagrant\/util\/powershell.rb":"MODIFY"},"diff":{"lib\/vagrant\/util\/powershell.rb":[{"add":["13","      LOGGER = Log4r::Logger.new(\"vagrant::util::powershell\")","88","          version = nil","89","          begin","90","            r = Subprocess.execute(*command, notify: [:stdout, :stderr], timeout: 10) {|io_name,data| version = data}","91","          rescue Vagrant::Util::Subprocess::TimeoutExceeded","92","            LOGGER.debug(\"Timeout exceeded while attempting to determine version of Powershell.\")","93","          end","94","","95","          @_powershell_version = version"],"delete":["87","          r = Subprocess.execute(*command)","88","          @_powershell_version = r.exit_code != 0 ? nil : r.stdout.chomp"]}]}},"f998e535cecd08809ddb2f8d738a9c27781e9726":{"changes":{"test\/unit\/plugins\/commands\/snapshot\/command\/save_test.rb":"MODIFY","plugins\/commands\/snapshot\/command\/save.rb":"MODIFY","templates\/locales\/en.yml":"MODIFY"},"diff":{"test\/unit\/plugins\/commands\/snapshot\/command\/save_test.rb":[{"add":[],"delete":["94","        expect(subject).to receive(:with_target_vms){}","95",""]}],"plugins\/commands\/snapshot\/command\/save.rb":[{"add":["17","            o.separator \"If no vm-name is given, Vagrant will take a snapshot of\"","18","            o.separator \"the entire environment with the same snapshot name.\"","19","            o.separator \"\"","36","          name = argv.pop","43","            # In this case, no vm name was given, and we are iterating over the","44","            # entire environment. If a vm hasn't been created yet, we can't list","45","            # its snapshots","46","            if vm.id.nil?","47","              @env.ui.warn(I18n.t(\"vagrant.commands.snapshot.save.vm_not_created\",","48","                                  name: vm.name))","49","              next","50","            end","51",""],"delete":["33","          # If no snapshot name is given, the backup name is the same as the machine name.","34","          # If there is a name given, we need to remove it and save it as `name`. Otherwise","35","          # `with_target_vms` will treat the snapshot name as a guest name.","36","          if argv.size < 2","37","            name = argv.first","38","          else","39","            name = argv.pop","40","          end"]}],"templates\/locales\/en.yml":[{"add":["2055","        save:","2056","          vm_not_created: |-","2057","            Machine '%{name}' has not been created yet, and therefore cannot save snapshots. Skipping..."],"delete":[]}]}},"c9ca7b8f57933f6bf740bbc84e76e831c70b710c":{"changes":{"plugins\/providers\/docker\/driver.rb":"MODIFY"},"diff":{"plugins\/providers\/docker\/driver.rb":[{"add":["168","        return false if e.to_s.include?(\"is being used\")"],"delete":[]}]}},"d55f8d349680fc11b5d27650ff5ff01149560d4c":{"changes":{"test\/unit\/plugins\/provisioners\/chef\/cap\/windows\/chef_installed_test.rb":"ADD","plugins\/provisioners\/chef\/cap\/windows\/chef_installed.rb":"MODIFY","test\/unit\/plugins\/provisioners\/chef\/cap\/linux\/chef_installed_test.rb":"ADD","plugins\/provisioners\/chef\/cap\/omnios\/chef_installed.rb":"MODIFY","test\/unit\/plugins\/provisioners\/chef\/cap\/freebsd\/chef_installed_test.rb":"ADD","plugins\/provisioners\/chef\/cap\/linux\/chef_installed.rb":"MODIFY","test\/unit\/plugins\/provisioners\/chef\/cap\/omnios\/chef_installed_test.rb":"ADD","plugins\/provisioners\/chef\/cap\/freebsd\/chef_installed.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/provisioners\/chef\/cap\/windows\/chef_installed_test.rb":[{"add":[],"delete":[]}],"plugins\/provisioners\/chef\/cap\/windows\/chef_installed.rb":[{"add":["9","              command = 'if ((&knife --version) -Match \"' + version.to_s + '\"){ exit 0 } else { exit 1 }'","11","              command = 'if ((&knife --version) -Match \"Chef*\"){ exit 0 } else { exit 1 }'"],"delete":["9","              command = 'if ((&knife --version) -Match \"Chef: ' + version.to_s + '\"){ exit 0 } else { exit 1 }'","11","              command = 'if ((&knife --version) -Match \"Chef: *\"){ exit 0 } else { exit 1 }'"]}],"test\/unit\/plugins\/provisioners\/chef\/cap\/linux\/chef_installed_test.rb":[{"add":[],"delete":[]}],"plugins\/provisioners\/chef\/cap\/omnios\/chef_installed.rb":[{"add":["13","              command << \"&& #{knife} --version | grep '#{version}'\""],"delete":["13","              command << \"&& #{knife} --version | grep 'Chef: #{version}'\""]}],"test\/unit\/plugins\/provisioners\/chef\/cap\/freebsd\/chef_installed_test.rb":[{"add":[],"delete":[]}],"plugins\/provisioners\/chef\/cap\/linux\/chef_installed.rb":[{"add":["12","              command << \"&& #{knife} --version | grep '#{version}'\""],"delete":["12","              command << \"&& #{knife} --version | grep 'Chef: #{version}'\""]}],"test\/unit\/plugins\/provisioners\/chef\/cap\/omnios\/chef_installed_test.rb":[{"add":[],"delete":[]}],"plugins\/provisioners\/chef\/cap\/freebsd\/chef_installed.rb":[{"add":["12","              command << \"&& #{knife} --version | grep '#{version}'\""],"delete":["12","              command << \"&& #{knife} --version | grep 'Chef: #{version}'\""]}]}},"a712f70634fa19fbabdb0b2061d77f5b15c9f6ff":{"changes":{"plugins\/guests\/redhat\/cap\/nfs_client.rb":"MODIFY"},"diff":{"plugins\/guests\/redhat\/cap\/nfs_client.rb":[{"add":["7","            case machine.guest.capability(\"flavor\")","8","            when :rhel_7","9","              comm.sudo(\"\/bin\/systemctl restart rpcbind nfs\")","10","            else","11","              comm.sudo(\"\/etc\/init.d\/rpcbind restart; \/etc\/init.d\/nfs restart\")","12","            end"],"delete":["7","            comm.sudo(\"\/etc\/init.d\/rpcbind restart; \/etc\/init.d\/nfs restart\")"]}]}},"ac75e409a3470897d56a0841a575e981d60e2e3d":{"changes":{"test\/unit\/plugins\/provisioners\/ansible\/provisioner_test.rb":"MODIFY","website\/source\/docs\/provisioning\/ansible_common.html.md":"MODIFY","plugins\/provisioners\/ansible\/provisioner\/base.rb":"MODIFY","CHANGELOG.md":"MODIFY"},"diff":{"test\/unit\/plugins\/provisioners\/ansible\/provisioner_test.rb":[{"add":["293","          machine1: {","294","            \"http_port\" => 80,","295","            \"comments\" => \"'some text with spaces and quotes'\",","296","            \"description\" => \"text with spaces but no quotes\",","297","          }","301","          expect(inventory_content).to match(\"^\" + Regexp.quote(machine.name) + \".+http_port=80 comments='some text with spaces and quotes' description='text with spaces but no quotes'\")"],"delete":["293","          machine1: {\"http_port\" => 80, \"comments\" => \"'some text with spaces'\"}","297","          expect(inventory_content).to match(\"^\" + Regexp.quote(machine.name) + \".+http_port=80 comments='some text with spaces'$\")"]}],"website\/source\/docs\/provisioning\/ansible_common.html.md":[{"add":["95","                  \"comments\" => \"text with spaces\","],"delete":["95","                  \"comments\" => \"'text with spaces'\","]}],"plugins\/provisioners\/ansible\/provisioner\/base.rb":[{"add":["150","            s = vars.each.collect {","151","              |k, v|","152","                if v.is_a?(String) && v.include?(' ') && !v.match(\/^('|\")[^'\"]+('|\")$\/)","153","                  v = %Q('#{v}')","154","                end","155","                \"#{k}=#{v}\"","156","              }.join(\" \")"],"delete":["150","            s = vars.each.collect{ |k, v| \"#{k}=#{v}\" }.join(\" \")"]}],"CHANGELOG.md":[{"add":["15","- provisioners\/ansible(both): Add single quotes to the inventory host variables, only when necessary [GH-8597]"],"delete":[]}]}},"2acded113c8f8915038b6230df1acfac43332c0c":{"changes":{"plugins\/communicators\/ssh\/communicator.rb":"MODIFY","templates\/locales\/en.yml":"MODIFY","lib\/vagrant\/errors.rb":"MODIFY"},"diff":{"plugins\/communicators\/ssh\/communicator.rb":[{"add":["27","      # These are the exceptions that we retry because they represent","28","      # errors that are generally fixed from a retry and don't","29","      # necessarily represent immediate failure cases.","30","      SSH_RETRY_EXCEPTIONS = [","31","        Errno::EACCES,","32","        Errno::EADDRINUSE,","33","        Errno::ECONNABORTED,","34","        Errno::ECONNREFUSED,","35","        Errno::ECONNRESET,","36","        Errno::ENETUNREACH,","37","        Errno::EHOSTUNREACH,","38","        Net::SSH::Disconnect,","39","        Timeout::Error","40","      ]","97","            rescue Vagrant::Errors::SSHConnectionAborted","98","              message = \"Connection aborted.\"","371","          connection = retryable(tries: opts[:retries], on: SSH_RETRY_EXCEPTIONS) do","430","        rescue Errno::ECONNABORTED","431","          # This is raised if we failed to connect the max number of times","432","          # due to an ECONNABORTED","433","          raise Vagrant::Errors::SSHConnectionAborted"],"delete":["352","          # These are the exceptions that we retry because they represent","353","          # errors that are generally fixed from a retry and don't","354","          # necessarily represent immediate failure cases.","355","          exceptions = [","356","            Errno::EACCES,","357","            Errno::EADDRINUSE,","358","            Errno::ECONNREFUSED,","359","            Errno::ECONNRESET,","360","            Errno::ENETUNREACH,","361","            Errno::EHOSTUNREACH,","362","            Net::SSH::Disconnect,","363","            Timeout::Error","364","          ]","365","","369","          connection = retryable(tries: opts[:retries], on: exceptions) do"]}],"templates\/locales\/en.yml":[{"add":["1191","      ssh_connection_aborted: |-","1192","        SSH connection was aborted! This usually happens when the machine is taking","1193","        too long to reboot or the SSH daemon is not properly configured on the VM.","1194","        First, try reloading your machine with `vagrant reload`, since a simple","1195","        restart sometimes fixes things. If that doesn't work, destroy your machine","1196","        and recreate it with a `vagrant destroy` followed by a `vagrant up`. If that","1197","        doesn't work, contact support."],"delete":[]}],"lib\/vagrant\/errors.rb":[{"add":["666","    class SSHConnectionAborted < VagrantError","667","      error_key(:ssh_connection_aborted)","668","    end","669",""],"delete":[]}]}},"d4acdd06eccc4477fd686a5d43ccdfff701010b8":{"changes":{"test\/unit\/vagrant\/action\/builtin\/handle_forwarded_port_collisions_test.rb":"MODIFY","lib\/vagrant\/action\/builtin\/handle_forwarded_port_collisions.rb":"MODIFY"},"diff":{"test\/unit\/vagrant\/action\/builtin\/handle_forwarded_port_collisions_test.rb":[{"add":["74","        allow(instance).to receive(:ipv4_addresses).and_return([\"127.0.0.1\"])","147","  describe \"#ipv4_addresses\" do","148","    let(:ipv4_ifaddr) { double(\"ipv4_ifaddr\") }","149","    let(:ipv6_ifaddr) { double(\"ipv6_ifaddr\") }","150","    let(:ifaddrs) { [ ipv4_ifaddr, ipv6_ifaddr ] }","151","","152","    before do","153","      allow(ipv4_ifaddr).to receive_message_chain(:addr, :ipv4?).and_return(true)","154","      allow(ipv4_ifaddr).to receive_message_chain(:addr, :ip_address).and_return(\"127.0.0.1\")","155","      allow(ipv6_ifaddr).to receive_message_chain(:addr, :ipv4?).and_return(false)","156","    end","157","","158","    it \"returns a list of all IPv4 addresses\" do","159","      allow(Socket).to receive(:getifaddrs).and_return(ifaddrs)","160","      expect(instance.send(:ipv4_addresses)).to eq([ \"127.0.0.1\" ])","161","    end","162","  end","163","","173","    context \"when host_ip is 0.0.0.0\" do","174","      let(:host_ip) { \"0.0.0.0\" }","175","      let(:test_ips) { [ \"127.0.0.1\", \"192.168.1.7\" ] }","177","      before do","178","        allow(instance).to receive(:ipv4_addresses).and_return(test_ips)","179","      end","180","","181","      it \"should check the port on every IPv4 interface\" do","182","        expect(instance).to receive(:is_port_open?).with(test_ips.first, host_port)","183","        expect(instance).to receive(:is_port_open?).with(test_ips.last, host_port)","187","      it \"should return false if the port is closed on any IPv4 interfaces\" do","188","        expect(instance).to receive(:is_port_open?).with(test_ips.first, host_port).","189","          and_return(true)","190","        expect(instance).to receive(:is_port_open?).with(test_ips.last, host_port).","191","          and_return(false)","192","        expect(instance.send(:port_check, host_ip, host_port)).to be(false)","193","      end","194","","195","      it \"should return true if the port is open on all IPv4 interfaces\" do","196","        expect(instance).to receive(:is_port_open?).with(test_ips.first, host_port).","197","          and_return(true)","198","        expect(instance).to receive(:is_port_open?).with(test_ips.last, host_port).","199","          and_return(true)","200","        expect(instance.send(:port_check, host_ip, host_port)).to be(true)"],"delete":["155","    context \"when host_ip is not set\" do","156","      let(:host_ip){ nil }","158","      it \"should set host_ip to 0.0.0.0 when unset\" do","159","        expect(instance).to receive(:is_port_open?).with(\"0.0.0.0\", host_port).and_return(true)","163","      it \"should set host_ip to 127.0.0.1 when 0.0.0.0 is not available\" do","164","        expect(instance).to receive(:is_port_open?).with(\"0.0.0.0\", host_port).and_raise(Errno::EADDRNOTAVAIL)","165","        expect(instance).to receive(:is_port_open?).with(\"127.0.0.1\", host_port).and_return(true)","166","        instance.send(:port_check, host_ip, host_port)"]}],"lib\/vagrant\/action\/builtin\/handle_forwarded_port_collisions.rb":[{"add":["3","require 'socket'","245","        def ipv4_addresses","246","          ip_addresses = []","247","          Socket.getifaddrs.each do |ifaddr|","248","            if ifaddr.addr.ipv4?","249","              ip_addresses << ifaddr.addr.ip_address","252","          ip_addresses","253","        end","254","","255","        def port_check(host_ip, host_port)","256","          # If no host_ip is specified, intention taken to be listen on all interfaces.","257","          if host_ip.nil? || host_ip == \"0.0.0.0\"","258","            @logger.debug(\"Checking port #{host_port} on all IPv4 addresses...\")","259","            available_ips = ipv4_addresses.select do |test_host_ip|","260","              @logger.debug(\"Host IP: #{test_host_ip}, port: #{host_port}\")","261","              !is_port_open?(test_host_ip, host_port)","262","            end","263","            if available_ips.empty?","264","              @logger.debug(\"Cannot forward port #{host_port} on any interfaces.\")","265","              true","266","            else","267","              @logger.debug(\"These IP addresses will forward to the guest: #{available_ips.join(', ')}\")","268","              false","269","            end","270","          else","271","            # Do a regular check","272","            is_port_open?(host_ip, host_port)","273","          end"],"delete":["244","        def port_check(host_ip, host_port)","245","          # If no host_ip is specified, intention taken to be list on all interfaces.","246","          # If platform is windows, default back to localhost only","247","          test_host_ip = host_ip || \"0.0.0.0\"","248","          begin","249","            is_port_open?(test_host_ip, host_port)","250","          rescue Errno::EADDRNOTAVAIL","251","            if !host_ip && test_host_ip == \"0.0.0.0\"","252","              test_host_ip = \"127.0.0.1\"","253","              retry","254","            else","255","              raise"]}]}},"5b3c6b8ad466815c906e2d2aae5a2b91451cb534":{"changes":{"plugins\/commands\/cloud\/provider\/delete.rb":"MODIFY","plugins\/commands\/cloud\/publish.rb":"MODIFY","plugins\/commands\/cloud\/version\/create.rb":"MODIFY","plugins\/commands\/cloud\/provider\/upload.rb":"MODIFY","plugins\/commands\/cloud\/version\/release.rb":"MODIFY","plugins\/commands\/cloud\/version\/update.rb":"MODIFY","plugins\/commands\/cloud\/version\/revoke.rb":"MODIFY","plugins\/commands\/cloud\/search.rb":"MODIFY","plugins\/commands\/cloud\/provider\/create.rb":"MODIFY","plugins\/commands\/cloud\/box\/delete.rb":"MODIFY","plugins\/commands\/cloud\/version\/delete.rb":"MODIFY","plugins\/commands\/cloud\/box\/create.rb":"MODIFY","plugins\/commands\/cloud\/provider\/update.rb":"MODIFY"},"diff":{"plugins\/commands\/cloud\/provider\/delete.rb":[{"add":["18","              o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |u|"],"delete":["18","              o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |t|"]}],"plugins\/commands\/cloud\/publish.rb":[{"add":["42","            o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |u|"],"delete":["42","            o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |t|"]}],"plugins\/commands\/cloud\/version\/create.rb":[{"add":["21","              o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |u|"],"delete":["21","              o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |t|"]}],"plugins\/commands\/cloud\/provider\/upload.rb":[{"add":["19","              o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |u|"],"delete":["19","              o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |t|"]}],"plugins\/commands\/cloud\/version\/release.rb":[{"add":["17","              o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |u|"],"delete":["17","              o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |t|"]}],"plugins\/commands\/cloud\/version\/update.rb":[{"add":["21","              o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |u|"],"delete":["21","              o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |t|"]}],"plugins\/commands\/cloud\/version\/revoke.rb":[{"add":["17","              o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |u|"],"delete":["17","              o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |t|"]}],"plugins\/commands\/cloud\/search.rb":[{"add":["39","            o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address to login with\") do |u|"],"delete":["39","            o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |t|"]}],"plugins\/commands\/cloud\/provider\/create.rb":[{"add":["18","              o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |u|"],"delete":["18","              o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |t|"]}],"plugins\/commands\/cloud\/box\/delete.rb":[{"add":["18","              o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |u|"],"delete":["18","              o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |t|"]}],"plugins\/commands\/cloud\/version\/delete.rb":[{"add":["17","              o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |u|"],"delete":["17","              o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |t|"]}],"plugins\/commands\/cloud\/box\/create.rb":[{"add":["21","              o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |u|"],"delete":["21","              o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |t|"]}],"plugins\/commands\/cloud\/provider\/update.rb":[{"add":["18","              o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |u|"],"delete":["18","              o.on(\"-u\", \"--username USERNAME_OR_EMAIL\", String, \"Vagrant Cloud username or email address\") do |t|"]}]}},"af9d0df6353ea63d0c664fad524622f5f16ec7c4":{"changes":{"plugins\/kernel_v2\/config\/vm.rb":"MODIFY","lib\/vagrant\/action\/builtin\/handle_forwarded_port_collisions.rb":"MODIFY","plugins\/providers\/virtualbox\/driver\/version_5_0.rb":"MODIFY","plugins\/providers\/virtualbox\/util\/compile_forwarded_ports.rb":"MODIFY"},"diff":{"plugins\/kernel_v2\/config\/vm.rb":[{"add":["246","            # For forwarded ports, set the default ID to be the","247","            # concat of host_ip, proto and host_port. This would ensure Vagrant","248","            # caters for port forwarding in an IP aliased environment where","249","            # different host IP addresses are to be listened on the same port.","250","            default_id = \"#{options[:host_ip]}#{options[:protocol]}#{options[:host]}\"","680","              key = \"#{options[:host_ip]}#{options[:protocol]}#{options[:host]}\""],"delete":["246","            # For forwarded ports, set the default ID to the","247","            # host port so that host ports overwrite each other.","248","            default_id = \"#{options[:protocol]}#{options[:host]}\"","678","              key = \"#{options[:protocol]}#{options[:host]}\""]}],"lib\/vagrant\/action\/builtin\/handle_forwarded_port_collisions.rb":[{"add":["64","          extra_in_use = env[:port_collision_extra_in_use] || {}","83","          usable_ports.subtract(extra_in_use.keys)","94","            host_ip    = options[:host_ip]","108","            in_use = is_forwarded_already(extra_in_use, host_port, host_ip) ||","109","              port_checker[host_ip, host_port] ||","110","              lease_check(host_ip, host_port)","127","                in_use = is_forwarded_already(extra_in_use, repaired_port, host_ip) ||","128","                  port_checker[host_ip, repaired_port] ||","129","                  lease_check(host_ip, repaired_port)","161","        def lease_check(host_ip=nil, host_port)","168","          if host_ip.nil?","169","            lease_file_name = host_port.to_s","170","          else","171","            lease_file_name = \"#{host_ip.gsub('.','_')}_#{host_port.to_s}\"","172","          end","173","","182","            if child.basename.to_s == lease_file_name","191","          leasedir.join(lease_file_name).open(\"w+\") do |f|","197","          @leased << lease_file_name","212","        # This functions checks to see if the current instance's hostport and","213","        # hostip for forwarding is in use by the virtual machines created","214","        # previously.","215","        def is_forwarded_already(extra_in_use, hostport, hostip)","216","          hostip = '*' if hostip.nil? || hostip.empty?","217","          # ret. false if none of the VMs we spun up had this port forwarded.","218","          return false if not extra_in_use.has_key?(hostport)","219","","220","          # ret. true if the user has requested to bind on all interfaces but","221","          # we already have a rule in one the VMs we spun up.","222","          if hostip == '*'","223","            if extra_in_use.fetch(hostport).size != 0","224","              return true","225","            else","226","              return false","227","            end","228","          end","229","","230","          return extra_in_use.fetch(hostport).include?(hostip)","231","        end","232","","233","        def port_check(host_ip, host_port)","234","          # If the user hasn't specified a host_ip, his\/her intention is taken to be","235","          # to listen on all interfaces.","236","          return is_port_open?(\"0.0.0.0\", host_port) if host_ip.nil?","237","          return is_port_open?(host_ip, host_port)"],"delete":["64","          extra_in_use = env[:port_collision_extra_in_use] || []","83","          usable_ports.subtract(extra_in_use)","107","            in_use = extra_in_use.include?(host_port) ||","108","              port_checker[host_port] ||","109","              lease_check(host_port)","126","                in_use = extra_in_use.include?(repaired_port) ||","127","                  port_checker[repaired_port] ||","128","                  lease_check(repaired_port)","160","        def lease_check(port)","175","            if child.basename.to_s == port.to_s","184","          leasedir.join(port.to_s).open(\"w+\") do |f|","190","          @leased << port.to_s","205","        def port_check(port)","206","          is_port_open?(\"127.0.0.1\", port)"]}],"plugins\/providers\/virtualbox\/driver\/version_5_0.rb":[{"add":["368","            # Forwarding(1)=\"172.22.8.201tcp32977,tcp,172.22.8.201,32977,,3777\"","369","            # Forwarding(2)=\"tcp32978,tcp,,32978,,3777\"","370","            if line =~ \/^Forwarding.+?=\"(.+?),.+?,(.*?),(.+?),.*?,(.+?)\"$\/","371","              result = [current_nic, $1.to_s, $3.to_i, $4.to_i, $2]","560","          used_ports = Hash.new{|hash, key| hash[key] = Set.new}","568","              read_forwarded_ports(uuid, true).each do |_, _, hostport, _, hostip|","569","                hostip = '*' if hostip.nil? || hostip.empty?","570","                used_ports[hostport].add?(hostip)","575","          used_ports"],"delete":["368","            if line =~ \/^Forwarding.+?=\"(.+?),.+?,.*?,(.+?),.*?,(.+?)\"$\/","369","              result = [current_nic, $1.to_s, $2.to_i, $3.to_i]","558","          ports = []","566","              read_forwarded_ports(uuid, true).each do |_, _, hostport, _|","567","                ports << hostport","572","          ports"]}],"plugins\/providers\/virtualbox\/util\/compile_forwarded_ports.rb":[{"add":["17","              host_ip    = options[:host_ip]","25","              key = \"#{host_ip}#{protocol}#{host_port}\"","26","              mappings[key] ="],"delete":["24","              mappings[host_port.to_s + protocol.to_s] ="]}]}},"d5b5e9ea8c26eefb7b3104529ebff822b6aa6971":{"changes":{"website\/source\/docs\/provisioning\/ansible_local.html.md":"MODIFY","plugins\/provisioners\/ansible\/cap\/guest\/ubuntu\/ansible_install.rb":"MODIFY"},"diff":{"website\/source\/docs\/provisioning\/ansible_local.html.md":[{"add":["75","      - On Ubuntu-like systems, the latest Ansible release is installed from the `ppa:ansible\/ansible` repository. The compatibility is maintained only for active long-term support (LTS) versions."],"delete":["75","      - On Ubuntu-like systems, the latest Ansible release is installed from the `ppa:ansible\/ansible` repository."]}],"plugins\/provisioners\/ansible\/cap\/guest\/ubuntu\/ansible_install.rb":[{"add":["20","              unless machine.communicate.test(\"test -x \\\"$(which add-apt-repository)\\\"\")","21","                machine.communicate.sudo \"\"\"","22","                  apt-get update -y -qq && \\","23","                  apt-get install -y -qq software-properties-common","24","                \"\"\"","25","              end","26","              machine.communicate.sudo \"\"\"","27","                add-apt-repository ppa:ansible\/ansible -y && \\","28","                apt-get update -y -qq && \\","29","                apt-get install -y -qq ansible","30","              \"\"\""],"delete":["20","              machine.communicate.sudo \"apt-get update -y -qq\"","21","              machine.communicate.sudo \"apt-get install -y -qq software-properties-common python-software-properties\"","22","              machine.communicate.sudo \"add-apt-repository ppa:ansible\/ansible -y\"","23","              machine.communicate.sudo \"apt-get update -y -qq\"","24","              machine.communicate.sudo \"apt-get install -y -qq ansible\""]}]}},"6d4d9b93045b9b2672722eeb815bd32ee1f206b2":{"changes":{"plugins\/commands\/cloud\/publish.rb":"MODIFY","templates\/locales\/en.yml":"MODIFY","lib\/vagrant\/errors.rb":"MODIFY","test\/unit\/plugins\/commands\/cloud\/publish_test.rb":"MODIFY"},"diff":{"plugins\/commands\/cloud\/publish.rb":[{"add":["11","            o.banner = \"Usage: vagrant cloud publish [options] organization\/box-name version provider-name provider-file\"","50","","61","          box_file = argv[3]","62","","63","          if !options[:url] && !File.file?(box_file)","64","            raise Vagrant::Errors::BoxFileNotExist,","65","              file: box_file","66","          end","67","","68","          @client = VagrantPlugins::CloudCommand::Util.client_login(@env, options[:username])","69",""],"delete":["11","            o.banner = \"Usage: vagrant cloud publish [options] organization\/box-name version provider-name [provider-file]\"","55","          @client = VagrantPlugins::CloudCommand::Util.client_login(@env, options[:username])","56","","62","          box_file = argv[3] # path expand"]}],"templates\/locales\/en.yml":[{"add":["570","      box_file_not_exist: |-","571","        The file you are attempting to upload does not exist. Please recheck","572","        that the file exists and was passed in correctly.","573","","574","        File: %{file}"],"delete":[]}],"lib\/vagrant\/errors.rb":[{"add":["162","    class BoxFileNotExist < VagrantError","163","      error_key(:box_file_not_exist)","164","    end","165",""],"delete":[]}],"test\/unit\/plugins\/commands\/cloud\/publish_test.rb":[{"add":["40","    allow(File).to receive(:file?).and_return(true)","50","  context \"missing required arguments\" do","51","    let(:argv) { [\"vagrant\/box\", \"1.0.0\", \"virtualbox\"] }","52","","53","    it \"shows help\" do","54","      allow(File).to receive(:file?).and_return(false)","55","      expect { subject.execute }.","56","        to raise_error(Vagrant::Errors::BoxFileNotExist)","57","    end","58","  end","59",""],"delete":[]}]}},"1e38be237e421bc0fa6dcc55d8e600fb5b41ade9":{"changes":{"plugins\/provisioners\/ansible\/helpers.rb":"MODIFY","plugins\/provisioners\/ansible\/provisioner\/base.rb":"MODIFY","CHANGELOG.md":"MODIFY","plugins\/provisioners\/ansible\/config\/guest.rb":"MODIFY"},"diff":{"plugins\/provisioners\/ansible\/helpers.rb":[{"add":["27","      def self.expand_path_in_unix_style(path, base_dir)","28","        # Remove the possible drive letter, which is added","29","        # by `File.expand_path` when running on a Windows host","30","        File.expand_path(path, base_dir).sub(\/^[a-zA-Z]:\/, \"\")","31","      end","32",""],"delete":[]}],"plugins\/provisioners\/ansible\/provisioner\/base.rb":[{"add":["181","        def get_galaxy_role_file(base_dir)","182","          Helpers::expand_path_in_unix_style(config.galaxy_role_file, base_dir)","185","        def get_galaxy_roles_path(base_dir)","187","            Helpers::expand_path_in_unix_style(config.galaxy_roles_path, base_dir)","189","            playbook_path = Helpers::expand_path_in_unix_style(config.playbook, base_dir)","190","            File.join(Pathname.new(playbook_path).parent, 'roles')"],"delete":["181","        def get_galaxy_role_file(basedir)","182","          File.expand_path(config.galaxy_role_file, basedir)","185","        def get_galaxy_roles_path(basedir)","187","            File.expand_path(config.galaxy_roles_path, basedir)","189","            File.join(Pathname.new(config.playbook).expand_path(basedir).parent, 'roles')"]}],"CHANGELOG.md":[{"add":["4","  - provisioners\/ansible_local: Fix errors in absolute paths to playbook or","5","      galaxy resources when running on a Windows host [GH-6740, GH-6757]"],"delete":["4","  - provisioners\/ansible_local: Fix error in `playbook` existence check when","5","    running on a Windows host [GH-6740]"]}],"plugins\/provisioners\/ansible\/config\/guest.rb":[{"add":["39","          remote_path = Helpers::expand_path_in_unix_style(path, @provisioning_path)"],"delete":["39","          remote_path = File.expand_path(path, @provisioning_path)","40","","41","          # Remove drive letter if running on a Windows host","42","          remote_path = remote_path.gsub(\/^[a-zA-Z]:\/, \"\")"]}]}},"30f8e7944ddb21ebbb17313912fd8db39aefa2f1":{"changes":{"lib\/vagrant\/action\/builder.rb":"MODIFY"},"diff":{"lib\/vagrant\/action\/builder.rb":[{"add":["267","        env[:builder_raw_applied] ||= []","296","        if env[:triggers] && !env[:builder_raw_applied].include?(env[:raw_action_name])","297","          env[:builder_raw_applied] << env[:raw_action_name]","298",""],"delete":["295","        if env[:triggers]"]}]}},"cb80286a4ac22b9c55ee3d213d980ea73b11cd14":{"changes":{"test\/unit\/plugins\/provisioners\/ansible\/provisioner_test.rb":"MODIFY","plugins\/provisioners\/ansible\/helpers.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/provisioners\/ansible\/provisioner_test.rb":[{"add":["734","    context \"with extra_vars option defined\" do","735","      describe \"with a hash value\" do","736","        before do","737","          config.extra_vars = { var1: %Q(string with 'apostrophes', \\\\, \" and =), var2: { x: 42 } }","738","        end","739","","740","        it_should_set_optional_arguments({ \"extra_vars\" => \"--extra-vars={\\\"var1\\\":\\\"string with 'apostrophes', \\\\\\\\, \\\\\\\" and =\\\",\\\"var2\\\":{\\\"x\\\":42}}\" })","741","      end","742","","743","      describe \"with a string value referring to file path (with the '@' prefix)\" do","744","        before do","745","          config.extra_vars = \"@#{existing_file}\"","746","        end","747","","748","        it_should_set_optional_arguments({ \"extra_vars\" => \"--extra-vars=@#{File.expand_path(__FILE__)}\" })","749","      end","750","    end","751","","761","        config.extra_vars = { var1: %Q(string with 'apostrophes', \\\\, \" and =), var2: { x: 42 } }","781","      it_should_set_optional_arguments({  \"extra_vars\"          => \"--extra-vars={\\\"var1\\\":\\\"string with 'apostrophes', \\\\\\\\, \\\\\\\" and =\\\",\\\"var2\\\":{\\\"x\\\":42}}\",","806","          expect(full_command).to eq(%Q(PYTHONUNBUFFERED=1 ANSIBLE_FORCE_COLOR=true ANSIBLE_HOST_KEY_CHECKING=true ANSIBLE_SSH_ARGS='-o IdentitiesOnly=yes -i '\/my\/key1' -i '\/my\/key2' -o ForwardAgent=yes -o ControlMaster=no -o ControlMaster=auto -o ControlPersist=60s' ansible-playbook --connection=ssh --timeout=30 --ask-sudo-pass --ask-vault-pass --limit='machine*:&vagrant:!that_one' --inventory-file=#{generated_inventory_dir} --extra-vars=\"{\\\\\"var1\\\\\":\\\\\"string with 'apostrophes', \\\\\\\\\\\\\\\\, \\\\\\\\\\\\\" and =\\\\\",\\\\\"var2\\\\\":{\\\\\"x\\\\\":42}}\" --sudo --sudo-user=deployer -vvv --vault-password-file=#{File.expand_path(__FILE__)} --tags=db,www --skip-tags=foo,bar --start-at-task='an awesome task' --why-not --su-user=foot --ask-su-pass --limit='all' --private-key=.\/myself.key playbook.yml))"],"delete":["743","        config.extra_vars = \"@#{existing_file}\"","763","      it_should_set_optional_arguments({  \"extra_vars\"          => \"--extra-vars=@#{File.expand_path(__FILE__)}\",","788","          expect(full_command).to eq(\"PYTHONUNBUFFERED=1 ANSIBLE_FORCE_COLOR=true ANSIBLE_HOST_KEY_CHECKING=true ANSIBLE_SSH_ARGS='-o IdentitiesOnly=yes -i '\/my\/key1' -i '\/my\/key2' -o ForwardAgent=yes -o ControlMaster=no -o ControlMaster=auto -o ControlPersist=60s' ansible-playbook --connection=ssh --timeout=30 --ask-sudo-pass --ask-vault-pass --limit='machine*:&vagrant:!that_one' --inventory-file=#{generated_inventory_dir} --extra-vars=@#{File.expand_path(__FILE__)} --sudo --sudo-user=deployer -vvv --vault-password-file=#{File.expand_path(__FILE__)} --tags=db,www --skip-tags=foo,bar --start-at-task='an awesome task' --why-not --su-user=foot --ask-su-pass --limit='all' --private-key=.\/myself.key playbook.yml\")"]}],"plugins\/provisioners\/ansible\/helpers.rb":[{"add":["19","          elsif arg =~ \/(--extra-vars)=(.+)\/","20","            shell_arg << %Q(%s=\"%s\") % [$1, $2.gsub('\\\\', '\\\\\\\\\\\\').gsub('\"', %Q(\\\\\"))]"],"delete":[]}]}},"bd5fd7ab1853b1d3d1e28ff70798fc12499b4b57":{"changes":{"plugins\/providers\/virtualbox\/driver\/version_4_1.rb":"MODIFY","plugins\/providers\/virtualbox\/driver\/version_4_2.rb":"MODIFY","plugins\/providers\/virtualbox\/driver\/version_4_3.rb":"MODIFY","test\/unit\/plugins\/providers\/virtualbox\/support\/shared\/virtualbox_driver_version_4_x_examples.rb":"MODIFY","plugins\/providers\/virtualbox\/driver\/version_4_0.rb":"MODIFY"},"diff":{"plugins\/providers\/virtualbox\/driver\/version_4_1.rb":[{"add":["276","          ip = read_guest_property(\"\/VirtualBox\/GuestInfo\/Net\/#{adapter_number}\/V4\/IP\")","277","          if !valid_ip_address?(ip)","278","            raise Vagrant::Errors::VirtualBoxGuestPropertyNotFound, guest_property: \"\/VirtualBox\/GuestInfo\/Net\/#{adapter_number}\/V4\/IP\"","279","          end","280","","281","          return ip","517","        def valid_ip_address?(ip)","518","          # Filter out invalid IP addresses","519","          # GH-4658 VirtualBox can report an IP address of 0.0.0.0 for FreeBSD guests.","520","          if ip == \"0.0.0.0\"","521","            return false","522","          else","523","            return true","524","          end","525","        end","526",""],"delete":["276","          read_guest_property(\"\/VirtualBox\/GuestInfo\/Net\/#{adapter_number}\/V4\/IP\")"]}],"plugins\/providers\/virtualbox\/driver\/version_4_2.rb":[{"add":["307","          ip = read_guest_property(\"\/VirtualBox\/GuestInfo\/Net\/#{adapter_number}\/V4\/IP\")","308","          if !valid_ip_address?(ip)","309","            raise Vagrant::Errors::VirtualBoxGuestPropertyNotFound, guest_property: \"\/VirtualBox\/GuestInfo\/Net\/#{adapter_number}\/V4\/IP\"","310","          end","311","","312","          return ip","548","        def valid_ip_address?(ip)","549","          # Filter out invalid IP addresses","550","          # GH-4658 VirtualBox can report an IP address of 0.0.0.0 for FreeBSD guests.","551","          if ip == \"0.0.0.0\"","552","            return false","553","          else","554","            return true","555","          end","556","        end","557",""],"delete":["307","          read_guest_property(\"\/VirtualBox\/GuestInfo\/Net\/#{adapter_number}\/V4\/IP\")"]}],"plugins\/providers\/virtualbox\/driver\/version_4_3.rb":[{"add":["316","          ip = read_guest_property(\"\/VirtualBox\/GuestInfo\/Net\/#{adapter_number}\/V4\/IP\")","317","          if !valid_ip_address?(ip)","318","            raise Vagrant::Errors::VirtualBoxGuestPropertyNotFound, guest_property: \"\/VirtualBox\/GuestInfo\/Net\/#{adapter_number}\/V4\/IP\"","319","          end","320","","321","          return ip","557","        def valid_ip_address?(ip)","558","          # Filter out invalid IP addresses","559","          # GH-4658 VirtualBox can report an IP address of 0.0.0.0 for FreeBSD guests.","560","          if ip == \"0.0.0.0\"","561","            return false","562","          else","563","            return true","564","          end","565","        end","566",""],"delete":["316","          read_guest_property(\"\/VirtualBox\/GuestInfo\/Net\/#{adapter_number}\/V4\/IP\")"]}],"test\/unit\/plugins\/providers\/virtualbox\/support\/shared\/virtualbox_driver_version_4_x_examples.rb":[{"add":["40","","41","    it \"does not accept 0.0.0.0 as a valid IP address\" do","42","      key = \"\/VirtualBox\/GuestInfo\/Net\/1\/V4\/IP\"","43","","44","      expect(subprocess).to receive(:execute).","45","        with(\"VBoxManage\", \"guestproperty\", \"get\", uuid, key, an_instance_of(Hash)).","46","        and_return(subprocess_result(stdout: \"Value: 0.0.0.0\"))","47","","48","      expect { subject.read_guest_ip(1) }.","49","        to raise_error Vagrant::Errors::VirtualBoxGuestPropertyNotFound","50","    end"],"delete":[]}],"plugins\/providers\/virtualbox\/driver\/version_4_0.rb":[{"add":["271","          ip = read_guest_property(\"\/VirtualBox\/GuestInfo\/Net\/#{adapter_number}\/V4\/IP\")","272","          if !valid_ip_address?(ip)","273","            raise Vagrant::Errors::VirtualBoxGuestPropertyNotFound, guest_property: \"\/VirtualBox\/GuestInfo\/Net\/#{adapter_number}\/V4\/IP\"","274","          end","275","","276","          return ip","507","        def valid_ip_address?(ip)","508","          # Filter out invalid IP addresses","509","          # GH-4658 VirtualBox can report an IP address of 0.0.0.0 for FreeBSD guests.","510","          if ip == \"0.0.0.0\"","511","            return false","512","          else","513","            return true","514","          end","515","        end","516",""],"delete":["271","          read_guest_property(\"\/VirtualBox\/GuestInfo\/Net\/#{adapter_number}\/V4\/IP\")"]}]}},"291db96510af6687569536e25150fb087737f89a":{"changes":{"plugins\/communicators\/winrm\/scripts\/elevated_shell.ps1.erb":"MODIFY"},"diff":{"plugins\/communicators\/winrm\/scripts\/elevated_shell.ps1.erb":[{"add":["29","      <StopOnIdleEnd>false<\/StopOnIdleEnd>"],"delete":["29","      <StopOnIdleEnd>true<\/StopOnIdleEnd>"]}]}},"9874a0db5fc4e13e34cef6361c44e18e44d28dac":{"changes":{"CHANGELOG.md":"MODIFY"},"diff":{"CHANGELOG.md":[{"add":["8","  - provisioners\/ansible: increase ansible connection timeout to 30 seconds [GH-5018]"],"delete":["8","  - provisioners\/ansible: increase ansible connection timeout to 30 seconds [GH-4860]"]}]}},"0e68f02dc959f538f25474b7b29aff112111f854":{"changes":{"lib\/vagrant\/box_metadata.rb":"MODIFY","test\/unit\/plugins\/commands\/box\/command\/outdated_test.rb":"ADD","plugins\/commands\/box\/command\/outdated.rb":"MODIFY","test\/unit\/vagrant\/box_metadata_test.rb":"MODIFY","website\/source\/docs\/cli\/box.html.md":"MODIFY"},"diff":{"lib\/vagrant\/box_metadata.rb":[{"add":["70","    # latest version. Optionally filter versions by a matching","71","    # provider.","74","    def versions(**opts)","75","      provider = nil","76","      provider = opts[:provider].to_sym if opts[:provider]","77","","78","      if provider","79","        @version_map.select do |version, raw|","80","          if raw[\"providers\"]","81","            raw[\"providers\"].detect do |p|","82","              p[\"name\"].to_sym == provider","83","            end","84","          end","85","        end.keys.sort.map(&:to_s)","86","      else","87","        @version_map.keys.sort.map(&:to_s)","88","      end"],"delete":["70","    # latest version.","73","    def versions","74","      @version_map.keys.sort.map(&:to_s)"]}],"test\/unit\/plugins\/commands\/box\/command\/outdated_test.rb":[{"add":[],"delete":[]}],"plugins\/commands\/box\/command\/outdated.rb":[{"add":["75","            latest  = Gem::Version.new(md.versions(provider: box.provider).last)"],"delete":["75","            latest  = Gem::Version.new(md.versions.last)"]}],"test\/unit\/vagrant\/box_metadata_test.rb":[{"add":["117","","118","    it \"filters versions by matching provider\" do","119","      expect(subject.versions(provider: :vmware)).to eq(","120","        [\"1.0.0\", \"1.1.0\"])","121","    end"],"delete":[]}],"website\/source\/docs\/cli\/box.html.md":[{"add":["121","This will show the latest version available for the specific provider type,","122","which may be different than the absolute latest version available.","123",""],"delete":[]}]}},"b741ff799940064f12315f3f57b2298acfdb8318":{"changes":{"test\/unit\/plugins\/provisioners\/ansible\/provisioner_test.rb":"MODIFY","plugins\/provisioners\/ansible\/provisioner\/base.rb":"MODIFY","CHANGELOG.md":"MODIFY"},"diff":{"test\/unit\/plugins\/provisioners\/ansible\/provisioner_test.rb":[{"add":["398","","399","      it \"adds 'all:vars' section to the generated inventory\" do","400","        config.groups = {","401","          \"all:vars\" => { \"var1\" => \"value1\", \"var2\" => \"value2\" }","402","        }","403","","404","        expect(Vagrant::Util::Subprocess).to receive(:execute).with('ansible-playbook', any_args) { |*args|","405","          inventory_content = File.read(generated_inventory_file)","406","","407","          expect(inventory_content).to include(\"[all:vars]\\nvar1=value1\\nvar2=value2\\n\")","408","","409","        }.and_return(default_execute_result)","410","      end"],"delete":[]}],"plugins\/provisioners\/ansible\/provisioner\/base.rb":[{"add":["230","            if defined_groups.include?(gname.sub(\/:vars$\/, \"\")) || gname == \"all:vars\""],"delete":["230","            if defined_groups.include?(gname.sub(\/:vars$\/, \"\"))"]}],"CHANGELOG.md":[{"add":["14","- provisioners\/ansible(both): Add the \"all:vars\" section to the inventory when defined in `groups` option [GH-7730]"],"delete":[]}]}},"3bff55034a846af7d5ceab8d7ff020bad9cf0f61":{"changes":{"plugins\/kernel_v2\/config\/vm.rb":"MODIFY"},"diff":{"plugins\/kernel_v2\/config\/vm.rb":[{"add":["427","        end","428","        # forward SSH ports regardless of communicator","429","        if !@__networks[\"forwarded_port-ssh\"]"],"delete":["427","        elsif !@__networks[\"forwarded_port-ssh\"]"]}]}},"d87c645bd0447217b440934e6bd8cf5867b7f649":{"changes":{"plugins\/communicators\/ssh\/communicator.rb":"MODIFY","test\/unit\/plugins\/communicators\/ssh\/communicator_test.rb":"MODIFY"},"diff":{"plugins\/communicators\/ssh\/communicator.rb":[{"add":["575","                  stderr_marker_found = true","578","                  stderr_data_buffer = nil","582","              if block_given? && stderr_marker_found && !data.empty?"],"delete":["575","                  marker_found = true","578","                  data_buffer = nil","582","              if block_given? && marker_found && !data.empty?"]}],"test\/unit\/plugins\/communicators\/ssh\/communicator_test.rb":[{"add":["323","      let(:command_stderr_data) { \"some data\" }","336","","337","      it \"should not receive any stderr data\" do","338","        stderr = ''","339","        communicator.execute(\"ls \/\") do |type, data|","340","          if type == :stderr","341","            stderr << data","342","          end","343","        end","344","        expect(stderr).to be_empty","345","      end","352","      let(:command_stderr_data) { \"some data\" }","365","","366","      it \"should not receive any stderr data\" do","367","        stderr = ''","368","        communicator.execute(\"ls \/\") do |type, data|","369","          if type == :stderr","370","            stderr << data","371","          end","372","        end","373","        expect(stderr).to be_empty","374","      end","381","      let(:command_stdout_data) { \"some data\" }","394","","395","      it \"should not receive any stdout data\" do","396","        stdout = ''","397","        communicator.execute(\"ls \/\") do |type, data|","398","          if type == :stdout","399","            stdout << data","400","          end","401","        end","402","        expect(stdout).to be_empty","403","      end","410","      let(:command_std_data) { \"some data\" }","423","","424","      it \"should not receive any stdout data\" do","425","        stdout = ''","426","        communicator.execute(\"ls \/\") do |type, data|","427","          if type == :stdout","428","            stdout << data","429","          end","430","        end","431","        expect(stdout).to be_empty","432","      end"],"delete":[]}]}},"8f4ae68f56bc0fad2f521a6315b4b04603aabdcb":{"changes":{"plugins\/providers\/virtualbox\/driver\/version_4_2.rb":"MODIFY"},"diff":{"plugins\/providers\/virtualbox\/driver\/version_4_2.rb":[{"add":["117","                          adapter[:intnet], \"--cableconnected#{adapter[:adapter]}\", \"on\"])"],"delete":["117","                          adapter[:intnet]])"]}]}},"839a2e6fa61b7102768d6f3da51c6834b3c69a4d":{"changes":{"test\/unit\/plugins\/provisioners\/ansible\/provisioner_test.rb":"MODIFY","plugins\/provisioners\/ansible\/provisioner.rb":"MODIFY","CHANGELOG.md":"MODIFY"},"diff":{"test\/unit\/plugins\/provisioners\/ansible\/provisioner_test.rb":[{"add":[],"delete":["53","    subject.instance_variable_get(:@logger).stub(:debug?).and_return(false)","467","    describe \"with VAGRANT_LOG=debug, but without verbose option\" do","468","      before do","469","        subject.instance_variable_get(:@logger).stub(:debug?).and_return(true)","470","        config.verbose = false","471","      end","472","","473","      it \"shows the ansible-playbook command\" do","474","        expect(machine.env.ui).to receive(:detail).with { |full_command|","475","          expect(full_command).to eq(\"PYTHONUNBUFFERED=1 ANSIBLE_HOST_KEY_CHECKING=false ANSIBLE_FORCE_COLOR=true ANSIBLE_SSH_ARGS='-o UserKnownHostsFile=\/dev\/null -o IdentitiesOnly=yes -o ControlMaster=auto -o ControlPersist=60s' ansible-playbook --private-key=\/path\/to\/my\/key --user=testuser --connection=ssh --timeout=30 --limit='machine1' --inventory-file=#{generated_inventory_dir} playbook.yml\")","476","        }","477","      end","478","    end","479",""]}],"plugins\/provisioners\/ansible\/provisioner.rb":[{"add":["83","        show_ansible_playbook_command(env, command) if config.verbose"],"delete":["83","        show_ansible_playbook_command(env, command) if (config.verbose || @logger.debug?)"]}],"CHANGELOG.md":[{"add":["101","  - provisioners\/ansible: only show ansible-playbook command when `verbose` option is enabled [GH-5803]"],"delete":[]}]}},"6f707c829db2b9058e88f9ae6179b7934f234689":{"changes":{"test\/unit\/plugins\/guests\/windows\/cap\/reboot_test.rb":"MODIFY","plugins\/guests\/windows\/cap\/reboot.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/guests\/windows\/cap\/reboot_test.rb":[{"add":["52","","53","    context \"with exceptions while waiting for reboot\" do","54","      before { allow(described_class).to receive(:sleep) }","55","","56","      it \"should retry on any standard error\" do","57","        allow(communicator).to receive(:execute)","58","","59","        expect(communicator).to receive(:test).with(\/# Function\/, { error_check: false, shell: :powershell }).and_return(0)","60","        expect(communicator).to receive(:execute).with(\/shutdown\/, { shell: :powershell }).and_return(0)","61","        expect(described_class).to receive(:wait_for_reboot).and_raise(StandardError)","62","        expect(described_class).to receive(:wait_for_reboot)","63","","64","        described_class.reboot(machine)","65","      end","66","","67","      it \"should not retry when exception is not a standard error\" do","68","        allow(communicator).to receive(:execute)","69","","70","        expect(communicator).to receive(:test).with(\/# Function\/, { error_check: false, shell: :powershell }).and_return(0)","71","        expect(communicator).to receive(:execute).with(\/shutdown\/, { shell: :powershell }).and_return(0)","72","        expect(described_class).to receive(:wait_for_reboot).and_raise(Exception)","73","","74","        expect { described_class.reboot(machine) }.to raise_error(Exception)","75","      end","76","    end"],"delete":[]}],"plugins\/guests\/windows\/cap\/reboot.rb":[{"add":["30","          rescue => err","32","            @logger.debug(\"Exception caught while waiting for reboot: #{err}\")"],"delete":["30","          rescue HTTPClient::ConnectTimeoutError, Vagrant::Errors::MachineGuestNotReady, WinRM::WinRMHTTPTransportError => e"]}]}},"4b889ee641fd0647df9d7755bcf61634985cd66f":{"changes":{"lib\/vagrant\/util\/platform.rb":"MODIFY"},"diff":{"lib\/vagrant\/util\/platform.rb":[{"add":["190","          return path + \"\\\\\" if path =~ \/^[a-zA-Z]:\\\\?$\/"],"delete":["190","          return path if path =~ \/^[a-zA-Z]:\\\\?$\/"]}]}},"4e81be879c04f6f6c3dbd87b0f78a4a7206dd957":{"changes":{"lib\/vagrant\/action\/builtin\/ssh_run.rb":"MODIFY","lib\/vagrant\/machine.rb":"MODIFY","plugins\/communicators\/ssh\/communicator.rb":"MODIFY","test\/unit\/vagrant\/action\/builtin\/ssh_exec_test.rb":"MODIFY","test\/unit\/vagrant\/machine_test.rb":"MODIFY","lib\/vagrant\/action\/builtin\/ssh_exec.rb":"MODIFY"},"diff":{"lib\/vagrant\/action\/builtin\/ssh_run.rb":[{"add":[],"delete":["31","          # Check SSH key permissions","32","          info[:private_key_path].each do |path|","33","            SSH.check_key_permissions(Pathname.new(path))","34","          end","35",""]}],"lib\/vagrant\/machine.rb":[{"add":["0","require_relative \"util\/ssh\"","1","","438","      # Check that the private key permissions are valid","439","      info[:private_key_path].each do |path|","440","        key_path = Pathname.new(path)","441","        if key_path.exist?","442","          Vagrant::Util::SSH.check_key_permissions(key_path)","443","        end","444","      end","445",""],"delete":[]}],"plugins\/communicators\/ssh\/communicator.rb":[{"add":[],"delete":["15","require 'vagrant\/util\/ssh'","307","        # Check that the private key permissions are valid","308","        ssh_info[:private_key_path].each do |path|","309","          Vagrant::Util::SSH.check_key_permissions(Pathname.new(path))","310","        end","311",""]}],"test\/unit\/vagrant\/action\/builtin\/ssh_exec_test.rb":[{"add":[],"delete":["2","require \"vagrant\/util\/ssh\"","3","","18","    allow(ssh_klass).to receive(:check_key_permissions)","31","  it \"should check key permissions then exec\" do","32","    key_path = \"\/foo\"","33","    machine_ssh_info[:private_key_path] = [key_path]","34","","35","    expect(ssh_klass).to receive(:check_key_permissions).","36","      with(Pathname.new(key_path)).","37","      once.","38","      ordered","39","","40","    expect(ssh_klass).to receive(:exec).","41","      with(machine_ssh_info, nil).","42","      once.","43","      ordered","44","","45","    described_class.new(app, env).call(env)","46","  end","47",""]}],"test\/unit\/vagrant\/machine_test.rb":[{"add":["472","  describe \"#ssh_info\" do","473","","483","      let(:ssh_klass) { Vagrant::Util::SSH }","487","        # Stub the check_key_permissions method so that even if we test incorrectly,","488","        # no side effects actually happen.","489","        allow(ssh_klass).to receive(:check_key_permissions)","561","      it \"should check and try to fix the permissions of the default private key file\" do","562","        provider_ssh_info[:private_key_path] = nil","563","        instance.config.ssh.private_key_path = nil","564","","565","        expect(ssh_klass).to receive(:check_key_permissions).once.with(Pathname.new(instance.env.default_private_key_path.to_s))","566","        instance.ssh_info","567","      end","568","","569","      it \"should check and try to fix the permissions of given private key files\" do","570","        provider_ssh_info[:private_key_path] = nil","571","        # Use __FILE__ to provide an existing file","572","        instance.config.ssh.private_key_path = [File.expand_path(__FILE__), File.expand_path(__FILE__)]","573","","574","        expect(ssh_klass).to receive(:check_key_permissions).twice.with(Pathname.new(File.expand_path(__FILE__)))","575","        instance.ssh_info","576","      end","577","","578","      it \"should not check the permissions of a private key file that does not exist\" do","579","        provider_ssh_info[:private_key_path] = \"\/foo\"","580","        ","581","        expect(ssh_klass).to_not receive(:check_key_permissions)","582","        instance.ssh_info","583","      end","584",""],"delete":["472","  describe \"ssh info\" do"]}],"lib\/vagrant\/action\/builtin\/ssh_exec.rb":[{"add":[],"delete":["33","          # Check SSH key permissions","34","          info[:private_key_path].each do |path|","35","            SSH.check_key_permissions(Pathname.new(path))","36","          end","37",""]}]}},"96c20ad3cc6046629b008863d09ba5f9f1d0838d":{"changes":{"test\/unit\/plugins\/provisioners\/ansible\/config\/guest_test.rb":"MODIFY","plugins\/provisioners\/ansible\/cap\/guest\/pip\/pip.rb":"MODIFY","plugins\/provisioners\/ansible\/provisioner\/guest.rb":"MODIFY","plugins\/provisioners\/ansible\/config\/guest.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/provisioners\/ansible\/config\/guest_test.rb":[{"add":["63","      expect(subject.pip_install_cmd).to eql(\"\")"],"delete":[]}],"plugins\/provisioners\/ansible\/cap\/guest\/pip\/pip.rb":[{"add":[],"delete":["23",""]}],"plugins\/provisioners\/ansible\/provisioner\/guest.rb":[{"add":["35","        #     via a default command. If pip needs to be installed differently then"],"delete":["35","        #     via a default command. If pip needs to be installed differently then "]}],"plugins\/provisioners\/ansible\/config\/guest.rb":[{"add":["21","          @pip_install_cmd   = UNSET_VALUE","32","          @pip_install_cmd   = \"\"                     if @pip_install_cmd   == UNSET_VALUE"],"delete":["21","          @pip_install_cmd   = UNSET_VALUE          ","32","          @pip_install_cmd   = \"\"                     if @pip_args          == UNSET_VALUE          "]}]}},"a10b2c3108d1e5720ae7ea2317b8e0b5172d2b0e":{"changes":{"test\/unit\/plugins\/providers\/virtualbox\/base.rb":"MODIFY","test\/unit\/plugins\/providers\/virtualbox\/support\/shared\/virtualbox_driver_version_6_x_examples.rb":"ADD","test\/unit\/plugins\/providers\/virtualbox\/driver\/version_6_1_test.rb":"ADD","plugins\/providers\/virtualbox\/driver\/version_6_1.rb":"MODIFY","test\/unit\/plugins\/providers\/virtualbox\/driver\/version_6_0_test.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/providers\/virtualbox\/base.rb":[{"add":["5","require_relative \"support\/shared\/virtualbox_driver_version_6_x_examples\""],"delete":[]}],"test\/unit\/plugins\/providers\/virtualbox\/support\/shared\/virtualbox_driver_version_6_x_examples.rb":[{"add":[],"delete":[]}],"test\/unit\/plugins\/providers\/virtualbox\/driver\/version_6_1_test.rb":[{"add":[],"delete":[]}],"plugins\/providers\/virtualbox\/driver\/version_6_1.rb":[{"add":["12","","13","        def read_dhcp_servers","14","          execute(\"list\", \"dhcpservers\", retryable: true).split(\"\\n\\n\").collect do |block|","15","            info = {}","16","","17","            block.split(\"\\n\").each do |line|","18","              if network = line[\/^NetworkName:\\s+HostInterfaceNetworking-(.+?)$\/, 1]","19","                info[:network]      = network","20","                info[:network_name] = \"HostInterfaceNetworking-#{network}\"","21","              elsif ip = line[\/^Dhcpd IP:\\s+(.+?)$\/, 1]","22","                info[:ip] = ip","23","              elsif netmask = line[\/^NetworkMask:\\s+(.+?)$\/, 1]","24","                info[:netmask] = netmask","25","              elsif lower = line[\/^LowerIPAddress:\\s+(.+?)$\/, 1]","26","                info[:lower] = lower","27","              elsif upper = line[\/^UpperIPAddress:\\s+(.+?)$\/, 1]","28","                info[:upper] = upper","29","              end","30","            end","31","","32","            info","33","          end","34","        end"],"delete":[]}],"test\/unit\/plugins\/providers\/virtualbox\/driver\/version_6_0_test.rb":[{"add":["12","  it_behaves_like \"a version 6.x virtualbox driver\""],"delete":[]}]}},"f7894d9c8c83fd01a27e745a880c50023b1ab462":{"changes":{"test\/unit\/plugins\/provisioners\/ansible\/provisioner_test.rb":"MODIFY","plugins\/provisioners\/ansible\/provisioner.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/provisioners\/ansible\/provisioner_test.rb":[{"add":["58","    stubbed_ui = Vagrant::UI::Colored.new","59","    stubbed_ui.stub(detail: \"\")","60","    machine.env.stub(ui: stubbed_ui)","61","","116","        expect(cmd_opts[:env]['ANSIBLE_FORCE_COLOR']).to eql(\"true\")","117","        expect(cmd_opts[:env]).to_not include(\"ANSIBLE_NOCOLOR\")","475","          expect(full_command).to eq(\"PYTHONUNBUFFERED=1 ANSIBLE_HOST_KEY_CHECKING=false ANSIBLE_FORCE_COLOR=true ANSIBLE_SSH_ARGS='-o UserKnownHostsFile=\/dev\/null -o IdentitiesOnly=yes -o ControlMaster=auto -o ControlPersist=60s' ansible-playbook --private-key=\/path\/to\/my\/key --user=testuser --connection=ssh --timeout=30 --limit='machine1' --inventory-file=#{generated_inventory_dir} playbook.yml\")","490","          expect(full_command).to eq(\"PYTHONUNBUFFERED=1 ANSIBLE_HOST_KEY_CHECKING=false ANSIBLE_FORCE_COLOR=true ANSIBLE_SSH_ARGS='-o UserKnownHostsFile=\/dev\/null -o IdentitiesOnly=yes -o ControlMaster=auto -o ControlPersist=60s' ansible-playbook --private-key=\/path\/to\/my\/key --user=testuser --connection=ssh --timeout=30 --limit='machine1' --inventory-file=#{generated_inventory_dir} -v playbook.yml\")","491","        }","492","      end","493","    end","494","","495","    describe \"without colorized output\" do","496","      before do","497","        machine.env.stub(ui: Vagrant::UI::Basic.new)","498","      end","499","","500","      it \"disables ansible-playbook colored output\" do","501","        expect(Vagrant::Util::Subprocess).to receive(:execute).with { |*args|","502","          cmd_opts = args.last","503","          expect(cmd_opts[:env]).to_not include(\"ANSIBLE_FORCE_COLOR\")","504","          expect(cmd_opts[:env]['ANSIBLE_NOCOLOR']).to eql(\"true\")","562","          expect(full_command).to eq(\"PYTHONUNBUFFERED=1 ANSIBLE_HOST_KEY_CHECKING=true ANSIBLE_FORCE_COLOR=true ANSIBLE_SSH_ARGS='-o IdentitiesOnly=yes -o IdentityFile=\/my\/key2 -o ForwardAgent=yes -o ControlMaster=no -o ControlMaster=auto -o ControlPersist=60s' ansible-playbook --private-key=\/my\/key1 --user=testuser --connection=ssh --timeout=30 --limit='machine*:&vagrant:!that_one' --inventory-file=#{generated_inventory_dir} --extra-vars=@#{File.expand_path(__FILE__)} --sudo --sudo-user=deployer -vvv --ask-sudo-pass --ask-vault-pass --vault-password-file=#{File.expand_path(__FILE__)} --tags=db,www --skip-tags=foo,bar --start-at-task='an awesome task' --why-not --su-user=foot --ask-su-pass --limit='all' playbook.yml\")"],"delete":["112","        expect(cmd_opts[:env]['ANSIBLE_NOCOLOR']).to eql(\"true\")","470","          expect(full_command).to eq(\"PYTHONUNBUFFERED=1 ANSIBLE_HOST_KEY_CHECKING=false ANSIBLE_NOCOLOR=true ANSIBLE_SSH_ARGS='-o UserKnownHostsFile=\/dev\/null -o IdentitiesOnly=yes -o ControlMaster=auto -o ControlPersist=60s' ansible-playbook --private-key=\/path\/to\/my\/key --user=testuser --connection=ssh --timeout=30 --limit='machine1' --inventory-file=#{generated_inventory_dir} playbook.yml\")","485","          expect(full_command).to eq(\"PYTHONUNBUFFERED=1 ANSIBLE_HOST_KEY_CHECKING=false ANSIBLE_NOCOLOR=true ANSIBLE_SSH_ARGS='-o UserKnownHostsFile=\/dev\/null -o IdentitiesOnly=yes -o ControlMaster=auto -o ControlPersist=60s' ansible-playbook --private-key=\/path\/to\/my\/key --user=testuser --connection=ssh --timeout=30 --limit='machine1' --inventory-file=#{generated_inventory_dir} -v playbook.yml\")","543","          expect(full_command).to eq(\"PYTHONUNBUFFERED=1 ANSIBLE_HOST_KEY_CHECKING=true ANSIBLE_NOCOLOR=true ANSIBLE_SSH_ARGS='-o IdentitiesOnly=yes -o IdentityFile=\/my\/key2 -o ForwardAgent=yes -o ControlMaster=no -o ControlMaster=auto -o ControlPersist=60s' ansible-playbook --private-key=\/my\/key1 --user=testuser --connection=ssh --timeout=30 --limit='machine*:&vagrant:!that_one' --inventory-file=#{generated_inventory_dir} --extra-vars=@#{File.expand_path(__FILE__)} --sudo --sudo-user=deployer -vvv --ask-sudo-pass --ask-vault-pass --vault-password-file=#{File.expand_path(__FILE__)} --tags=db,www --skip-tags=foo,bar --start-at-task='an awesome task' --why-not --su-user=foot --ask-su-pass --limit='all' playbook.yml\")"]}],"plugins\/provisioners\/ansible\/provisioner.rb":[{"add":["72","","73","        # When Ansible output is piped in Vagrant integration, its default colorization is","74","        # automatically disabled and the only way to re-enable colors is to use ANSIBLE_FORCE_COLOR.","75","        env[\"ANSIBLE_FORCE_COLOR\"] = \"true\" if @machine.env.ui.is_a?(Vagrant::UI::Colored)","76","        # Setting ANSIBLE_NOCOLOR is \"unnecessary\" at the moment, but this could change in the future","77","        # (e.g. local provisioner [GH-2103], possible change in vagrant\/ansible integration, etc.)"],"delete":[]}]}},"e4399a57246824bbdb4aaf99d7dd0d216aed7e4c":{"changes":{"lib\/vagrant\/util\/platform.rb":"MODIFY","test\/unit\/vagrant\/util\/platform_test.rb":"MODIFY"},"diff":{"lib\/vagrant\/util\/platform.rb":[{"add":["563","            result = Util::Subprocess.execute(\"vagrant.exe\", \"--version\")","565","              windows_version = result.stdout.match(\/Vagrant (?<version>[\\w.-]+)\/)"],"delete":["563","            result = Util::Subprocess.execute(\"vagrant.exe\", \"version\")","565","              windows_version = result.stdout.match(\/Installed Version: (?<version>[\\w.-]+)\/)"]}],"test\/unit\/vagrant\/util\/platform_test.rb":[{"add":["187","      allow(Vagrant::Util::Subprocess).to receive(:execute).with(\"vagrant.exe\", \"--version\").","188","        and_return(double(exit_code: 0, stdout: \"Vagrant #{exe_version}\"))"],"delete":["187","      allow(Vagrant::Util::Subprocess).to receive(:execute).with(\"vagrant.exe\", \"version\").","188","        and_return(double(exit_code: 0, stdout: \"Installed Version: #{exe_version}\"))"]}]}},"1761e65f2682b2aa0e459565c35ef5cbca672442":{"changes":{"plugins\/guests\/debian\/cap\/change_host_name.rb":"MODIFY","test\/unit\/plugins\/guests\/debian\/cap\/change_host_name_test.rb":"MODIFY"},"diff":{"plugins\/guests\/debian\/cap\/change_host_name.rb":[{"add":["0","require \"log4r\"","1","","10","          @logger = Log4r::Logger.new(\"vagrant::guest::debian::changehostname\")","49","            init_restart_command = \"\/etc\/init.d\/networking restart\"","50","            ifdownup_restart_command = \"ifdown --exclude=lo -a && ifup --exclude=lo -a\"","51","            systemctl_restart_command = \"systemctl stop ifup@eth0.service && systemctl start ifup@eth0.service\"","53","            restart_command = ifdownup_restart_command","56","                @logger.debug(\"Attempting to restart networking with systemd-networkd\")","59","                @logger.debug(\"Attempting to restart networking with NetworkManager\")","61","              else","62","                @logger.debug(\"Attempting to restart networking with ifup@.service\")","63","                restart_command = systemctl_restart_command","65","            else","66","              @logger.debug(\"Attempting to restart networking with ifdown\/ifup net tools\")","68","","69","            if !comm.test(restart_command, sudo: true)","70","              @logger.debug(\"Attempting to restart networking with init networking service\")","71","              comm.sudo(init_restart_command)","72","            end"],"delete":["46","            restart_command = \"\/etc\/init.d\/networking restart\"","55","            comm.sudo(restart_command)"]}],"test\/unit\/plugins\/guests\/debian\/cap\/change_host_name_test.rb":[{"add":["82","        let(:systemd) { true }","84","        it \"restarts the network using systemctl\" do","86","          expect(comm.received_commands[3]).to match(\/systemctl stop ifup\/)","87","        end","88","","89","        it \"restarts networking with networking init script\" do","90","          comm.stub_command(\"systemctl stop ifup@eth0.service && systemctl start ifup@eth0.service\", exit_code: 1)","91","          cap.change_host_name(machine, name)","92","          expect(comm.received_commands[4]).to match(\/networking restart\/)","100","          comm.stub_command(\"systemctl stop ifup@eth0.service && systemctl start ifup@eth0.service\", exit_code: 1)","102","          expect(comm.received_commands[4]).to match(\/networking restart\/)","103","        end","104","","105","        it \"restarts the network using ifdown\/ifup\" do","106","          comm.stub_command(\"systemctl stop ifup@eth0.service && systemctl start ifup@eth0.service\", exit_code: 1)","107","          comm.stub_command(\"\/etc\/init.d\/networking restart\", exit_code: 1)","108","          cap.change_host_name(machine, name)","109","          expect(comm.received_commands[4]).to match(\/ifdown\/)","110","          expect(comm.received_commands[4]).to match(\/ifup\/)"],"delete":["83","        it \"restarts the network using service\" do","85","          expect(comm.received_commands[3]).to match(\/networking restart\/)","94","          expect(comm.received_commands[3]).to match(\/networking restart\/)"]}]}},"307c670154b5dba4fe616dbb29c6cf6a9655a3ba":{"changes":{"plugins\/provisioners\/docker\/cap\/debian\/docker_install.rb":"MODIFY"},"diff":{"plugins\/provisioners\/docker\/cap\/debian\/docker_install.rb":[{"add":["16","              comm.sudo(\"curl https:\/\/get.docker.io\/gpg | apt-key add -\")"],"delete":["16","              comm.sudo(\"curl http:\/\/get.docker.io\/gpg | apt-key add -\")"]}]}},"1c650a7fb89436fd070f28648c925caa8c71a7b9":{"changes":{"lib\/vagrant\/machine.rb":"MODIFY","test\/unit\/vagrant\/machine_test.rb":"MODIFY"},"diff":{"lib\/vagrant\/machine.rb":[{"add":["401","        id_content = id_file.read.strip if id_file.file?","402","        if !id_content.to_s.empty?","403","          @id = id_content","404","        end"],"delete":["401","        @id = id_file.read.chomp if id_file.file?"]}],"test\/unit\/vagrant\/machine_test.rb":[{"add":["914","","915","  describe \"#reload\" do","916","    context \"when ID is unset and id file does not exist\" do","917","      it \"should remain nil\" do","918","        expect(subject.id).to be_nil","919","        instance.reload","920","        expect(subject.id).to be_nil","921","      end","922","    end","923","","924","    context \"when id file is set\" do","925","      let(:id_content) { \"test-machine-id\" }","926","","927","      before do","928","        id_file = subject.data_dir.join(\"id\")","929","        File.write(id_file.to_s, id_content)","930","      end","931","","932","      it \"should update the machine id\" do","933","        expect(subject.id).to be_nil","934","        instance.reload","935","        expect(subject.id).to eq(id_content)","936","      end","937","","938","      it \"should notify of the id change when provider is set\" do","939","        expect(provider).to receive(:machine_id_changed)","940","        instance.reload","941","      end","942","","943","      context \"when id file content includes whitespace\" do","944","        let(:id_content) { \"   test-machine-id\\n\" }","945","","946","        it \"should remove all whitespace\" do","947","          instance.reload","948","          expect(instance.id).to eq(\"test-machine-id\")","949","        end","950","      end","951","","952","      context \"when id file content is all whitespace\" do","953","        let(:id_content) { \"\\0\\0\\0\\0\\0\\0\" }","954","","955","        it \"should not update the id\" do","956","          expect(instance.id).to be_nil","957","          instance.reload","958","          expect(instance.id).to be_nil","959","        end","960","      end","961","","962","      context \"when id is already set to value in id file\" do","963","        it \"should not notify of id change\" do","964","          instance.instance_variable_set(:@id, id_content)","965","          expect(provider).not_to receive(:machine_id_changed)","966","          instance.reload","967","          expect(instance.id).to eq(id_content)","968","        end","969","      end","970","    end","971","  end"],"delete":[]}]}},"88ab9f740298104862ef6c6e408109d91ba8baa0":{"changes":{"plugins\/providers\/virtualbox\/driver\/version_4_1.rb":"MODIFY","plugins\/providers\/virtualbox\/driver\/version_4_2.rb":"MODIFY","plugins\/providers\/virtualbox\/driver\/version_4_3.rb":"MODIFY","test\/unit\/plugins\/providers\/virtualbox\/support\/shared\/virtualbox_driver_version_4_x_examples.rb":"MODIFY","plugins\/providers\/virtualbox\/driver\/version_4_0.rb":"MODIFY"},"diff":{"plugins\/providers\/virtualbox\/driver\/version_4_1.rb":[{"add":["272","              elsif netmask = line[\/^NetworkMask:\\s+(.+?)$\/, 1]","273","                info[:netmask] = netmask"],"delete":[]}],"plugins\/providers\/virtualbox\/driver\/version_4_2.rb":[{"add":["295","              elsif netmask = line[\/^NetworkMask:\\s+(.+?)$\/, 1]","296","                info[:netmask] = netmask"],"delete":[]}],"plugins\/providers\/virtualbox\/driver\/version_4_3.rb":[{"add":["304","              elsif netmask = line[\/^NetworkMask:\\s+(.+?)$\/, 1]","305","                info[:netmask] = netmask"],"delete":[]}],"test\/unit\/plugins\/providers\/virtualbox\/support\/shared\/virtualbox_driver_version_4_x_examples.rb":[{"add":["39","          netmask:      '255.255.255.0',","68","          {network_name: 'HostInterfaceNetworking-vboxnet0', network: 'vboxnet0', ip: '172.28.128.2', netmask: '255.255.255.0', lower: '172.28.128.3', upper: '172.28.128.254'},","69","          {network_name: 'HostInterfaceNetworking-vboxnet1', network: 'vboxnet1', ip: '10.0.0.2', netmask: '255.255.255.0', lower: '10.0.0.3', upper: '10.0.0.254'},"],"delete":["67","          {network_name: 'HostInterfaceNetworking-vboxnet0', network: 'vboxnet0', ip: '172.28.128.2', lower: '172.28.128.3', upper: '172.28.128.254'},","68","          {network_name: 'HostInterfaceNetworking-vboxnet1', network: 'vboxnet1', ip: '10.0.0.2', lower: '10.0.0.3', upper: '10.0.0.254'},"]}],"plugins\/providers\/virtualbox\/driver\/version_4_0.rb":[{"add":["267","              elsif netmask = line[\/^NetworkMask:\\s+(.+?)$\/, 1]","268","                info[:netmask] = netmask"],"delete":[]}]}},"8768d7921da2fbd8c1cba11ebb5acefa2e376822":{"changes":{"lib\/vagrant\/action\/builtin\/box_add.rb":"MODIFY"},"diff":{"lib\/vagrant\/action\/builtin\/box_add.rb":[{"add":["36","              u = \"file:\/\/\/#{URI.escape(u)}\""],"delete":["36","              u = \"file:\/\/#{URI.escape(u)}\""]}]}},"ca0fd64ded5ac879116ebb7dda7d76fafd052b68":{"changes":{"templates\/locales\/providers_docker.yml":"MODIFY","plugins\/providers\/docker\/driver\/compose.rb":"MODIFY","test\/unit\/plugins\/providers\/docker\/driver_compose_test.rb":"MODIFY"},"diff":{"templates\/locales\/providers_docker.yml":[{"add":["106","    volume_path_not_expanded: |-","107","      Host path `%{host}` exists as a `volumes` key and is a folder on disk. Vagrant","108","      will not expand this key like it used to and instead leave it as is defined.","109","      If this folder is intended to be used, make sure its full path is defined","110","      in your `volumes` config. More information can be found on volumes in the","111","      docker compose documentation."],"delete":[]}],"plugins\/providers\/docker\/driver\/compose.rb":[{"add":["104","            # if host path is a volume key, don't expand it.","105","            # if both exist (a path and a key) show warning and move on","106","            # otherwise assume it's a realative path and expand the host path","107","            compose_config = get_composition","108","            if compose_config[\"volumes\"] && compose_config[\"volumes\"].keys.include?(host)","109","              if File.directory?(@machine.env.cwd.join(host).to_s)","110","                @machine.env.ui.warn(I18n.t(\"docker_provider.volume_path_not_expanded\",","111","                                           host: host))","112","              end","113","            else","114","              @logger.debug(\"Path expanding #{host} to current Vagrant working dir instead of docker-compose config file directory\")","115","              host = @machine.env.cwd.join(host).to_s","116","            end"],"delete":["104","            host = @machine.env.cwd.join(host).to_s"]}],"test\/unit\/plugins\/providers\/docker\/driver_compose_test.rb":[{"add":["108","    context 'with a volumes key in use for mounting' do","109","      let(:compose_config) { {\"volumes\"=>{\"my_volume_key\"=>\"data\"}} }","110","","111","      before do","112","        params[:volumes] = 'my_volume_key:my\/guest\/path'","113","        allow(Pathname).to receive(:new).with('.\/path').and_call_original","114","        allow(Pathname).to receive(:new).with('my_volume_key').and_call_original","115","        allow(Pathname).to receive(:new).with('\/compose\/cwd\/my_volume_key').and_call_original","116","        allow(subject).to receive(:get_composition).and_return(compose_config)","117","      end","118","","119","      it 'should not expand the relative host directory' do","120","        expect(docker_yml).to receive(:write).with(%r{my_volume_key})","121","      end","122","    end","123",""],"delete":[]}]}},"f0f60a10759633608042a9a15d939e3cdbe8f192":{"changes":{"test\/unit\/plugins\/hosts\/linux\/cap\/nfs_test.rb":"MODIFY","plugins\/hosts\/linux\/cap\/nfs.rb":"MODIFY","templates\/locales\/en.yml":"MODIFY","lib\/vagrant\/errors.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/hosts\/linux\/cap\/nfs_test.rb":[{"add":["81","","82","    it \"throws an exception with at least 2 different nfs options\" do","83","      folders = {\"\/vagrant\"=>","84","                 {:hostpath=>\"\/home\/vagrant\",","85","                  :linux__nfs_options=>[\"rw\",\"all_squash\"]},","86","                 \"\/var\/www\/project\"=>","87","                 {:hostpath=>\"\/home\/vagrant\",","88","                  :linux__nfs_options=>[\"rw\",\"sync\"]}}","89","","90","      expect { cap.nfs_export(env, ui, SecureRandom.uuid, [\"127.0.0.1\"], folders) }.","91","        to raise_error Vagrant::Errors::NFSDupePerms","92","    end","93","","94","    it \"writes only 1 hostpath for multiple exports\" do","95","      folders = {\"\/vagrant\"=>","96","                 {:hostpath=>\"\/home\/vagrant\",","97","                  :linux__nfs_options=>[\"rw\",\"all_squash\"]},","98","                 \"\/var\/www\/otherproject\"=>","99","                 {:hostpath=>\"\/newhome\/otherproject\",","100","                  :linux__nfs_options=>[\"rw\",\"all_squash\"]},","101","                 \"\/var\/www\/project\"=>","102","                 {:hostpath=>\"\/home\/vagrant\",","103","                  :linux__nfs_options=>[\"rw\",\"all_squash\"]}}","104","      valid_id = SecureRandom.uuid","105","      content =<<-EOH","106","\\n# VAGRANT-BEGIN: #{Process.uid} #{valid_id}","107","\"\/home\/vagrant\" 127.0.0.1(rw,all_squash,anonuid=,anongid=,fsid=)","108","\"\/newhome\/otherproject\" 127.0.0.1(rw,all_squash,anonuid=,anongid=,fsid=)","109","# VAGRANT-END: #{Process.uid} #{valid_id}","110","EOH","111","","112","      cap.nfs_export(env, ui, valid_id, [\"127.0.0.1\"], folders)","113","      exports_content = File.read(exports_path)","114","      expect(exports_content).to eq(content)","115","    end","116",""],"delete":[]}],"plugins\/hosts\/linux\/cap\/nfs.rb":[{"add":["31","          folders = folder_dupe_check(folders)","87","        # Takes a hash of folders and removes any duplicate exports that","88","        # share the same hostpath to avoid duplicate entries in \/etc\/exports","89","        # ref: GH-4666","90","        def self.folder_dupe_check(folders)","91","          return_folders = {}","92","          # Group by hostpath to see if there are multiple exports coming","93","          # from the same folder","94","          export_groups = folders.values.group_by { |h| h[:hostpath] }","95","","96","          # We need to check that each group key only has 1 value,","97","          # and if not, check each nfs option. If all nfs options are the same","98","          # we're good, otherwise throw an exception","99","          export_groups.each do |path,group|","100","            if group.size > 1","101","              # if the linux nfs options aren't all the same throw an exception","102","              group1_opts = group.first[:linux__nfs_options]","103","","104","              if !group.all? {|g| g[:linux__nfs_options] == group1_opts}","105","                raise Vagrant::Errors::NFSDupePerms, hostpath: group.first[:hostpath]","106","              else","107","                # if they're the same just pick the first one","108","                return_folders[path] = group.first","109","              end","110","            else","111","              # just return folder, there are no duplicates","112","              return_folders[path] = group.first","113","            end","114","          end","115","          return_folders","116","        end","117",""],"delete":[]}],"templates\/locales\/en.yml":[{"add":["914","      nfs_dupe_permissions: |-","915","        You have attempted to export the same nfs host path at %{hostpath} with","916","        different nfs permissions. Please pick one permission and reload your guest."],"delete":[]}],"lib\/vagrant\/errors.rb":[{"add":["470","    class NFSDupePerms < VagrantError","471","      error_key(:nfs_dupe_permissions)","472","    end","473",""],"delete":[]}]}},"9452e7cc3899b52bc49e1664248ed20aeae0e497":{"changes":{"plugins\/providers\/hyperv\/scripts\/import_vm_vmcx.ps1":"MODIFY","plugins\/providers\/hyperv\/scripts\/import_vm_xml.ps1":"MODIFY"},"diff":{"plugins\/providers\/hyperv\/scripts\/import_vm_vmcx.ps1":[{"add":["12","    [string]$maxmemory=$null,","26","    Path = $vm_config_file","90","if ($enable_virtualization_extensions -eq \"True\") {","141","        foreach($drive in $controller.Drives){"],"delete":["12","    [string]$maxmemory=$null,   ","26","    Path = $vm_config_file ","90","if ($enable_virtualization_extensions) {","141","        foreach($drive in $controller.Drives){            "]}],"plugins\/providers\/hyperv\/scripts\/import_vm_xml.ps1":[{"add":["8","    [string]$maxmemory=$null,","165","    # Set EFI secure boot","174","if ($enable_virtualization_extensions -eq \"True\") {"],"delete":["8","    [string]$maxmemory=$null,   ","165","    # Set EFI secure boot ","174","if ($enable_virtualization_extensions) {"]}]}},"4ed93fb9ef7c990f59722d47ad4ce69ee16e115c":{"changes":{"test\/unit\/plugins\/provisioners\/puppet\/provisioner\/puppet_test.rb":"ADD","plugins\/provisioners\/puppet\/provisioner\/puppet.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/provisioners\/puppet\/provisioner\/puppet_test.rb":[{"add":[],"delete":[]}],"plugins\/provisioners\/puppet\/provisioner\/puppet.rb":[{"add":[],"delete":["201","          else","202","            options << \"--manifestdir #{manifests_guest_path}\""]}]}},"1c620852b64a4c9f720a3515aa43f27394eeabb3":{"changes":{"test\/unit\/plugins\/synced_folders\/rsync\/helper_test.rb":"MODIFY","plugins\/synced_folders\/rsync\/helper.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/synced_folders\/rsync\/helper_test.rb":[{"add":["35","        to eq(\/^foo\\\/.[^\\\/]*\/)","40","        to eq(\/^foo\\\/\/)","45","        to eq(\/^fo.*o\\\/.[^\\\/]*\/)","50","        to eq(\/^fo[^\\\/]*o\\\/.[^\\\/]*\/)"],"delete":["35","        to eq(\/foo\\\/\/)","40","        to eq(\/foo\/)","45","        to eq(\/fo.*o\/)","50","        to eq(\/fo[^\\\/]*o\/)"]}],"plugins\/synced_folders\/rsync\/helper.rb":[{"add":["32","        exclude = \"#{exclude}\/\" if !exclude.end_with?(\"\/\")","33","        exclude = \"^#{exclude}\"","34","        exclude += \".*\" if !start_anchor","35",""],"delete":[]}]}},"e09848ca59585396d60955a719e1a1947d5adc34":{"changes":{"test\/unit\/plugins\/provisioners\/ansible\/provisioner_test.rb":"MODIFY","plugins\/provisioners\/ansible\/provisioner\/base.rb":"MODIFY","CHANGELOG.md":"MODIFY"},"diff":{"test\/unit\/plugins\/provisioners\/ansible\/provisioner_test.rb":[{"add":["869","          config.extra_vars = { var1: %Q(string with 'apo$trophe$', \\\\, \" and =), var2: { x: 42 } }","872","        it_should_set_optional_arguments({ \"extra_vars\" => \"--extra-vars={\\\"var1\\\":\\\"string with 'apo$trophe$', \\\\\\\\, \\\\\\\" and =\\\",\\\"var2\\\":{\\\"x\\\":42}}\" })","894","        config.extra_vars = { var1: %Q(string with 'apo$trophe$', \\\\, \" and =), var2: { x: 42 } }","915","      it_should_set_optional_arguments({  \"extra_vars\"          => \"--extra-vars={\\\"var1\\\":\\\"string with 'apo$trophe$', \\\\\\\\, \\\\\\\" and =\\\",\\\"var2\\\":{\\\"x\\\":42}}\",","940","          .with(%Q(PYTHONUNBUFFERED=1 ANSIBLE_FORCE_COLOR=true ANSIBLE_ROLES_PATH='\/up\/to the stars' ANSIBLE_CONFIG='#{existing_file}' ANSIBLE_HOST_KEY_CHECKING=true ANSIBLE_SSH_ARGS='-o IdentitiesOnly=yes -o IdentityFile=\/my\/key1 -o IdentityFile=\/my\/key2 -o ForwardAgent=yes -o ControlMaster=no -o ControlMaster=auto -o ControlPersist=60s' ansible-playbook --connection=ssh --timeout=30 --ask-sudo-pass --ask-vault-pass --limit=\"machine*:&vagrant:!that_one\" --inventory-file=#{generated_inventory_dir} --extra-vars=\\\\{\\\\\"var1\\\\\":\\\\\"string\\\\ with\\\\ \\\\'apo\\\\$trophe\\\\$\\\\',\\\\ \\\\\\\\\\\\\\\\,\\\\ \\\\\\\\\\\\\"\\\\ and\\\\ \\\\=\\\\\",\\\\\"var2\\\\\":\\\\{\\\\\"x\\\\\":42\\\\}\\\\} --sudo --sudo-user=deployer -vvv --vault-password-file=#{existing_file} --tags=db,www --skip-tags=foo,bar --start-at-task=\"joe's awesome task\" --why-not --su-user=foot --ask-su-pass --limit=all --private-key=.\/myself.key --extra-vars='{\\\"var3\\\":\\\"foo\\\"}' playbook.yml))"],"delete":["869","          config.extra_vars = { var1: %Q(string with 'apostrophes', \\\\, \" and =), var2: { x: 42 } }","872","        it_should_set_optional_arguments({ \"extra_vars\" => \"--extra-vars={\\\"var1\\\":\\\"string with 'apostrophes', \\\\\\\\, \\\\\\\" and =\\\",\\\"var2\\\":{\\\"x\\\":42}}\" })","894","        config.extra_vars = { var1: %Q(string with 'apostrophes', \\\\, \" and =), var2: { x: 42 } }","915","      it_should_set_optional_arguments({  \"extra_vars\"          => \"--extra-vars={\\\"var1\\\":\\\"string with 'apostrophes', \\\\\\\\, \\\\\\\" and =\\\",\\\"var2\\\":{\\\"x\\\":42}}\",","940","          .with(%Q(PYTHONUNBUFFERED=1 ANSIBLE_FORCE_COLOR=true ANSIBLE_ROLES_PATH='\/up\/to the stars' ANSIBLE_CONFIG='#{existing_file}' ANSIBLE_HOST_KEY_CHECKING=true ANSIBLE_SSH_ARGS='-o IdentitiesOnly=yes -o IdentityFile=\/my\/key1 -o IdentityFile=\/my\/key2 -o ForwardAgent=yes -o ControlMaster=no -o ControlMaster=auto -o ControlPersist=60s' ansible-playbook --connection=ssh --timeout=30 --ask-sudo-pass --ask-vault-pass --limit=\"machine*:&vagrant:!that_one\" --inventory-file=#{generated_inventory_dir} --extra-vars=\"{\\\\\"var1\\\\\":\\\\\"string with 'apostrophes', \\\\\\\\\\\\\\\\, \\\\\\\\\\\\\" and =\\\\\",\\\\\"var2\\\\\":{\\\\\"x\\\\\":42}}\" --sudo --sudo-user=deployer -vvv --vault-password-file=#{existing_file} --tags=db,www --skip-tags=foo,bar --start-at-task=\"joe's awesome task\" --why-not --su-user=foot --ask-su-pass --limit=all --private-key=.\/myself.key --extra-vars='{\\\"var3\\\":\\\"foo\\\"}' playbook.yml))"]}],"plugins\/provisioners\/ansible\/provisioner\/base.rb":[{"add":["72","              shell_args << %Q(%s=%s) % [$1, $2.shellescape]"],"delete":["72","              shell_args << %Q(%s=\"%s\") % [$1, $2.gsub('\\\\', '\\\\\\\\\\\\').gsub('\"', %Q(\\\\\"))]"]}],"CHANGELOG.md":[{"add":["15","- provisioners\/ansible_local: Extra variables are no longer truncated when a dollar ($) character is present [GH-7735]"],"delete":[]}]}},"be90f6b1da85b6dd9e52617f344004cf8253718e":{"changes":{"plugins\/guests\/fedora\/cap\/change_host_name.rb":"MODIFY"},"diff":{"plugins\/guests\/fedora\/cap\/change_host_name.rb":[{"add":["50","          replace    = \"\\\\1 #{fqdn} #{short_hostname} \\\\3\"","74","end"],"delete":["50","          replace    = \"\\\\1 #{fqdn} #{short_hostname}\"","74","end"]}]}},"6c8c15b2ab22f572b8423db0f25db13842e26b9a":{"changes":{"plugins\/guests\/ubuntu\/cap\/change_host_name.rb":"MODIFY"},"diff":{"plugins\/guests\/ubuntu\/cap\/change_host_name.rb":[{"add":["8","        def update_etc_hostname","9","          super unless vivid?","10","          sudo(\"hostnamectl set-hostname '#{short_hostname}'\")","11","        end","12","","17","          elsif vivid?","18","            # Service runs via hostnamectl","25","          os_version(\"hardy\")","26","        end","27","","28","        def vivid?","29","          os_version(\"vivid\")","35","","36","      private","37","","38","        def os_version(name)","39","          machine.communicate.test(\"[ `lsb_release -c -s` = #{name} ]\")","40","        end"],"delete":["18","          machine.communicate.test(\"[ `lsb_release -c -s` = hardy ]\")"]}]}},"bf55e43460086c5946950284447307214e6b0e5a":{"changes":{"test\/unit\/plugins\/synced_folders\/rsync\/default_unix_cap_test.rb":"ADD","plugins\/synced_folders\/rsync\/default_unix_cap.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/synced_folders\/rsync\/default_unix_cap_test.rb":[{"add":[],"delete":[]}],"plugins\/synced_folders\/rsync\/default_unix_cap.rb":[{"add":["31","        if(opts[:exclude] && !Array(opts[:exclude]).empty?)"],"delete":["31","        if(opts[:exclude])"]}]}},"99985449953d7c21fc2c4f6a4bb12f5de0f0128d":{"changes":{"plugins\/provisioners\/puppet\/provisioner\/puppet_server.rb":"MODIFY","plugins\/provisioners\/puppet\/config\/puppet_server.rb":"MODIFY","website\/docs\/source\/v2\/provisioning\/puppet_agent.html.md":"MODIFY"},"diff":{"plugins\/provisioners\/puppet\/provisioner\/puppet_server.rb":[{"add":["19","          if @config.binary_path","20","            test_cmd = \"test -x #{@config.binary_path}\/#{binary}\"","21","          else","22","            test_cmd = \"which #{binary}\"","23","          end","24","","26","            test_cmd,","91","","92","          puppet_bin = \"puppet\"","93","          if @config.binary_path","94","            puppet_bin = File.join(@config.binary_path, puppet_bin)","95","          end","97","          command = \"#{facter} #{puppet_bin} agent --onetime --no-daemonize #{options} \" +"],"delete":["20","            \"which #{binary}\",","86","          command = \"#{facter}puppet agent --onetime --no-daemonize #{options} \" +"]}],"plugins\/provisioners\/puppet\/config\/puppet_server.rb":[{"add":["4","        # The path to Puppet's bin\/ directory.","5","        # @return [String]","6","        attr_accessor :binary_path","7","","18","          @binary_path             = UNSET_VALUE","36","          @binary_path      = nil if @binary_path == UNSET_VALUE"],"delete":[]}],"website\/docs\/source\/v2\/provisioning\/puppet_agent.html.md":[{"add":["28","* `binary_path` (string) - Path on the guest to Puppet's `bin\/` directory.","29",""],"delete":[]}]}},"562ed26533a072b4a255ba7d9fe31b1260c367e6":{"changes":{"test\/unit\/vagrant\/action\/builtin\/box_remove_test.rb":"MODIFY","lib\/vagrant\/box_collection.rb":"MODIFY","lib\/vagrant\/action\/builtin\/box_remove.rb":"MODIFY"},"diff":{"test\/unit\/vagrant\/action\/builtin\/box_remove_test.rb":[{"add":["32","    expect(box_collection).to receive(:clean_up).with(box)","33","      .and_return(true)","54","    expect(box_collection).to receive(:clean_up).with(box)","55","      .and_return(false)","76","    expect(box_collection).to receive(:clean_up).with(box)","77","      .and_return(false)","86","  it \"deletes the whole directory of the box if it's the last box on the system\" do","87","    box_collection.stub(","88","      all: [","89","        [\"foo\", \"1.0\", :virtualbox],","90","      ])","91","","92","    env[:box_name] = \"foo\"","93","","94","    expect(box_collection).to receive(:find).with(","95","      \"foo\", :virtualbox, \"1.0\").and_return(box)","96","    expect(box_collection).to receive(:clean_up).with(box)","97","      .and_return(true)","98","","99","    subject.call(env)","100","  end","101","","134","      expect(box_collection).to receive(:clean_up).with(box)","135","        .and_return(true)","149","      expect(box_collection).to receive(:clean_up).with(box)","150","        .and_return(true)"],"delete":[]}],"lib\/vagrant\/box_collection.rb":[{"add":["15","    VAGRANT_SLASH = \"-VAGRANTSLASH-\"","16","    VAGRANT_COLON = \"-VAGRANTCOLON-\"","350","    # Removes the whole directory of a given box if there are no","351","    # other versions nor providers of the box exist.","352","    def clean_up(box)","353","      return false if exists?(box.name)","354","","355","      box_directory = box.name","356","        .gsub('\/', VAGRANT_SLASH)","357","        .gsub(':', VAGRANT_COLON)","358","","359","      path = File.join(directory, box_directory)","360","      FileUtils.rm_r(path)","361","    end","362","","371","      name.gsub!(\":\", VAGRANT_COLON) if Util::Platform.windows?","372","      name.gsub!(\"\/\", VAGRANT_SLASH)","379","      name.gsub!(VAGRANT_COLON, \":\")","380","      name.gsub!(VAGRANT_SLASH, \"\/\")","457","","458","    # Checks if a box with a given name exists.","459","    def exists?(box_name)","460","      all.any? { |box| box.first.eql?(box_name) }","461","    end"],"delete":["356","      name.gsub!(\":\", \"-VAGRANTCOLON-\") if Util::Platform.windows?","357","      name.gsub!(\"\/\", \"-VAGRANTSLASH-\")","364","      name.gsub!(\"-VAGRANTCOLON-\", \":\")","365","      name.gsub!(\"-VAGRANTSLASH-\", \"\/\")"]}],"lib\/vagrant\/action\/builtin\/box_remove.rb":[{"add":["108","          env[:box_collection].clean_up(box)"],"delete":[]}]}},"f2bf18e56be36ed4bfbfe42fe20ab9147910ab3f":{"changes":{"plugins\/commands\/login\/locales\/en.yml":"MODIFY","test\/unit\/plugins\/commands\/login\/middleware\/add_authentication_test.rb":"MODIFY","lib\/vagrant\/shared_helpers.rb":"MODIFY","plugins\/commands\/login\/middleware\/add_authentication.rb":"MODIFY"},"diff":{"plugins\/commands\/login\/locales\/en.yml":[{"add":["2","    middleware:","3","      authentication:","4","        different_target: |-","5","          Vagrant has detected a custom Vagrant server in use for downloading","6","          box files. An authentication token is currently set which will be","7","          added to the box request. If the custom Vagrant server should not","8","          be receiving the authentication token, please unset it.","9","","10","            Known Vagrant server:  %{known_host}","11","            Custom Vagrant server: %{custom_host}","12","","13","          Press ctrl-c to cancel..."],"delete":[]}],"test\/unit\/plugins\/commands\/login\/middleware\/add_authentication_test.rb":[{"add":["8","  let(:ui) { double(\"ui\") }","11","    ui: ui","15","  let(:server_url) { \"http:\/\/vagrantcloud.com\" }","21","    allow(ui).to receive(:warn)","67","    it \"does not append the access token to vagrantcloud.com URLs if Atlas\" do","70","      allow(subject).to receive(:sleep)","71","","72","      token = \"foobarbaz\"","73","      VagrantPlugins::LoginCommand::Client.new(iso_env).store_token(token)","74","","75","      original = [","76","        \"http:\/\/google.com\/box.box\",","77","        \"http:\/\/vagrantcloud.com\/foo.box\",","78","        \"http:\/\/vagrantcloud.com\/bar.box?arg=true\",","79","      ]","80","","81","      expected = original.dup","82","","83","      env[:box_urls] = original.dup","84","      subject.call(env)","85","","86","      expect(env[:box_urls]).to eq(expected)","87","    end","88","","89","    it \"warns when adding token to custom server\" do","90","      server_url = \"https:\/\/example.com\"","91","      allow(Vagrant).to receive(:server_url).and_return(server_url)","99","        \"http:\/\/example.com\/bar.box\"","103","      expected.last.replace(expected.last + \"?access_token=#{token}\")","104","","105","      expect(subject).to receive(:sleep).once","106","      expect(ui).to receive(:warn).once","114","    it \"modifies host URL to target if authorized host\" do","115","      originals = VagrantPlugins::LoginCommand::AddAuthentication::","116","        REPLACEMENT_HOSTS.map{ |h| \"http:\/\/#{h}\/box.box\" }","117","      expected = \"http:\/\/#{VagrantPlugins::LoginCommand::AddAuthentication::TARGET_HOST}\/box.box\"","118","      env[:box_urls] = originals","119","      subject.call(env)","120","      env[:box_urls].each do |url|","121","        expect(url).to eq(expected)","122","      end","123","    end","124",""],"delete":["13","  let(:server_url) { \"http:\/\/foo.com\" }","64","    it \"appends the access token to vagrantcloud.com URLs if Atlas\" do","73","        \"http:\/\/app.vagrantup.com\/foo.box\",","75","        \"http:\/\/vagrantcloud.com\/bar.box?arg=true\",","79","      expected[1] = \"#{original[1]}?access_token=#{token}\"","80","      expected[2] = \"#{original[2]}?access_token=#{token}\"","81","      expected[3] = \"#{original[3]}&access_token=#{token}\""]}],"lib\/vagrant\/shared_helpers.rb":[{"add":["12","  DEFAULT_SERVER_URL = \"https:\/\/vagrantcloud.com\".freeze"],"delete":["12","  DEFAULT_SERVER_URL = \"https:\/\/vagrantcloud.com\""]}],"plugins\/commands\/login\/middleware\/add_authentication.rb":[{"add":["8","      REPLACEMENT_HOSTS = [","9","        \"app.vagrantup.com\".freeze,","10","        \"atlas.hashicorp.com\".freeze","12","      TARGET_HOST = \"vagrantcloud.com\".freeze","13","      CUSTOM_HOST_NOTIFY_WAIT = 5","17","        LoginCommand::Plugin.init!","24","        env[:box_urls].map! do |url|","25","          u = URI.parse(url)","26","          if u.host != TARGET_HOST && REPLACEMENT_HOSTS.include?(u.host)","27","            u.host = TARGET_HOST","28","          end","29","          u.to_s","30","        end","31","","32","        server_uri = URI.parse(Vagrant.server_url.to_s)","33","","34","        if token && !server_uri.host.to_s.empty?","35","          if server_uri.host != TARGET_HOST","36","            env[:ui].warn(I18n.t(\"login_command.middleware.authentication.different_target\",","37","              custom_host: server_uri.host, known_host: TARGET_HOST) + \"\\n\")","38","            sleep CUSTOM_HOST_NOTIFY_WAIT","39","          end","44","            if u.host == server_uri.host","60","      end.freeze"],"delete":["8","      ALLOWED_AUTHENTICATION_HOSTS = %w[","9","        app.vagrantup.com","10","        atlas.hashicorp.com","11","        vagrantcloud.com","22","        if token && Vagrant.server_url","23","          server_uri = URI.parse(Vagrant.server_url)","27","            replace = u.host == server_uri.host","29","            if !replace","30","              if ALLOWED_AUTHENTICATION_HOSTS.include?(u.host) &&","31","                  ALLOWED_AUTHENTICATION_HOSTS.include?(server_uri.host)","32","                replace = true","33","              end","34","            end","35","","36","            if replace","52","      end"]}]}},"e5e0274ef504b989a8673aa0409d97201e2894f9":{"changes":{"templates\/locales\/providers_docker.yml":"MODIFY","plugins\/providers\/hyperv\/action.rb":"MODIFY","plugins\/providers\/docker\/errors.rb":"MODIFY","plugins\/providers\/docker\/action.rb":"MODIFY"},"diff":{"templates\/locales\/providers_docker.yml":[{"add":["119","      not_created: |-","120","        The container hasn't been created yet.","121","      not_running: |-","122","        The container is not currently running."],"delete":[]}],"plugins\/providers\/hyperv\/action.rb":[{"add":["180","              raise Vagrant::Errors::VMNotCreatedError","185","                raise Vagrant::Errors::VMNotRunningError","199","              raise Vagrant::Errors::VMNotCreatedError","204","                raise Vagrant::Errors::VMNotRunningError"],"delete":["180","              b2.use Message, I18n.t(\"vagrant_hyperv.message_not_created\")","181","              next","186","                b3.use Message, I18n.t(\"vagrant_hyperv.message_not_running\")","187","                next","201","              b2.use Message, I18n.t(\"vagrant_hyperv.message_not_created\")","202","              next","207","                b3.use Message, I18n.t(\"vagrant_hyperv.message_not_running\")","208","                next"]}],"plugins\/providers\/docker\/errors.rb":[{"add":["11","      class ContainerNotRunningError < DockerError","12","        error_key(:not_running)","13","      end","14","","15","      class ContainerNotCreatedError < DockerError","16","        error_key(:not_created)","17","      end","18",""],"delete":[]}],"plugins\/providers\/docker\/action.rb":[{"add":["179","              raise Errors::ContainerNotCreatedError","184","                raise Errors::ContainerNotRunningError","199","              raise Errors::ContainerNotCreatedError","204","                raise Errors::ContainerNotRunningError"],"delete":["179","              b2.use Message, I18n.t(\"docker_provider.messages.not_created\")","180","              next","185","                b3.use Message, I18n.t(\"docker_provider.messages.not_running\")","186","                next","201","              b2.use Message, I18n.t(\"docker_provider.messages.not_created\")","202","              next","207","                raise Vagrant::Errors::VMNotRunningError"]}]}},"6ae1f4a2f6dadcc374011c1cc0767c7c5a2f25b6":{"changes":{"lib\/vagrant.rb":"MODIFY"},"diff":{"lib\/vagrant.rb":[{"add":["69","  require \"ffi-win32-extensions\""],"delete":["69","  require \"win32-ffi-extensions\""]}]}},"70e9079449333fbb11dd0a5cb7026d1986cc505b":{"changes":{"plugins\/provisioners\/salt\/config.rb":"MODIFY"},"diff":{"plugins\/provisioners\/salt\/config.rb":[{"add":["97","        @install_command     = nil if @install_command == UNSET_VALUE"],"delete":["97","        @install_command    = nil if @install_command == UNSET_VALUE"]}]}},"5f383b546c57c8cdebcd697dfe287c4bdc851207":{"changes":{"plugins\/guests\/linux\/cap\/read_ip_address.rb":"MODIFY"},"diff":{"plugins\/guests\/linux\/cap\/read_ip_address.rb":[{"add":["7","          machine.communicate.sudo(command) do |type, data|"],"delete":["7","          machine.communicate.execute(command) do |type, data|"]}]}},"3ca8089920a76412c55745b006ef170b39d1c08e":{"changes":{"plugins\/communicators\/ssh\/communicator.rb":"MODIFY"},"diff":{"plugins\/communicators\/ssh\/communicator.rb":[{"add":[],"delete":["11","require 'net\/sftp'"]}]}},"6671cc698603d8859be010d1dcff2b9c024116e9":{"changes":{"templates\/guests\/arch\/network_static6.erb":"MODIFY","templates\/guests\/arch\/network_dhcp.erb":"MODIFY","plugins\/guests\/arch\/cap\/configure_networks.rb":"MODIFY","templates\/guests\/arch\/network_static.erb":"MODIFY"},"diff":{"templates\/guests\/arch\/network_static6.erb":[{"add":["0","[Match]","1","Name=<%= options[:device] %>","2","","3","[Network]","4","Description=A basic static ethernet connection","5","Address=<%= options[:ip]%>\/<%= options[:netmask] %>","7","Gateway=<%= options[:gateway] %>"],"delete":["0","Connection=ethernet","1","Description='A basic IPv6 ethernet connection'","2","Interface=<%= options[:device] %>","3","IP6=static","4","Address6=('<%= options[:ip]%>\/<%= options[:netmask] %>')","6","Gateway6='<%= options[:gateway] %>'"]}],"templates\/guests\/arch\/network_dhcp.erb":[{"add":["0","[Match]","1","Name=<%= options[:device] %>","2","","3","[Network]","4","Description=A basic DHCP ethernet connection","5","DHCP=ipv4"],"delete":["0","Description='A basic dhcp ethernet connection'","1","Interface=<%= options[:device] %>","2","Connection=ethernet","3","IP=dhcp"]}],"plugins\/guests\/arch\/cap\/configure_networks.rb":[{"add":["43","              chmod 0644 '#{remote_path}' &&","44","              mv '#{remote_path}' '\/etc\/systemd\/network\/#{network[:device]}.network' &&","45","              networkctl reload"],"delete":["43","              mv '#{remote_path}' '\/etc\/netctl\/#{network[:device]}' &&","44","              ip link set '#{network[:device]}' down &&","45","              netctl restart '#{network[:device]}' &&","46","              netctl enable '#{network[:device]}'"]}],"templates\/guests\/arch\/network_static.erb":[{"add":["0","[Match]","1","Name=<%= options[:device] %>","2","","3","[Network]","4","Description=A basic static ethernet connection","5","Address=<%= options[:ip]%>\/<%= options[:netmask] %>","7","Gateway=<%= options[:gateway] %>"],"delete":["0","Connection=ethernet","1","Description='A basic static ethernet connection'","2","Interface=<%= options[:device] %>","3","IP=static","4","Address=('<%= options[:ip]%>\/<%= options[:netmask] %>')","6","Gateway='<%= options[:gateway] %>'"]}]}},"96b011b39ec2e96f8756f40c43874eb4b6e29fd9":{"changes":{"plugins\/guests\/redhat\/cap\/change_host_name.rb":"MODIFY"},"diff":{"plugins\/guests\/redhat\/cap\/change_host_name.rb":[{"add":["5","          new(machine, name).change!","18","          case machine.guest.capability(\"flavor\")","19","          when :rhel_7","20","            update_hostname_rhel7","21","            update_etc_hosts","22","          else","23","            update_sysconfig","24","            update_hostname","25","            update_etc_hosts","26","            update_dhcp_hostnames","27","            restart_networking","28","          end","60","        def update_hostname_rhel7","61","          sudo \"hostnamectl set-hostname #{fqdn}\"","62","        end","63",""],"delete":["5","          case machine.guest.capability(\"flavor\")","6","          when :rhel_7","7","            change_host_name_rhel7(machine, name)","8","          else","9","            new(machine, name).change!","10","          end","11","        end","12","","13","        def self.change_host_name_rhel7(machine, name)","14","          machine.communicate.sudo(\"hostnamectl set-hostname #{name}\")","27","          update_sysconfig","28","          update_hostname","29","          update_etc_hosts","30","          update_dhcp_hostnames","31","          restart_networking"]}]}},"a7ee56459b2c990550c4fc33883c55cf4145f463":{"changes":{"test\/unit\/plugins\/provisioners\/ansible\/provisioner_test.rb":"MODIFY","test\/unit\/plugins\/provisioners\/ansible\/config\/shared.rb":"MODIFY","plugins\/provisioners\/ansible\/config\/base.rb":"MODIFY","plugins\/provisioners\/ansible\/provisioner\/base.rb":"MODIFY","test\/unit\/plugins\/provisioners\/ansible\/config\/guest_test.rb":"MODIFY","templates\/locales\/en.yml":"MODIFY","plugins\/provisioners\/ansible\/provisioner\/guest.rb":"MODIFY","plugins\/provisioners\/ansible\/config\/host.rb":"MODIFY","CHANGELOG.md":"MODIFY","plugins\/provisioners\/ansible\/config\/guest.rb":"MODIFY","test\/unit\/plugins\/provisioners\/ansible\/config\/host_test.rb":"MODIFY","plugins\/provisioners\/ansible\/provisioner\/host.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/provisioners\/ansible\/provisioner_test.rb":[{"add":["61","    subject.stub(:check_path)","62","","207","    describe 'checking existence of Ansible configuration files' do","208","","209","      describe 'when the playbook file does not exist' do","210","        it \"raises an error\", skip_before: true, skip_after: true do","211","","212","          subject.stub(:check_path).and_raise(VagrantPlugins::Ansible::Errors::AnsibleError,","213","            _key: :config_file_not_found,","214","            config_option: \"playbook\",","215","            path: \"\/home\/wip\/test\/invalid_path.yml\",","216","            system: \"host\")","217","","218","          config.playbook = \"\/home\/wip\/test\/invalid_path.yml\"","219","          config.finalize!","220","","221","          expect {subject.provision}.to raise_error(VagrantPlugins::Ansible::Errors::AnsibleError,","222","            \"`playbook` does not exist on the host: \/home\/wip\/test\/invalid_path.yml\")","223","        end","224","      end","225","","226","      describe 'when the inventory path does not exist' do","227","        it \"raises an error\"","228","      end","229","","230","      describe 'when the extra_vars file does not exist' do","231","        it \"raises an error\"","232","      end","233","","234","      describe 'when the galaxy_role_file does not exist' do","235","        it \"raises an error\"","236","      end","237","","238","      describe 'when the vault_password_file does not exist' do","239","        it \"raises an error\"","240","      end","241","","242","    end","243",""],"delete":[]}],"test\/unit\/plugins\/provisioners\/ansible\/config\/shared.rb":[{"add":["61","  it \"converts a raw_arguments option defined as a String into an Array\" do","62","    subject.raw_arguments = \"--foo=bar\"","66","    expect(subject.raw_arguments).to eql(%w(--foo=bar))","81","  it \"it collects and returns all detected errors\" do","82","    subject.playbook = nil","83","    subject.extra_vars = [\"var1\", 3, \"var2\", 5]","84","    subject.raw_arguments = { arg1: 1, arg2: \"foo\" }","88","","89","    expect(result[provisioner_label].size).to eql(3)","90","    expect(result[provisioner_label]).to include(","91","      I18n.t(\"vagrant.provisioners.ansible.errors.no_playbook\"))","92","    expect(result[provisioner_label]).to include(","93","      I18n.t(\"vagrant.provisioners.ansible.errors.extra_vars_invalid\",","94","             type:  subject.extra_vars.class.to_s,","95","             value: subject.extra_vars.to_s))","96","    expect(result[provisioner_label]).to include(","97","      I18n.t(\"vagrant.provisioners.ansible.errors.raw_arguments_invalid\",","98","             type:  subject.raw_arguments.class.to_s,","99","             value: subject.raw_arguments.to_s))"],"delete":["31","  it \"passes if the playbook option refers to an existing file\" do","32","    subject.finalize!","33","","34","    result = subject.validate(machine)","35","    expect(result[provisioner_label]).to eql([])","36","  end","37","","48","  it \"passes if the extra_vars option refers to an existing file\" do","49","    subject.extra_vars = existing_file","50","    subject.finalize!","51","","52","    result = subject.validate(machine)","53","    expect(result[provisioner_label]).to eql([])","54","  end","55","","64","  # FIXME:","65","  # The guest-based config should actually NOT return this error,","66","  # but only display a warning (similarly to GH-6764 and 4e451c6)","67","  it \"returns an error if the extra_vars option refers to a file that does not exist\" do","68","    subject.extra_vars = non_existing_file","69","    subject.finalize!","70","","71","    result = subject.validate(machine)","72","    expect(result[provisioner_label]).to eql([","73","      I18n.t(\"vagrant.provisioners.ansible.errors.extra_vars_invalid\",","74","             type:  subject.extra_vars.class.to_s,","75","             value: subject.extra_vars.to_s)","76","    ])","77","  end","78","","91","  it \"passes if inventory_path refers to an existing location\" do","92","    subject.inventory_path = existing_file","96","    expect(result[provisioner_label]).to eql([])","111","  it \"converts a raw_arguments option defined as a String into an Array\" do","112","    subject.raw_arguments = \"--foo=bar\"","116","    expect(subject.raw_arguments).to eql(%w(--foo=bar))"]}],"plugins\/provisioners\/ansible\/config\/base.rb":[{"add":["76","          # Validate that extra_vars is either a Hash or a String (for a file path)","80","              # Accept the usage of '@' prefix in Vagrantfile","81","              # (e.g. '@vars.yml' and 'vars.yml' are both supported)","84","              @extra_vars = '@' + extra_vars_path"],"delete":["76","          if playbook","77","            check_path_is_a_file(machine, playbook, \"vagrant.provisioners.ansible.errors.playbook_path_invalid\")","78","          end","79","","80","          if inventory_path","81","            check_path_exists(machine, inventory_path, \"vagrant.provisioners.ansible.errors.inventory_path_invalid\")","82","          end","83","","84","          if galaxy_role_file","85","            check_path_is_a_file(machine, galaxy_role_file, \"vagrant.provisioners.ansible.errors.galaxy_role_file_invalid\")","86","          end","87","","88","          if vault_password_file","89","            check_path_is_a_file(machine, vault_password_file, \"vagrant.provisioners.ansible.errors.vault_password_file_invalid\")","90","          end","91","","92","          # Validate that extra_vars is either a hash, or a path to an existing file","96","              # Accept the usage of '@' prefix in Vagrantfile (e.g. '@vars.yml'","97","              # and 'vars.yml' are both supported)","100","              extra_vars_is_valid = check_path_is_a_file(machine, extra_vars_path)","101","              if extra_vars_is_valid","102","                @extra_vars = '@' + extra_vars_path","103","              end"]}],"plugins\/provisioners\/ansible\/provisioner\/base.rb":[{"add":["27","        def check_files_existence","28","          check_path_is_a_file config.playbook, :playbook","29","","30","          check_path_exists config.inventory_path, :inventory_path if config.inventory_path","31","          check_path_is_a_file config.extra_vars[1..-1], :extra_vars if has_an_extra_vars_file_argument","32","          check_path_is_a_file config.galaxy_role_file, :galaxy_role_file if config.galaxy_role_file","33","          check_path_is_a_file config.vault_password_file, :vault_password if config.vault_password_file","34","        end","35","","209","        def has_an_extra_vars_file_argument","210","          config.extra_vars && config.extra_vars.kind_of?(String) && config.extra_vars =~ \/^@.+$\/","211","        end","212","","214","          if has_an_extra_vars_file_argument"],"delete":["201","          if config.extra_vars.kind_of?(String) and config.extra_vars =~ \/^@.+$\/"]}],"test\/unit\/plugins\/provisioners\/ansible\/config\/guest_test.rb":[{"add":["58","      subject.playbook = existing_file","61","    it_behaves_like \"an Ansible provisioner\", \"\/vagrant\", \"local\""],"delete":["16","  let(:non_existing_file) { \"this\/path\/does\/not\/exist\" }","59","      machine.stub(communicate: communicator)","62","    context \"when the machine is not ready to communicate\" do","63","      before do","64","        allow(communicator).to receive(:ready?).and_return(false)","65","      end","66","","67","      it \"cannot check the existence of remote file\" do","68","        subject.playbook = non_existing_file","69","        subject.finalize!","70","","71","        result = subject.validate(machine)","72","        expect(result[\"ansible local provisioner\"]).to eql([])","73","        # FIXME: commented out because this `communicator.ready?` stub is not working as expected","74","        # expect(communicator).to receive(:ready?).ordered","75","        # Note that communicator mock will fail if it receives an unexpected message,","76","        # which is part of this spec.","77","      end","78","    end","79","","80","    context \"when the machine is ready to communicate\" do","81","      before do","82","        allow(communicator).to receive(:ready?).and_return(true)","83","        allow(communicator).to receive(:test).and_return(false)","84","","85","        allow(communicator).to receive(:test) do |arg1|","86","          arg1.include?(\"#{existing_file}\")","87","        end","88","","89","        stubbed_ui = Vagrant::UI::Colored.new","90","        machine.stub(ui: stubbed_ui)","91","        allow(machine.ui).to receive(:warn)","92","","93","        subject.playbook = existing_file","94","      end","95","","96","      it_behaves_like \"an Ansible provisioner\", \"\/vagrant\", \"local\"","97","","98","      it \"only shows a warning if the playbook file does not exist\" do","99","        subject.playbook = non_existing_file","100","        subject.finalize!","101","","102","        result = subject.validate(machine)","103","        expect(result[\"ansible remote provisioner\"]).to be_nil","104","","105","        # FIXME","106","        # expect(machine).to receive(:ui).with { |warning_text|","107","        #     expect(warning_text).to eq(\"`playbook` does not exist on the guest: \/vagrant\/this\/path\/does\/not\/exist\")","108","        #   }","109","      end","110","","111","      it \"only shows a warning if inventory_path is specified, but does not exist\" do","112","        subject.inventory_path = non_existing_file","113","        subject.finalize!","114","","115","        result = subject.validate(machine)","116","        expect(result[\"ansible remote provisioner\"]).to be_nil","117","","118","        # FIXME","119","        # expect(machine.ui).to receive(:warn).with { |warning_text|","120","        #      expect(warning_text).to eq(\"`inventory_path` does not exist on the guest: this\/path\/does\/not\/exist\")","121","        #    }","122","      end","123","","124","      it \"only shows a warning if vault_password_file is specified, but does not exist\" do","125","        subject.vault_password_file = non_existing_file","126","        subject.finalize!","127","","128","        result = subject.validate(machine)","129","        expect(result[\"ansible remote provisioner\"]).to be_nil","130","","131","        # FIXME","132","        # expect(machine.ui).to receive(:warn).with { |warning_text|","133","        #      expect(warning_text).to eq(\"`inventory_path` does not exist on the guest: this\/path\/does\/not\/exist\")","134","        #    }","135","      end","136","","137","      it \"it doesn't consider missing files on the remote system as errors\" do","138","        subject.playbook = non_existing_file","139","        subject.inventory_path = non_existing_file","140","        subject.extra_vars = non_existing_file","141","        subject.finalize!","142","","143","        result = subject.validate(machine)","144","        expect(result[\"ansible local provisioner\"]).to include(","145","          I18n.t(\"vagrant.provisioners.ansible.errors.extra_vars_invalid\",","146","                 type:  subject.extra_vars.class.to_s,","147","                 value: subject.extra_vars.to_s))","148","","149","        expect(result[\"ansible local provisioner\"]).to_not include(","150","          I18n.t(\"vagrant.provisioners.ansible.errors.playbook_path_invalid\",","151","                 path: File.join(\"\/vagrant\", non_existing_file), system: \"guest\"))","152","","153","        expect(result[\"ansible local provisioner\"]).to_not include(","154","          I18n.t(\"vagrant.provisioners.ansible.errors.inventory_path_invalid\",","155","                 path: File.join(\"\/vagrant\", non_existing_file), system: \"guest\"))","156","      end","157","","158","    end","159",""]}],"templates\/locales\/en.yml":[{"add":["2130","          config_file_not_found: |-","2131","            `%{config_option}` does not exist on the %{system}: %{path}","2134","          no_playbook: |-","2135","            `playbook` file path must be set."],"delete":["2136","          galaxy_role_file_invalid: |-","2137","            `galaxy_role_file` does not exist on the %{system}: %{path}","2138","          inventory_path_invalid: |-","2139","            `inventory_path` does not exist on the %{system}: %{path}","2140","          no_playbook: |-","2141","            `playbook` file path must be set.","2142","          playbook_path_invalid: |-","2143","            `playbook` does not exist on the %{system}: %{path}","2144","          vault_password_file_invalid: |-","2145","            `vault_password_file` does not exist on the %{system}: %{path}"]}],"plugins\/provisioners\/ansible\/provisioner\/guest.rb":[{"add":["16","          check_files_existence","148","        def check_path(path, test_args, option_name)","149","          # Checks for the existence of given file (or directory) on the guest system,","150","          # and error if it doesn't exist.","151","","152","          remote_path = Helpers::expand_path_in_unix_style(path, config.provisioning_path)","153","          command = \"test #{test_args} #{remote_path}\"","154","","155","          @machine.communicate.execute(","156","            command,","157","            error_class: Ansible::Errors::AnsibleError,","158","            error_key: :config_file_not_found,","159","            config_option: option_name,","160","            path: remote_path,","161","            system: \"guest\"","162","          )","163","        end","164","","165","        def check_path_is_a_file(path, error_message_key)","166","          check_path(path, \"-f\", error_message_key)","167","        end","168","","169","        def check_path_exists(path, error_message_key)","170","          check_path(path, \"-e\", error_message_key)","171","        end","172",""],"delete":[]}],"plugins\/provisioners\/ansible\/config\/host.rb":[{"add":[],"delete":["50","        protected","51","","52","        def check_path(machine, path, path_test_method, error_message_key = nil)","53","          expanded_path = Pathname.new(path).expand_path(machine.env.root_path)","54","          if !expanded_path.public_send(path_test_method)","55","            if error_message_key","56","              @errors << I18n.t(error_message_key, path: expanded_path, system: \"host\")","57","            end","58","            return false","59","          end","60","          true","61","        end","62","","63","        def check_path_is_a_file(machine, path, error_message_key = nil)","64","          check_path(machine, path, \"file?\", error_message_key)","65","        end","66","","67","        def check_path_exists(machine, path, error_message_key = nil)","68","          check_path(machine, path, \"exist?\", error_message_key)","69","        end","70",""]}],"CHANGELOG.md":[{"add":["111","  - provisioners\/ansible(both provisioners): The Ansible configuration files","112","      detection is only executed by the `provision` action [GH-6763, GH-6984]"],"delete":["111","  - provisioners\/ansible_local: The configuration sanity checks now only warn","112","      on missing files or directories, so that the requested vagrant command is","113","      always executed (e.g. `vagrant destroy` is not aborted when the configured","114","      playbook is not present on the guest) [GH-6763]"]}],"plugins\/provisioners\/ansible\/config\/guest.rb":[{"add":[],"delete":["37","        protected","38","","39","        def check_path(machine, path, test_args, error_message_key = nil)","40","          remote_path = Helpers::expand_path_in_unix_style(path, @provisioning_path)","41","","42","          if machine.communicate.ready? && !machine.communicate.test(\"test #{test_args} #{remote_path}\")","43","            if error_message_key","44","              # only show warnings, as raising an error would abort the request","45","              # vagrant action (e.g. prevent `destroy` to be executed)","46","              machine.ui.warn(I18n.t(error_message_key, path: remote_path, system: \"guest\"))","47","            end","48","            return false","49","          end","50","          # when the machine is not ready for SSH communication,","51","          # the check is \"optimistically\" bypassed.","52","          true","53","        end","54","","55","        def check_path_is_a_file(machine, path, error_message_key = nil)","56","          check_path(machine, path, \"-f\", error_message_key)","57","        end","58","","59","        def check_path_exists(machine, path, error_message_key = nil)","60","          check_path(machine, path, \"-e\", error_message_key)","61","        end","62",""]}],"test\/unit\/plugins\/provisioners\/ansible\/config\/host_test.rb":[{"add":[],"delete":["13","  let(:non_existing_file) { \"\/this\/does\/not\/exist\" }","76","    it \"returns an error if the playbook file does not exist\" do","77","      subject.playbook = non_existing_file","78","      subject.finalize!","79","","80","      result = subject.validate(machine)","81","      expect(result[\"ansible remote provisioner\"]).to eql([","82","        I18n.t(\"vagrant.provisioners.ansible.errors.playbook_path_invalid\",","83","               path: non_existing_file, system: \"host\")","84","      ])","85","    end","86","","87","    it \"returns an error if galaxy_role_file is specified, but does not exist\" do","88","      subject.galaxy_role_file = non_existing_file","89","      subject.finalize!","90","","91","      result = subject.validate(machine)","92","      expect(result[\"ansible remote provisioner\"]).to eql([","93","        I18n.t(\"vagrant.provisioners.ansible.errors.galaxy_role_file_invalid\",","94","               path: non_existing_file, system: \"host\")","95","      ])","96","    end","97","","98","    it \"returns an error if inventory_path is specified, but does not exist\" do","99","      subject.inventory_path = non_existing_file","100","      subject.finalize!","101","","102","      result = subject.validate(machine)","103","      expect(result[\"ansible remote provisioner\"]).to eql([","104","        I18n.t(\"vagrant.provisioners.ansible.errors.inventory_path_invalid\",","105","               path: non_existing_file, system: \"host\")","106","      ])","107","    end","108","","109","    it \"returns an error if vault_password_file is specified, but does not exist\" do","110","      subject.vault_password_file = non_existing_file","111","      subject.finalize!","112","","113","      result = subject.validate(machine)","114","      expect(result[\"ansible remote provisioner\"]).to eql([","115","        I18n.t(\"vagrant.provisioners.ansible.errors.vault_password_file_invalid\",","116","               path: non_existing_file, system: \"host\")","117","      ])","118","    end","119","","140","    it \"it collects and returns all detected errors\" do","141","      subject.playbook = non_existing_file","142","      subject.inventory_path = non_existing_file","143","      subject.extra_vars = non_existing_file","144","      subject.finalize!","145","","146","      result = subject.validate(machine)","147","      expect(result[\"ansible remote provisioner\"]).to include(","148","        I18n.t(\"vagrant.provisioners.ansible.errors.playbook_path_invalid\",","149","               path: non_existing_file, system: \"host\"))","150","      expect(result[\"ansible remote provisioner\"]).to include(","151","        I18n.t(\"vagrant.provisioners.ansible.errors.extra_vars_invalid\",","152","               type:  subject.extra_vars.class.to_s,","153","               value: subject.extra_vars.to_s))","154","      expect(result[\"ansible remote provisioner\"]).to include(","155","        I18n.t(\"vagrant.provisioners.ansible.errors.inventory_path_invalid\",","156","               path: non_existing_file, system: \"host\"))","157","    end","158",""]}],"plugins\/provisioners\/ansible\/provisioner\/host.rb":[{"add":["20","          check_files_existence","260","        def check_path(path, path_test_method, option_name)","261","          # Checks for the existence of given file (or directory) on the host system,","262","          # and error if it doesn't exist.","263","","264","          expanded_path = Pathname.new(path).expand_path(@machine.env.root_path)","265","          if !expanded_path.public_send(path_test_method)","266","            raise Ansible::Errors::AnsibleError,","267","                  _key: :config_file_not_found,","268","                  config_option: option_name,","269","                  path: expanded_path,","270","                  system: \"host\"","271","          end","272","        end","273","","274","        def check_path_is_a_file(path, option_name)","275","          check_path(path, \"file?\", option_name)","276","        end","277","","278","        def check_path_exists(path, option_name)","279","          check_path(path, \"exist?\", option_name)","280","        end","281",""],"delete":[]}]}},"157db39938d36e977c1d9f71bc4b30b2b2bae8fe":{"changes":{"lib\/vagrant\/action\/builder.rb":"MODIFY"},"diff":{"lib\/vagrant\/action\/builder.rb":[{"add":["181","        # Now that the stack is fully expanded, apply any","182","        # action hooks that may be defined so they are on","183","        # the outermost locations of the stack","184","        builder.apply_action_name(env)"],"delete":["175","        if env[:builder_applied] != env[:action_name]","176","          apply_action_name = true","177","          env[:builder_applied] = env[:action_name]","178","        end","179","","186","        if apply_action_name","187","          # Now that the stack is fully expanded, apply any","188","          # action hooks that may be defined so they are on","189","          # the outermost locations of the stack","190","          builder.apply_action_name(env)","191","        end"]}]}},"64828f1ed3a4d33b3e85e1c925a5c3bc5acb1bca":{"changes":{"plugins\/communicators\/winrm\/shell.rb":"MODIFY","test\/unit\/plugins\/communicators\/winrm\/shell_test.rb":"MODIFY"},"diff":{"plugins\/communicators\/winrm\/shell.rb":[{"add":["58","        session.create_executor do |executor|","59","          execute_with_rescue(executor.method(\"run_powershell_script\"), command, &block)","60","        end","64","        session.create_executor do |executor|","65","          execute_with_rescue(executor.method(\"run_cmd\"), command, &block)","66","        end"],"delete":["58","        execute_with_rescue(executor.method(\"run_powershell_script\"), command, &block)","62","        execute_with_rescue(executor.method(\"run_cmd\"), command, &block)","174","      def executor","175","        @executor ||= session.create_executor","176","      end","177",""]}],"test\/unit\/plugins\/communicators\/winrm\/shell_test.rb":[{"add":["8","  let(:session) { double(\"winrm_session\") }","24","  before { allow(session).to receive(:create_executor).and_yield(executor) }","25",""],"delete":["8","  let(:session) { double(\"winrm_session\", create_executor: executor) }"]}]}},"9d6b41522243aa8e9d75861692fa1e84e4684165":{"changes":{"plugins\/hosts\/darwin\/cap\/fs_iso.rb":"MODIFY","plugins\/kernel_v2\/config\/vm.rb":"MODIFY","plugins\/providers\/virtualbox\/action\/forward_ports.rb":"MODIFY","plugins\/hosts\/windows\/cap\/fs_iso.rb":"MODIFY","plugins\/hosts\/linux\/cap\/fs_iso.rb":"MODIFY"},"diff":{"plugins\/hosts\/darwin\/cap\/fs_iso.rb":[{"add":["31","        def self.create_iso(env, source_directory, extra_opts={})"],"delete":["31","        def self.create_iso(env, source_directory, **extra_opts)"]}],"plugins\/kernel_v2\/config\/vm.rb":[{"add":["402","            prov = VagrantConfigProvisioner.new(name, type.to_sym, **opts)"],"delete":["402","            prov = VagrantConfigProvisioner.new(name, type.to_sym, opts)"]}],"plugins\/providers\/virtualbox\/action\/forward_ports.rb":[{"add":["50","                                    **message_attributes))","64","                                    **message_attributes))"],"delete":["50","                                    message_attributes))","64","                                    message_attributes))"]}],"plugins\/hosts\/windows\/cap\/fs_iso.rb":[{"add":["31","        def self.create_iso(env, source_directory, extra_opts={})"],"delete":["31","        def self.create_iso(env, source_directory, **extra_opts)"]}],"plugins\/hosts\/linux\/cap\/fs_iso.rb":[{"add":["31","        def self.create_iso(env, source_directory, extra_opts={})"],"delete":["31","        def self.create_iso(env, source_directory, **extra_opts)"]}]}},"f0e232d739747883539fcc72cff491ef8e3e28ef":{"changes":{"plugins\/communicators\/ssh\/communicator.rb":"MODIFY","test\/unit\/plugins\/communicators\/ssh\/communicator_test.rb":"MODIFY"},"diff":{"plugins\/communicators\/ssh\/communicator.rb":[{"add":["198","            begin","199","              priv_path = @machine.data_dir.join(\"private_key\").to_s","200","              File.set_permissions(priv_path, Etc.getlogin => File::FULL)","201","            rescue => e","202","              @logger.warn(\"Error encountered during private key permissions set - \" \\","203","                \"#{e.class}: #{e.message}\")","204","            end"],"delete":["198","            priv_path = @machine.data_dir.join(\"private_key\").to_s","199","            File.set_permissions(priv_path, Etc.getlogin => File::FULL)"]}],"test\/unit\/plugins\/communicators\/ssh\/communicator_test.rb":[{"add":["233","          it \"should proceed when error is encountered\" do","234","            expect(File).to receive(:set_permissions).and_raise(StandardError)","235","          end","236",""],"delete":[]}]}},"492ba40fd159052a690014c97a4ff7472d64ffbc":{"changes":{"plugins\/guests\/freebsd\/cap\/configure_networks.rb":"MODIFY"},"diff":{"plugins\/guests\/freebsd\/cap\/configure_networks.rb":[{"add":["41","            # Restart interface so it loads configuration stored in \/etc\/rc.conf","42","            machine.communicate.sudo(\"service netif restart #{ifname}\", {shell: \"sh\"})"],"delete":["41","            if network[:type].to_sym == :static","42","              machine.communicate.sudo(\"ifconfig #{ifname} inet #{network[:ip]} netmask #{network[:netmask]}\", {shell: \"sh\"})","43","            elsif network[:type].to_sym == :dhcp","44","              machine.communicate.sudo(\"dhclient #{ifname}\", {shell: \"sh\"})","45","            end"]}]}},"c0f43c362ce53eca12f755822970c84518e99e6b":{"changes":{"plugins\/provisioners\/docker\/cap\/debian\/docker_configure_auto_start.rb":"MODIFY"},"diff":{"plugins\/provisioners\/docker\/cap\/debian\/docker_configure_auto_start.rb":[{"add":["9","                comm.sudo(\"service docker restart\")"],"delete":["9","                comm.sudo(\"stop docker\")","10","                comm.sudo(\"start docker\")"]}]}},"da1b5765c7e1d03809a864fa18449b32327ef49c":{"changes":{"test\/unit\/vagrant\/action\/builtin\/box_add_test.rb":"MODIFY","lib\/vagrant\/action\/builtin\/box_add.rb":"MODIFY"},"diff":{"test\/unit\/vagrant\/action\/builtin\/box_add_test.rb":[{"add":["307","    context \"with a box name containing invalid URI characters\" do","308","      it \"should not raise an error\" do","309","        box_path = iso_env.box2_file(:virtualbox)","310","        with_web_server(box_path) do |port|","311","","312","          box_url_name = \"box name with spaces\"","313","          env[:box_name] = box_url_name","314","","315","          expect(box_collection).to receive(:add).with { |path, name, version, **opts|","316","            expect(name).to eq(box_url_name)","317","            expect(version).to eq(\"0\")","318","            expect(opts[:metadata_url]).to be_nil","319","            true","320","          }.and_return(box)","321","","322","          expect(app).to receive(:call).with(env)","323","","324","          subject.call(env)","325","        end","326","      end","327","    end","328",""],"delete":[]}],"lib\/vagrant\/action\/builtin\/box_add.rb":[{"add":["33","            begin","34","              if URI.parse(env[:box_name]).kind_of?(URI::HTTP)","35","                env[:ui].warn(I18n.t(\"vagrant.box_add_url_warn\"))","36","              end","37","            rescue URI::InvalidURIError","38","              # do nothing"],"delete":["33","            if URI.parse(env[:box_name]).kind_of?(URI::HTTP)","34","              env[:ui].warn(I18n.t(\"vagrant.box_add_url_warn\"))"]}]}},"9f3ebef810aca0ae87483e38fc40f04ae39f7708":{"changes":{"plugins\/provisioners\/ansible\/plugin.rb":"MODIFY","\/dev\/null":"DELETE","plugins\/provisioners\/ansible\/cap\/guest\/redhat\/ansible_install.rb":"ADD","plugins\/provisioners\/ansible\/cap\/guest\/fedora\/ansible_install.rb":"ADD"},"diff":{"plugins\/provisioners\/ansible\/plugin.rb":[{"add":["57","      guest_capability(:fedora, :ansible_install) do","58","        require_relative \"cap\/guest\/fedora\/ansible_install\"","59","        Cap::Guest::Fedora::AnsibleInstall","60","      end","61","","63","        require_relative \"cap\/guest\/redhat\/ansible_install\"","64","        Cap::Guest::RedHat::AnsibleInstall"],"delete":["58","        require_relative \"cap\/guest\/epel\/ansible_install\"","59","        Cap::Guest::EPEL::AnsibleInstall"]}],"\/dev\/null":[{"add":[],"delete":[]}],"plugins\/provisioners\/ansible\/cap\/guest\/redhat\/ansible_install.rb":[{"add":[],"delete":[]}],"plugins\/provisioners\/ansible\/cap\/guest\/fedora\/ansible_install.rb":[{"add":[],"delete":[]}]}},"ddbd2a4cfcf84db855b2db80089f8568fb976c70":{"changes":{"test\/unit\/plugins\/provisioners\/ansible\/provisioner_test.rb":"MODIFY","CHANGELOG.md":"MODIFY","plugins\/provisioners\/ansible\/provisioner\/host.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/provisioners\/ansible\/provisioner_test.rb":[{"add":["606","          expect(cmd_opts[:env]['ANSIBLE_SSH_ARGS']).to include(\"-i '\/an\/other\/identity'\")","607","          expect(cmd_opts[:env]['ANSIBLE_SSH_ARGS']).to include(\"-i '\/yet\/an\/other\/key'\")","788","          expect(full_command).to eq(\"PYTHONUNBUFFERED=1 ANSIBLE_FORCE_COLOR=true ANSIBLE_HOST_KEY_CHECKING=true ANSIBLE_SSH_ARGS='-o IdentitiesOnly=yes -i '\/my\/key1' -i '\/my\/key2' -o ForwardAgent=yes -o ControlMaster=no -o ControlMaster=auto -o ControlPersist=60s' ansible-playbook --connection=ssh --timeout=30 --ask-sudo-pass --ask-vault-pass --limit='machine*:&vagrant:!that_one' --inventory-file=#{generated_inventory_dir} --extra-vars=@#{File.expand_path(__FILE__)} --sudo --sudo-user=deployer -vvv --vault-password-file=#{File.expand_path(__FILE__)} --tags=db,www --skip-tags=foo,bar --start-at-task='an awesome task' --why-not --su-user=foot --ask-su-pass --limit='all' --private-key=.\/myself.key playbook.yml\")"],"delete":["606","          expect(cmd_opts[:env]['ANSIBLE_SSH_ARGS']).to include(\"-o IdentityFile='\\\"\/an\/other\/identity\\\"'\")","607","          expect(cmd_opts[:env]['ANSIBLE_SSH_ARGS']).to include(\"-o IdentityFile='\\\"\/yet\/an\/other\/key\\\"'\")","788","          expect(full_command).to eq(\"PYTHONUNBUFFERED=1 ANSIBLE_FORCE_COLOR=true ANSIBLE_HOST_KEY_CHECKING=true ANSIBLE_SSH_ARGS='-o IdentitiesOnly=yes -o IdentityFile='\\\"\/my\/key1\\\"' -o IdentityFile='\\\"\/my\/key2\\\"' -o ForwardAgent=yes -o ControlMaster=no -o ControlMaster=auto -o ControlPersist=60s' ansible-playbook --connection=ssh --timeout=30 --ask-sudo-pass --ask-vault-pass --limit='machine*:&vagrant:!that_one' --inventory-file=#{generated_inventory_dir} --extra-vars=@#{File.expand_path(__FILE__)} --sudo --sudo-user=deployer -vvv --vault-password-file=#{File.expand_path(__FILE__)} --tags=db,www --skip-tags=foo,bar --start-at-task='an awesome task' --why-not --su-user=foot --ask-su-pass --limit='all' --private-key=.\/myself.key playbook.yml\")"]}],"CHANGELOG.md":[{"add":["131","  - provisioners\/ansible: use quotes when passing the private key files via","132","      OpenSSH `-i` command line arguments [GH-6671]"],"delete":["131","  - provisioners\/ansible: use quotes for the IdentityFile OpenSSH command line","132","    arguments [GH-6671]"]}],"plugins\/provisioners\/ansible\/provisioner\/host.rb":[{"add":["231","              ssh_options << \"-i '#{key}'\""],"delete":["231","              # The outer single quotes are required to protect the inner","232","              # double quotes to be stripped by the ssh\/shell execution.","233","              ssh_options << \"-o IdentityFile='\\\"#{key}\\\"'\""]}]}},"82e268a3e2b9dea0a9835ea837e766015b2e98d0":{"changes":{"plugins\/provisioners\/shell\/provisioner.rb":"MODIFY"},"diff":{"plugins\/provisioners\/shell\/provisioner.rb":[{"add":["189","            command = \"\\\"#{exec_path}\\\"#{args}\""],"delete":["189","            command = \"#{exec_path}#{args}\""]}]}},"cb0bd89ae14f56bccab3e03249607b13a52c8009":{"changes":{"test\/unit\/plugins\/synced_folders\/rsync\/helper_test.rb":"MODIFY","plugins\/synced_folders\/rsync\/helper.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/synced_folders\/rsync\/helper_test.rb":[{"add":["214","","215","    context \"control sockets\" do","216","      it \"creates a tmp dir\" do","217","        allow(Vagrant::Util::Platform).to receive(:windows?).and_return(false)","218","        allow(Dir).to receive(:mktmpdir).with(\"vagrant-rsync-\").","219","          and_return(\"\/tmp\/vagrant-rsync-12345\")","220","","221","        expect(Vagrant::Util::Subprocess).to receive(:execute).with(any_args) { |*args|","222","          expect(args[9]).to include(\"ControlPath=\/tmp\/vagrant-rsync-12345\")","223","        }.and_return(result)","224","","225","        subject.rsync_single(machine, ssh_info, opts)","226","      end","227","    end"],"delete":[]}],"plugins\/synced_folders\/rsync\/helper.rb":[{"add":["83","          controlpath = Dir.mktmpdir(\"vagrant-rsync-\")"],"delete":["83","          controlpath = File.join(Dir.tmpdir, \"ssh.#{rand(1000)}\")"]}]}},"6ddba4f7b315b0e36c1d4cf7e67815c7762f66ef":{"changes":{"test\/unit\/plugins\/commands\/snapshot\/command\/save_test.rb":"ADD","plugins\/commands\/snapshot\/command\/save.rb":"MODIFY","templates\/locales\/en.yml":"MODIFY","lib\/vagrant\/errors.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/commands\/snapshot\/command\/save_test.rb":[{"add":[],"delete":[]}],"plugins\/commands\/snapshot\/command\/save.rb":[{"add":["8","          options[:force] = false","19","","20","            o.on(\"-f\", \"--force\", \"Replace snapshot without confirmation\") do |f|","21","              options[:force] = f","22","            end","35","            if !vm.provider.capability?(:snapshot_list)","36","              vm.ui.info(I18n.t(\"vagrant.commands.snapshot.not_supported\"))","37","              next","38","            end","39","","40","            snapshot_list = vm.provider.capability(:snapshot_list)","41","","42","            if !snapshot_list.include? name","43","              vm.action(:snapshot_save, snapshot_name: name)","44","            elsif options[:force]","45","              # not a unique snapshot name","46","              vm.action(:snapshot_delete, snapshot_name: name)","47","              vm.action(:snapshot_save, snapshot_name: name)","48","            else","49","              raise Vagrant::Errors::SnapshotConflictFailed","50","            end"],"delete":["30","            vm.action(:snapshot_save, snapshot_name: name)"]}],"templates\/locales\/en.yml":[{"add":["1158","      snapshot_force: |-","1159","        You must include the `--force` option to replace an existing snapshot."],"delete":[]}],"lib\/vagrant\/errors.rb":[{"add":["654","    class SnapshotConflictFailed < VagrantError","655","      error_key(:snapshot_force)","656","    end","657",""],"delete":[]}]}},"16ac4e2321f373bf83d7b058c9f2e0c649ffe96e":{"changes":{"lib\/vagrant.rb":"MODIFY"},"diff":{"lib\/vagrant.rb":[{"add":["141","  # This checks if a plugin with the given name is available (installed","142","  # and enabled). This can be used from the Vagrantfile to easily branch","143","  # based on plugin availability.","145","    return false unless Vagrant.plugins_enabled?","146",""],"delete":["141","  # This checks if a plugin with the given name is installed. This can","142","  # be used from the Vagrantfile to easily branch based on plugin","143","  # availability."]}]}},"067a0a5d0d02cf12930b61a61c5dc855115ac2da":{"changes":{"plugins\/communicators\/ssh\/communicator.rb":"MODIFY","test\/unit\/plugins\/communicators\/ssh\/communicator_test.rb":"MODIFY"},"diff":{"plugins\/communicators\/ssh\/communicator.rb":[{"add":["521","                if block_given? && marker_found && !data.empty?","542","              if block_given? && marker_found && !data.empty?"],"delete":["521","                if block_given? && marker_found","542","              if block_given? && marker_found"]}],"test\/unit\/plugins\/communicators\/ssh\/communicator_test.rb":[{"add":["170","    context \"with no command output\" do","171","      let(:command_stdout_data) do","172","        \"#{command_garbage_marker}\"","173","      end","174","","175","      it \"does not send empty stdout data string\" do","176","        empty = true","177","        expect(","178","          communicator.execute(\"ls \/\") do |type, data|","179","            if type == :stdout && data.empty?","180","              empty = false","181","            end","182","          end","183","        ).to eq(0)","184","        expect(empty).to be(true)","185","      end","186","    end","187","","206","    context \"with no command output on stderr\" do","207","      let(:command_stderr_data) do","208","        \"#{command_garbage_marker}\"","209","      end","210","","211","      it \"does not send empty stderr data string\" do","212","        empty = true","213","        expect(","214","          communicator.execute(\"ls \/\") do |type, data|","215","            if type == :stderr && data.empty?","216","              empty = false","217","            end","218","          end","219","        ).to eq(0)","220","        expect(empty).to be(true)","221","      end","222","    end","223",""],"delete":[]}]}},"7df6ea5a30f6b0030bb8de69ecff50c0680864b3":{"changes":{"plugins\/provisioners\/chef\/provisioner\/base.rb":"MODIFY","test\/unit\/plugins\/provisioners\/chef\/provisioner\/base_test.rb":"MODIFY"},"diff":{"plugins\/provisioners\/chef\/provisioner\/base.rb":[{"add":["26","          if @config.respond_to?(:node_name) && !present?(@config.node_name)"],"delete":["26","          if !present?(@config.node_name)"]}],"test\/unit\/plugins\/provisioners\/chef\/provisioner\/base_test.rb":[{"add":["41","      instance = described_class.new(machine, OpenStruct.new(node_name: nil))","47","      instance = described_class.new(machine, OpenStruct.new(node_name: nil))","50","","51","    it \"does not set node_name if configuration does not define it\" do","52","      expect(config).to receive(:respond_to?).with(:node_name).and_return(false)","53","      expect(config).not_to receive(:node_name)","54","      described_class.new(machine, config)","55","    end"],"delete":["41","      instance = described_class.new(machine, OpenStruct.new)","46","      config = OpenStruct.new(node_name: nil)","48","      instance = described_class.new(machine, OpenStruct.new)"]}]}},"9d50f72df364096c3854481c2d1fa62ba55a4e85":{"changes":{"test\/unit\/plugins\/guests\/linux\/cap\/mount_shared_folder_test.rb":"ADD","website\/docs\/source\/v2\/synced-folders\/smb.html.md":"MODIFY","plugins\/guests\/linux\/cap\/mount_smb_shared_folder.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/guests\/linux\/cap\/mount_shared_folder_test.rb":[{"add":[],"delete":[]}],"website\/docs\/source\/v2\/synced-folders\/smb.html.md":[{"add":["51","  Windows username. If you sign into a domain, specify it as `user@domain`.","52","  If this option isn't specified, Vagrant will prompt you for it."],"delete":["51","  Windows username. If this isn't specified, Vagrant will prompt you for","52","  it."]}],"plugins\/guests\/linux\/cap\/mount_smb_shared_folder.rb":[{"add":["29","          # If a domain is provided in the username, separate it","30","          username, domain = (options[:smb_username] || '').split('@', 2)","31","","34","          options[:mount_options] << \"username=#{username}\"","36","          options[:mount_options] << \"domain=#{domain}\" if domain"],"delete":["31","          options[:mount_options] << \"username=#{options[:smb_username]}\""]}]}},"085feb65262a91c35dd8ffd8e28defa34943526e":{"changes":{"lib\/vagrant\/util\/ssh.rb":"MODIFY","test\/unit\/vagrant\/util\/ssh_test.rb":"MODIFY"},"diff":{"lib\/vagrant\/util\/ssh.rb":[{"add":["141","            path = path.to_s.gsub('%', '%%')","142","            command_options += [\"-o\", \"IdentityFile=\\\"#{path}\\\"\"]"],"delete":["141","            command_options += [\"-o\", \"IdentityFile=%s\" % [path.to_s.gsub('%', '%%')]]"]}],"test\/unit\/vagrant\/util\/ssh_test.rb":[{"add":["69","        .with(\"ssh\", \"vagrant@localhost\", \"-p\", \"2222\", \"-o\", \"LogLevel=FATAL\",\"-o\", \"Compression=yes\", \"-o\", \"DSAAuthentication=yes\", \"-o\", \"StrictHostKeyChecking=no\", \"-o\", \"UserKnownHostsFile=\/dev\/null\", \"-o\", \"IdentityFile=\\\"#{ssh_info[:private_key_path][0]}\\\"\")","87","          .with(\"ssh\", \"vagrant@localhost\", \"-p\", \"2222\", \"-o\", \"LogLevel=FATAL\", \"-o\", \"StrictHostKeyChecking=no\", \"-o\", \"UserKnownHostsFile=\/dev\/null\", \"-o\", \"IdentityFile=\\\"#{ssh_info[:private_key_path][0]}\\\"\")","105","          .with(\"ssh\", \"vagrant@localhost\", \"-p\", \"2222\", \"-o\", \"LogLevel=FATAL\", \"-o\", \"IdentityFile=\\\"#{ssh_info[:private_key_path][0]}\\\"\")","142","          .with(\"ssh\", \"vagrant@localhost\", \"-p\", \"2222\", \"-o\", \"LogLevel=FATAL\", \"-o\", \"StrictHostKeyChecking=no\", \"-o\", \"UserKnownHostsFile=\/dev\/null\", \"-o\", \"IdentityFile=\\\"#{ssh_info[:private_key_path][0]}\\\"\",\"-o\", \"ForwardX11=yes\", \"-o\", \"ForwardX11Trusted=yes\")","160","          .with(\"ssh\", \"vagrant@localhost\", \"-p\", \"2222\", \"-o\", \"LogLevel=FATAL\", \"-o\", \"StrictHostKeyChecking=no\", \"-o\", \"UserKnownHostsFile=\/dev\/null\", \"-o\", \"IdentityFile=\\\"#{ssh_info[:private_key_path][0]}\\\"\",\"-o\", \"ForwardAgent=yes\")","178","          .with(\"ssh\", \"vagrant@localhost\", \"-p\", \"2222\", \"-o\", \"LogLevel=FATAL\", \"-o\", \"StrictHostKeyChecking=no\", \"-o\", \"UserKnownHostsFile=\/dev\/null\", \"-o\", \"IdentityFile=\\\"#{ssh_info[:private_key_path][0]}\\\"\", \"-L\", \"8008:localhost:80\")","196","          .with(\"ssh\", \"vagrant@localhost\", \"-p\", \"2222\", \"-o\", \"LogLevel=FATAL\", \"-o\", \"StrictHostKeyChecking=no\", \"-o\", \"UserKnownHostsFile=\/dev\/null\", \"-o\", \"IdentityFile=\\\"#{ssh_info[:private_key_path][0]}\\\"\", \"-6\")"],"delete":["69","        .with(\"ssh\", \"vagrant@localhost\", \"-p\", \"2222\", \"-o\", \"LogLevel=FATAL\",\"-o\", \"Compression=yes\", \"-o\", \"DSAAuthentication=yes\", \"-o\", \"StrictHostKeyChecking=no\", \"-o\", \"UserKnownHostsFile=\/dev\/null\", \"-o\", \"IdentityFile=#{ssh_info[:private_key_path][0]}\")","87","          .with(\"ssh\", \"vagrant@localhost\", \"-p\", \"2222\", \"-o\", \"LogLevel=FATAL\", \"-o\", \"StrictHostKeyChecking=no\", \"-o\", \"UserKnownHostsFile=\/dev\/null\", \"-o\", \"IdentityFile=#{ssh_info[:private_key_path][0]}\")","105","          .with(\"ssh\", \"vagrant@localhost\", \"-p\", \"2222\", \"-o\", \"LogLevel=FATAL\", \"-o\", \"IdentityFile=#{ssh_info[:private_key_path][0]}\")","142","          .with(\"ssh\", \"vagrant@localhost\", \"-p\", \"2222\", \"-o\", \"LogLevel=FATAL\", \"-o\", \"StrictHostKeyChecking=no\", \"-o\", \"UserKnownHostsFile=\/dev\/null\", \"-o\", \"IdentityFile=#{ssh_info[:private_key_path][0]}\",\"-o\", \"ForwardX11=yes\", \"-o\", \"ForwardX11Trusted=yes\")","160","          .with(\"ssh\", \"vagrant@localhost\", \"-p\", \"2222\", \"-o\", \"LogLevel=FATAL\", \"-o\", \"StrictHostKeyChecking=no\", \"-o\", \"UserKnownHostsFile=\/dev\/null\", \"-o\", \"IdentityFile=#{ssh_info[:private_key_path][0]}\",\"-o\", \"ForwardAgent=yes\")","178","          .with(\"ssh\", \"vagrant@localhost\", \"-p\", \"2222\", \"-o\", \"LogLevel=FATAL\", \"-o\", \"StrictHostKeyChecking=no\", \"-o\", \"UserKnownHostsFile=\/dev\/null\", \"-o\", \"IdentityFile=#{ssh_info[:private_key_path][0]}\", \"-L\", \"8008:localhost:80\")","196","          .with(\"ssh\", \"vagrant@localhost\", \"-p\", \"2222\", \"-o\", \"LogLevel=FATAL\", \"-o\", \"StrictHostKeyChecking=no\", \"-o\", \"UserKnownHostsFile=\/dev\/null\", \"-o\", \"IdentityFile=#{ssh_info[:private_key_path][0]}\", \"-6\")"]}]}},"97f5822dee202e615b57c8fbaa33bcebdbca968c":{"changes":{"test\/unit\/plugins\/commands\/login\/middleware\/add_authentication_test.rb":"MODIFY","plugins\/commands\/login\/middleware\/add_authentication.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/commands\/login\/middleware\/add_authentication_test.rb":[{"add":["127","    it \"ignores urls that it cannot parse\" do","128","      bad_url = \"this is not a valid url\"","129","      # Ensure the bad URL does cause an exception","130","      expect{ URI.parse(bad_url) }.to raise_error URI::Error","131","      env[:box_urls] = [bad_url]","132","      subject.call(env)","133","      expect(env[:box_urls].first).to eq(bad_url)","134","    end","135",""],"delete":[]}],"plugins\/commands\/login\/middleware\/add_authentication.rb":[{"add":["37","          begin","38","            u = URI.parse(url)","39","            if u.host != TARGET_HOST && REPLACEMENT_HOSTS.include?(u.host)","40","              u.host = TARGET_HOST","41","              u.to_s","42","            else","43","              url","44","            end","45","          rescue URI::Error"],"delete":["37","          u = URI.parse(url)","38","          if u.host != TARGET_HOST && REPLACEMENT_HOSTS.include?(u.host)","39","            u.host = TARGET_HOST","40","            u.to_s","41","          else"]}]}},"72d62e3d2ea6f594a61809fa8fb00b68ed399ba7":{"changes":{"plugins\/provisioners\/puppet\/provisioner\/puppet.rb":"MODIFY"},"diff":{"plugins\/provisioners\/puppet\/provisioner\/puppet.rb":[{"add":["218","              facts.map! { |v| \"$env:#{v};\" }"],"delete":["218","              facts.map! { |v| \"`$env:#{v};\" }"]}]}},"a7dfc73b85331a1966cf3a29a7bc7b83fc07768b":{"changes":{"test\/unit\/plugins\/provisioners\/ansible\/provisioner_test.rb":"MODIFY","plugins\/provisioners\/ansible\/provisioner\/base.rb":"MODIFY","plugins\/provisioners\/ansible\/provisioner\/guest.rb":"MODIFY","plugins\/provisioners\/ansible\/provisioner\/host.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/provisioners\/ansible\/provisioner_test.rb":[{"add":["773","    context \"with galaxy_roles_path option defined\" do","774","      before do","775","        config.galaxy_roles_path = \"my-roles\"","776","      end","777","","778","      it \"sets ANSIBLE_ROLES_PATH with corresponding absolute path\" do","779","        expect(Vagrant::Util::Subprocess).to receive(:execute).with { |*args|","780","          cmd_opts = args.last","781","          expect(cmd_opts[:env]).to include(\"ANSIBLE_ROLES_PATH\")","782","          expect(cmd_opts[:env]['ANSIBLE_ROLES_PATH']).to eql(File.join(machine.env.root_path, \"my-roles\"))","783","        }","784","      end","785","    end","786","","814","        config.galaxy_roles_path = \"\/up\/to the stars\"","833","      it_should_set_arguments_and_environment_variables 21, 5, true","860","          expect(full_command).to eq(%Q(PYTHONUNBUFFERED=1 ANSIBLE_FORCE_COLOR=true ANSIBLE_ROLES_PATH='\/up\/to the stars' ANSIBLE_HOST_KEY_CHECKING=true ANSIBLE_SSH_ARGS='-o IdentitiesOnly=yes -i '\/my\/key1' -i '\/my\/key2' -o ForwardAgent=yes -o ControlMaster=no -o ControlMaster=auto -o ControlPersist=60s' ansible-playbook --connection=ssh --timeout=30 --ask-sudo-pass --ask-vault-pass --limit=\"machine*:&vagrant:!that_one\" --inventory-file=#{generated_inventory_dir} --extra-vars=\"{\\\\\"var1\\\\\":\\\\\"string with 'apostrophes', \\\\\\\\\\\\\\\\, \\\\\\\\\\\\\" and =\\\\\",\\\\\"var2\\\\\":{\\\\\"x\\\\\":42}}\" --sudo --sudo-user=deployer -vvv --vault-password-file=#{File.expand_path(__FILE__)} --tags=db,www --skip-tags=foo,bar --start-at-task=\"joe's awesome task\" --why-not --su-user=foot --ask-su-pass --limit=all --private-key=.\/myself.key --extra-vars='{\\\"var3\\\":\\\"foo\\\"}' playbook.yml))"],"delete":["818","      it_should_set_arguments_and_environment_variables 21, 4, true","845","          expect(full_command).to eq(%Q(PYTHONUNBUFFERED=1 ANSIBLE_FORCE_COLOR=true ANSIBLE_HOST_KEY_CHECKING=true ANSIBLE_SSH_ARGS='-o IdentitiesOnly=yes -i '\/my\/key1' -i '\/my\/key2' -o ForwardAgent=yes -o ControlMaster=no -o ControlMaster=auto -o ControlPersist=60s' ansible-playbook --connection=ssh --timeout=30 --ask-sudo-pass --ask-vault-pass --limit=\"machine*:&vagrant:!that_one\" --inventory-file=#{generated_inventory_dir} --extra-vars=\"{\\\\\"var1\\\\\":\\\\\"string with 'apostrophes', \\\\\\\\\\\\\\\\, \\\\\\\\\\\\\" and =\\\\\",\\\\\"var2\\\\\":{\\\\\"x\\\\\":42}}\" --sudo --sudo-user=deployer -vvv --vault-password-file=#{File.expand_path(__FILE__)} --tags=db,www --skip-tags=foo,bar --start-at-task=\"joe's awesome task\" --why-not --su-user=foot --ask-su-pass --limit=all --private-key=.\/myself.key --extra-vars='{\\\"var3\\\":\\\"foo\\\"}' playbook.yml))"]}],"plugins\/provisioners\/ansible\/provisioner\/base.rb":[{"add":["39","            if k =~ \/ANSIBLE_SSH_ARGS|ANSIBLE_ROLES_PATH\/","100","","101","          # Use ANSIBLE_ROLES_PATH to tell ansible-playbook where to look for roles","102","          # (there is no equivalent command line argument in ansible-playbook)","103","          @environment_variables[\"ANSIBLE_ROLES_PATH\"] = get_galaxy_roles_path if config.galaxy_roles_path","227","        def get_galaxy_role_file","228","          Helpers::expand_path_in_unix_style(config.galaxy_role_file, get_provisioning_working_directory)","231","        def get_galaxy_roles_path","232","          base_dir = get_provisioning_working_directory"],"delete":["39","            if k == 'ANSIBLE_SSH_ARGS'","223","        def get_galaxy_role_file(base_dir)","224","          Helpers::expand_path_in_unix_style(config.galaxy_role_file, base_dir)","227","        def get_galaxy_roles_path(base_dir)"]}],"plugins\/provisioners\/ansible\/provisioner\/guest.rb":[{"add":["69","        def get_provisioning_working_directory","70","          config.provisioning_path","71","        end","72","","75","            role_file: \"'#{get_galaxy_role_file}'\",","76","            roles_path: \"'#{get_galaxy_roles_path}'\""],"delete":["71","            role_file: get_galaxy_role_file(config.provisioning_path),","72","            roles_path: get_galaxy_roles_path(config.provisioning_path)"]}],"plugins\/provisioners\/ansible\/provisioner\/host.rb":[{"add":["91","            role_file: get_galaxy_role_file,","92","            roles_path: get_galaxy_roles_path","104","          # FIXME: role_file and roles_path arguments should be quoted in the console output","191","        def get_provisioning_working_directory","192","          machine.env.root_path","193","        end","194",""],"delete":["91","            role_file: get_galaxy_role_file(machine.env.root_path),","92","            roles_path: get_galaxy_roles_path(machine.env.root_path)"]}]}},"c999e7c3d43411ad4690d2c61c0e3adc3b6ee62f":{"changes":{"test\/unit\/plugins\/commands\/snapshot\/command\/restore_test.rb":"MODIFY","test\/unit\/plugins\/commands\/snapshot\/command\/pop_test.rb":"MODIFY","plugins\/providers\/virtualbox\/action.rb":"MODIFY","plugins\/commands\/snapshot\/command\/restore.rb":"MODIFY","plugins\/commands\/snapshot\/command\/pop.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/commands\/snapshot\/command\/restore_test.rb":[{"add":["14","  let(:snapshot_name) { \"snapshot_name\" }","34","    before do","35","      allow(machine.provider).to receive(:capability).","36","        with(:snapshot_list).and_return([snapshot_name])","37","    end","38","","101","","102","    it \"should disable ignoring sentinel file for provisioning\" do","103","      argv << snapshot_name","104","      expect(machine).to receive(:action) do |_, opts|","105","        expect(opts[:provision_ignore_sentinel]).to eq(false)","106","      end","107","      subject.execute","108","    end","109","","110","    it \"should start the snapshot\" do","111","      argv << snapshot_name","112","      expect(machine).to receive(:action) do |_, opts|","113","        expect(opts[:snapshot_start]).to eq(true)","114","      end","115","      subject.execute","116","    end","117","","118","    context \"when --no-start flag is provided\" do","119","      let(:argv) { [snapshot_name, \"--no-start\"] }","120","","121","      it \"should not start the snapshot\" do","122","        expect(machine).to receive(:action) do |_, opts|","123","          expect(opts[:snapshot_start]).to eq(false)","124","        end","125","        subject.execute","126","      end","127","    end"],"delete":[]}],"test\/unit\/plugins\/commands\/snapshot\/command\/pop_test.rb":[{"add":["27","    before do","28","      machine.id = \"mach\"","29","      allow(machine.provider).to receive(:capability).","30","        with(:snapshot_list).and_return([\"push_2_0\"])","31","    end","32","","56","","57","    it \"should disable ignoring sentinel file for provisioning\" do","58","      expect(machine).to receive(:action) do |name, opts|","59","        expect(name).to eq(:snapshot_restore)","60","        expect(opts[:provision_ignore_sentinel]).to eq(false)","61","      end","62","      subject.execute","63","    end","64","","65","    it \"should start the snapshot\" do","66","      expect(machine).to receive(:action) do |name, opts|","67","        expect(name).to eq(:snapshot_restore)","68","        expect(opts[:snapshot_start]).to eq(true)","69","      end","70","      subject.execute","71","    end","72","","73","    context \"when --no-start flag is provided\" do","74","      let(:argv) { [\"--no-start\"] }","75","","76","      it \"should not start the snapshot\" do","77","        expect(machine).to receive(:action) do |name, opts|","78","          expect(name).to eq(:snapshot_restore)","79","          expect(opts[:snapshot_start]).to eq(false)","80","        end","81","        subject.execute","82","      end","83","    end"],"delete":[]}],"plugins\/providers\/virtualbox\/action.rb":[{"add":["269","            b2.use Call, IsEnvSet, :snapshot_start do |env2, b3|","270","              if env2[:result]","271","                b3.use action_start","272","              end","273","            end"],"delete":["269","            b2.use action_start"]}],"plugins\/commands\/snapshot\/command\/restore.rb":[{"add":["15","          options[:provision_ignore_sentinel] = false","16","          options[:snapshot_start] = true","23","","24","            o.on(\"--no-start\", \"Don't start the snapshot after the restore\") do","25","              options[:snapshot_start] = false","26","            end"],"delete":[]}],"plugins\/commands\/snapshot\/command\/pop.rb":[{"add":["19","          options[:provision_ignore_sentinel] = false","20","          options[:snapshot_start] = true","21","","31","            o.on(\"--no-start\", \"Don't start the snapshot after the restore\") do","32","              options[:snapshot_start] = false","33","            end"],"delete":[]}]}},"1ca247f5165f6eb0b2abb33a58c2af1dbd355329":{"changes":{"test\/unit\/plugins\/provisioners\/ansible\/provisioner_test.rb":"MODIFY","plugins\/provisioners\/ansible\/provisioner\/host.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/provisioners\/ansible\/provisioner_test.rb":[{"add":["42","    keys_only: true,","991","","992","    describe 'with config.ssh.keys_only = false' do","993","      it 'does not set IdentitiesOnly=yes in ANSIBLE_SSH_ARGS' do","994","        ssh_info[:keys_only] = false","995","","996","        expect(Vagrant::Util::Subprocess).to receive(:execute).with { |*args|","997","          cmd_opts = args.last","998","          expect(cmd_opts[:env]['ANSIBLE_SSH_ARGS']).to_not include(\"-o IdentitiesOnly=yes\")","999","","1000","          # Ending this block with a negative expectation (to_not \/ not_to)","1001","          # would lead to a failure of the above expectation.","1002","          true","1003","        }","1004","      end","1005","    end"],"delete":[]}],"plugins\/provisioners\/ansible\/provisioner\/host.rb":[{"add":["251","          # Compare to lib\/vagrant\/util\/ssh.rb","252","          ssh_options << \"-o IdentitiesOnly=yes\" if !Vagrant::Util::Platform.solaris? && @ssh_info[:keys_only]"],"delete":["251","          # Set IdentitiesOnly=yes to avoid authentication errors when the host has more than 5 ssh keys.","252","          # Notes:","253","          #  - Solaris\/OpenSolaris\/Illumos uses SunSSH which doesn't support the IdentitiesOnly option.","254","          #  - this could be improved by sharing logic with lib\/vagrant\/util\/ssh.rb","255","          ssh_options << \"-o IdentitiesOnly=yes\" unless Vagrant::Util::Platform.solaris?"]}]}},"82ca8f8058693ace1ffa2b94fc56148f0bccd93d":{"changes":{"test\/unit\/vagrant\/action\/builtin\/handle_forwarded_port_collisions_test.rb":"MODIFY","lib\/vagrant\/action\/builtin\/handle_forwarded_port_collisions.rb":"MODIFY"},"diff":{"test\/unit\/vagrant\/action\/builtin\/handle_forwarded_port_collisions_test.rb":[{"add":["17","  let(:port_check_method){ nil }","104","","105","      context \"with custom port_check method\" do","106","        let(:check_result){ [] }","107","        let(:port_options){ {guest: 80, host: 8080, host_ip: \"127.0.1.1\"} }","108","","109","        context \"that accepts two parameters\" do","110","          let(:collision_port_check) do","111","            lambda do |host_ip, host_port|","112","              check_result.push(host_ip)","113","              check_result.push(host_port)","114","              false","115","            end","116","          end","117","","118","          it \"should receive both host_ip and host_port\" do","119","            instance.call(env)","120","            expect(check_result).to include(port_options[:host])","121","            expect(check_result).to include(port_options[:host_ip])","122","          end","123","        end","124","","125","        context \"that accepts one parameter\" do","126","          let(:collision_port_check) do","127","            lambda do |host_port|","128","              check_result.push(host_port)","129","              false","130","            end","131","          end","132","","133","          it \"should receive the host_port only\" do","134","            instance.call(env)","135","            expect(check_result).to eq([port_options[:host]])","136","          end","137","        end","138","      end"],"delete":[]}],"lib\/vagrant\/action\/builtin\/handle_forwarded_port_collisions.rb":[{"add":["120","              call_port_checker(port_checker, host_ip, host_port) ||","139","                  call_port_checker(port_checker, host_ip, repaired_port) ||","268","","269","        def call_port_checker(port_checker, host_ip, host_port)","270","          call_args = [host_ip, host_port]","271","          # Trim args if checker method does not support inclusion of host_ip","272","          call_args = call_args.slice(call_args.size - port_checker.arity.abs, port_checker.arity.abs)","273","          port_checker[*call_args]","274","        end"],"delete":["120","              port_checker[host_ip, host_port] ||","139","                  port_checker[host_ip, repaired_port] ||"]}]}},"1678cfa75790659c358fe0c8d0b1908bdc1f2257":{"changes":{"templates\/nfs\/exports_darwin.erb":"MODIFY","test\/unit\/templates\/nfs\/exports_darwin_test.rb":"MODIFY"},"diff":{"templates\/nfs\/exports_darwin.erb":[{"add":["3","\"<%= d %>\" <%=opts[:bsd__compiled_nfs_options] %> <%= ips.join(\" \") %>"],"delete":["3","<%= d %> <%=opts[:bsd__compiled_nfs_options] %> <%= ips.join(\" \") %>"]}],"test\/unit\/templates\/nfs\/exports_darwin_test.rb":[{"add":["39","        \"\/vagrant\" -alldirs -mapall=501:80 172.16.0.2","61","        \"\/vagrant\" -alldirs -mapall=501:80 172.16.0.2","62","        \"\/vagrant\/other\" -alldirs -mapall=501:80 172.16.0.2"],"delete":["39","        \/vagrant -alldirs -mapall=501:80 172.16.0.2","61","        \/vagrant -alldirs -mapall=501:80 172.16.0.2","62","        \/vagrant\/other -alldirs -mapall=501:80 172.16.0.2"]}]}},"a438e854189114eee6a2561ef4b02afbf1256a52":{"changes":{"lib\/vagrant\/util\/env.rb":"MODIFY"},"diff":{"lib\/vagrant\/util\/env.rb":[{"add":["28","      def self.with_clean_env(&block)"],"delete":["28","      def with_clean_env(&block)"]}]}},"563ce33738340a4638cf0632787b86c0fcb670ab":{"changes":{"plugins\/commands\/resume\/command.rb":"MODIFY","website\/source\/docs\/cli\/resume.html.md":"MODIFY"},"diff":{"plugins\/commands\/resume\/command.rb":[{"add":["2","require Vagrant.source_root.join(\"plugins\/commands\/up\/start_mixins\")","3","","7","      # We assume that the `up` plugin exists and that we'll have access","8","      # to this.","9","      include VagrantPlugins::CommandUp::StartMixins","10","","16","        options = {}","17","        options[:provision_ignore_sentinel] = false","18","","21","          o.separator \"\"","22","          build_start_options(o, options)","29","        # Validate the provisioners","30","        validate_provisioner_flags!(options, argv)","31","","34","          machine.action(:resume, options)"],"delete":["20","          machine.action(:resume)"]}],"website\/source\/docs\/cli\/resume.html.md":[{"add":["16","","17","The configured provisioners will not run again, by default. You can force","18","the provisioners to re-run by specifying the `--provision` flag.","19","","20","# Options","21","","22","* `--provision` - Force the provisioners to run.","23","","24","* `--provision-with x,y,z` - This will only run the given provisioners. For","25","  example, if you have a `:shell` and `:chef_solo` provisioner and run","26","  `vagrant provision --provision-with shell`, only the shell provisioner will","27","  be run."],"delete":[]}]}},"cae0bfdf9d097bb207070461a48447312aba8d36":{"changes":{"plugins\/provisioners\/ansible\/provisioner\/host.rb":"MODIFY"},"diff":{"plugins\/provisioners\/ansible\/provisioner\/host.rb":[{"add":["134","              begin","135","                # ansible dir inventory will ignore files starting with '.'","136","                inventory_tmpfile = Tempfile.new('.vagrant_ansible_inventory', inventory_path)","137","                inventory_tmpfile.write(inventory_content)","138","                inventory_tmpfile.close","139","                File.rename(inventory_tmpfile.path, inventory_file)","140","              ensure","141","                inventory_tmpfile.close","142","                inventory_tmpfile.unlink"],"delete":["134","              inventory_file.open('w') do |file|","135","                file.write(inventory_content)"]}]}},"3519f82b2443855190244ca0d9f1596dae68fffd":{"changes":{"plugins\/guests\/redhat\/cap\/nfs_client.rb":"MODIFY"},"diff":{"plugins\/guests\/redhat\/cap\/nfs_client.rb":[{"add":["17","              \/bin\/systemctl restart rpcbind nfs-server"],"delete":["17","              \/bin\/systemctl restart rpcbind nfs"]}]}},"fc6bc723f7ab54c689116853bcb150decc3d8668":{"changes":{"plugins\/provisioners\/docker\/client.rb":"MODIFY"},"diff":{"plugins\/provisioners\/docker\/client.rb":[{"add":["128","          # using full container ID from now on.","129","          return comm.test(\"#{docker_ps} --no-trunc | grep -wFq #{id}\")"],"delete":["128","          # See https:\/\/github.com\/dotcloud\/docker\/pull\/2140 for more information","129","          return comm.test(\"#{docker_ps} | grep -wFq #{id}\") ||","130","            comm.test(\"#{docker_ps} --no-trunc | grep -wFq #{id}\")"]}]}},"35ee3e2342a3af12e23c8f7813687f94e71a95ab":{"changes":{"test\/unit\/vagrant\/plugin\/v2\/trigger_test.rb":"MODIFY","lib\/vagrant\/plugin\/v2\/trigger.rb":"MODIFY"},"diff":{"test\/unit\/vagrant\/plugin\/v2\/trigger_test.rb":[{"add":["416","      allow(Process).to receive(:exit!).and_return(true)","422","      expect(Process).to receive(:exit!).with(3)","423","      subject.send(:trigger_abort, 3)"],"delete":["421","      expect { subject.send(:trigger_abort, 3) }.to raise_error(SystemExit)"]}],"lib\/vagrant\/plugin\/v2\/trigger.rb":[{"add":["303","          Process.exit!(exit_code)"],"delete":["303","          exit(exit_code)"]}]}},"28e0646dc2cb5a28106a35faf82605f846f765ad":{"changes":{"plugins\/provisioners\/ansible\/provisioner.rb":"MODIFY","CHANGELOG.md":"MODIFY"},"diff":{"plugins\/provisioners\/ansible\/provisioner.rb":[{"add":["28","        # is a bit demanding for some overloaded developer boxes. This is particularly"],"delete":["28","        # is a bit demanding for some overloaded developer boxes. This is particularly "]}],"CHANGELOG.md":[{"add":["8","  - provisioners\/ansible: increase ansible connection timeout to 30 seconds [GH-4860]"],"delete":["8","  - provisioners\/ansible: increase ansible connection timeout to 30 seconds [GH-5175]"]}]}},"661b6a481349e9f91c08896082fe0e8591a1f95c":{"changes":{"plugins\/commands\/login\/client.rb":"MODIFY"},"diff":{"plugins\/commands\/login\/client.rb":[{"add":["52","\t  RestClient.proxy = proxy"],"delete":[]}]}},"acde6e1b16674f3d63f6d2e94e43ce57c95641fa":{"changes":{"plugins\/provisioners\/docker\/cap\/fedora\/docker_install.rb":"ADD","plugins\/guests\/redhat\/cap\/rsync.rb":"MODIFY","plugins\/guests\/redhat\/cap\/nfs_client.rb":"MODIFY","plugins\/guests\/redhat\/plugin.rb":"MODIFY","plugins\/provisioners\/chef\/cap\/redhat\/chef_install.rb":"MODIFY","plugins\/provisioners\/docker\/plugin.rb":"MODIFY","plugins\/provisioners\/cfengine\/cap\/redhat\/cfengine_install.rb":"MODIFY"},"diff":{"plugins\/provisioners\/docker\/cap\/fedora\/docker_install.rb":[{"add":[],"delete":[]}],"plugins\/guests\/redhat\/cap\/rsync.rb":[{"add":["6","            if VagrantPlugins::GuestRedHat::Plugin.dnf?(machine)","7","              comm.sudo(\"dnf -y install rsync\")","8","            else","9","              comm.sudo(\"yum -y install rsync\")","10","            end"],"delete":["6","            comm.sudo(\"yum -y install rsync\")"]}],"plugins\/guests\/redhat\/cap\/nfs_client.rb":[{"add":["5","          if VagrantPlugins::GuestRedHat::Plugin.dnf?(machine)","6","            machine.communicate.sudo(\"dnf -y install nfs-utils nfs-utils-lib\")","7","          else","8","            machine.communicate.sudo(\"yum -y install nfs-utils nfs-utils-lib\")","9","          end"],"delete":["5","          machine.communicate.sudo(\"yum -y install nfs-utils nfs-utils-lib\")"]}],"plugins\/guests\/redhat\/plugin.rb":[{"add":["47","","48","      def self.dnf?(machine)","49","        machine.communicate.test(\"\/usr\/bin\/which -s dnf\")","50","      end"],"delete":[]}],"plugins\/provisioners\/chef\/cap\/redhat\/chef_install.rb":[{"add":["8","            if dnf?(machine)","9","              machine.communicate.sudo(\"dnf install -y -q curl\")","10","            else","11","              machine.communicate.sudo(\"yum install -y -q curl\")","12","            end","17","","18","          protected","19","","20","          def self.dnf?(machine)","21","            machine.communicate.test(\"\/usr\/bin\/which -s dnf\")","22","          end"],"delete":["8","            machine.communicate.sudo(\"yum install -y -q curl\")"]}],"plugins\/provisioners\/docker\/plugin.rb":[{"add":["26","      guest_capability(\"fedora\", \"docker_install\") do","27","        require_relative \"cap\/fedora\/docker_install\"","28","        Cap::Fedora::DockerInstall","29","      end","30",""],"delete":[]}],"plugins\/provisioners\/cfengine\/cap\/redhat\/cfengine_install.rb":[{"add":["16","              if dnf?(machine)","17","                comm.sudo(\"dnf -y install #{config.package_name}\")","18","              else","19","                comm.sudo(\"yum -y install #{config.package_name}\")","20","              end","23","","24","          protected","25","","26","          def self.dnf?(machine)","27","            machine.communicate.test(\"\/usr\/bin\/which -s dnf\")","28","          end"],"delete":["16","              comm.sudo(\"yum -y install #{config.package_name}\")"]}]}},"0ac26be4efd0cea2a6f1bfba4fc03e7437dafabf":{"changes":{"test\/unit\/plugins\/guests\/darwin\/cap\/shell_expand_guest_path_test.rb":"MODIFY","plugins\/guests\/linux\/cap\/shell_expand_guest_path.rb":"MODIFY","test\/unit\/plugins\/guests\/linux\/cap\/shell_expand_guest_path_test.rb":"MODIFY","plugins\/guests\/darwin\/cap\/shell_expand_guest_path.rb":"MODIFY","test\/unit\/plugins\/guests\/freebsd\/cap\/shell_expand_guest_path_test.rb":"MODIFY","test\/unit\/plugins\/guests\/netbsd\/cap\/shell_expand_guest_path_test.rb":"MODIFY","plugins\/guests\/openbsd\/cap\/shell_expand_guest_path.rb":"MODIFY","plugins\/guests\/netbsd\/cap\/shell_expand_guest_path.rb":"MODIFY","plugins\/guests\/freebsd\/cap\/shell_expand_guest_path.rb":"MODIFY","test\/unit\/plugins\/guests\/openbsd\/cap\/shell_expand_guest_path_test.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/guests\/darwin\/cap\/shell_expand_guest_path_test.rb":[{"add":["35","      path_with_spaces = \"\/home\/vagrant\\\\ folder\/folder\"","37","        with(any_args).and_yield(:stdout, path_with_spaces)","39","      expect(machine.communicate).to receive(:execute).with(\"printf #{path_with_spaces}\")"],"delete":["36","        with(any_args).and_yield(:stdout, \"\/home\/vagrant folder\/folder\")","38","      expect(machine.communicate).to receive(:execute).with(\"printf \\\"#{path}\\\"\")"]}],"plugins\/guests\/linux\/cap\/shell_expand_guest_path.rb":[{"add":["6","          path = path.gsub(\/ \/, '\\ ')","7","          machine.communicate.execute(\"echo; printf #{path}\") do |type, data|"],"delete":["6","          machine.communicate.execute(\"echo; printf \\\"#{path}\\\"\") do |type, data|"]}],"test\/unit\/plugins\/guests\/linux\/cap\/shell_expand_guest_path_test.rb":[{"add":["35","      path_with_spaces = \"\/home\/vagrant\\\\ folder\/folder\"","37","        with(any_args).and_yield(:stdout, path_with_spaces)","39","      expect(machine.communicate).to receive(:execute).with(\"echo; printf #{path_with_spaces}\")"],"delete":["36","        with(any_args).and_yield(:stdout, \"\/home\/vagrant folder\/folder\")","38","      expect(machine.communicate).to receive(:execute).with(\"echo; printf \\\"#{path}\\\"\")"]}],"plugins\/guests\/darwin\/cap\/shell_expand_guest_path.rb":[{"add":["6","          path = path.gsub(\/ \/, '\\ ')","7","          machine.communicate.execute(\"printf #{path}\") do |type, data|"],"delete":["6","          machine.communicate.execute(\"printf \\\"#{path}\\\"\") do |type, data|"]}],"test\/unit\/plugins\/guests\/freebsd\/cap\/shell_expand_guest_path_test.rb":[{"add":["35","      path_with_spaces = \"\/home\/vagrant\\\\ folder\/folder\"","37","        with(any_args).and_yield(:stdout, path_with_spaces)","40","        .with(\"printf #{path_with_spaces}\", {:shell=>\"sh\"})"],"delete":["36","        with(any_args).and_yield(:stdout, \"\/home\/vagrant folder\/folder\")","39","        .with(\"printf \\\"#{path}\\\"\", {:shell=>\"sh\"})"]}],"test\/unit\/plugins\/guests\/netbsd\/cap\/shell_expand_guest_path_test.rb":[{"add":["35","      path_with_spaces = \"\/home\/vagrant\\\\ folder\/folder\"","37","        with(any_args).and_yield(:stdout, path_with_spaces)","39","      expect(machine.communicate).to receive(:execute).with(\"printf #{path_with_spaces}\")"],"delete":["36","        with(any_args).and_yield(:stdout, \"\/home\/vagrant folder\/folder\")","38","      expect(machine.communicate).to receive(:execute).with(\"printf \\\"#{path}\\\"\")"]}],"plugins\/guests\/openbsd\/cap\/shell_expand_guest_path.rb":[{"add":["6","          path = path.gsub(\/ \/, '\\ ')","7","          machine.communicate.execute(\"printf #{path}\") do |type, data|"],"delete":["6","          machine.communicate.execute(\"printf \\\"#{path}\\\"\") do |type, data|"]}],"plugins\/guests\/netbsd\/cap\/shell_expand_guest_path.rb":[{"add":["6","          path = path.gsub(\/ \/, '\\ ')","7","          machine.communicate.execute(\"printf #{path}\") do |type, data|"],"delete":["6","          machine.communicate.execute(\"printf \\\"#{path}\\\"\") do |type, data|"]}],"plugins\/guests\/freebsd\/cap\/shell_expand_guest_path.rb":[{"add":["6","          path = path.gsub(\/ \/, '\\ ')","7","          machine.communicate.execute(\"printf #{path}\","],"delete":["6","          machine.communicate.execute(\"printf \\\"#{path}\\\"\","]}],"test\/unit\/plugins\/guests\/openbsd\/cap\/shell_expand_guest_path_test.rb":[{"add":["35","      path_with_spaces = \"\/home\/vagrant\\\\ folder\/folder\"","37","        with(any_args).and_yield(:stdout, path_with_spaces)","39","      expect(machine.communicate).to receive(:execute).with(\"printf #{path_with_spaces}\")"],"delete":["36","        with(any_args).and_yield(:stdout, \"\/home\/vagrant folder\/folder\")","38","      expect(machine.communicate).to receive(:execute).with(\"printf \\\"#{path}\\\"\")"]}]}},"80547984276477ebf3449d30f27d0c96fe505707":{"changes":{"website\/docs\/source\/stylesheets\/_pages.less":"MODIFY","website\/docs\/source\/layouts\/layout.erb":"MODIFY","website\/docs\/source\/stylesheets\/_mixins.less":"MODIFY","website\/docs\/source\/stylesheets\/_sidebar.less":"MODIFY"},"diff":{"website\/docs\/source\/stylesheets\/_pages.less":[{"add":["4","        .fixed-bg;","179","        .sidebar-background { \/\/sidebar background","180","            .inner-bg-large;","181","        }","209","        .sidebar-background { \/\/sidebar background","210","            .docs-bg-large;","211","        }","212",""],"delete":["4","        width: 100%;","5","        height: 100%;","6","        top: 0;","7","        position: fixed;","8","        z-index: -5; \/\/keep it in the back","183","        .inner-bg-large; \/\/sidebar background","207","        .docs-bg-large; \/\/sidebar background","208",""]}],"website\/docs\/source\/layouts\/layout.erb":[{"add":["49","\t\t\t\t<div class=\"sidebar-background\"><\/div>"],"delete":[]}],"website\/docs\/source\/stylesheets\/_mixins.less":[{"add":["65",".fixed-bg {","66","  position: fixed;","67","  top: 0;","68","  width: 100%;","69","  height: 100%;","70","  z-index: -5; \/\/keep it in the back","71","  will-change: transform;","72","}","73",""],"delete":["76","  background-attachment:fixed;","101","  background-attachment:fixed;"]}],"website\/docs\/source\/stylesheets\/_sidebar.less":[{"add":["9","    &-background { \/\/background image","10","        .fixed-bg;","11","    }","12",""],"delete":[]}]}},"cdcedb0a9e5db8754eda799c2a98b60194624595":{"changes":{"plugins\/commands\/login\/plugin.rb":"MODIFY","\/dev\/null":"DELETE","plugins\/commands\/cloud\/auth\/middleware\/add_authentication.rb":"ADD","plugins\/commands\/cloud\/plugin.rb":"MODIFY","plugins\/commands\/cloud\/locales\/en.yml":"MODIFY","test\/unit\/plugins\/commands\/cloud\/auth\/middleware\/add_authentication_test.rb":"ADD"},"diff":{"plugins\/commands\/login\/plugin.rb":[{"add":[],"delete":["19","      action_hook(:cloud_authenticated_boxes, :authenticate_box_url) do |hook|","20","        require_relative \"middleware\/add_authentication\"","21","        hook.prepend(AddAuthentication)","22","      end","23",""]}],"\/dev\/null":[{"add":[],"delete":[]}],"plugins\/commands\/cloud\/auth\/middleware\/add_authentication.rb":[{"add":[],"delete":[]}],"plugins\/commands\/cloud\/plugin.rb":[{"add":["19","      action_hook(:cloud_authenticated_boxes, :authenticate_box_url) do |hook|","20","        require_relative \"auth\/middleware\/add_authentication\"","21","        hook.prepend(AddAuthentication)","22","      end","23",""],"delete":[]}],"plugins\/commands\/cloud\/locales\/en.yml":[{"add":["2","    middleware:","3","      authentication:","4","        different_target: |-","5","          Vagrant has detected a custom Vagrant server in use for downloading","6","          box files. An authentication token is currently set which will be","7","          added to the box request. If the custom Vagrant server should not","8","          be receiving the authentication token, please unset it.","9","","10","            Known Vagrant server:  %{known_host}","11","            Custom Vagrant server: %{custom_host}","12","","13","          Press ctrl-c to cancel..."],"delete":[]}],"test\/unit\/plugins\/commands\/cloud\/auth\/middleware\/add_authentication_test.rb":[{"add":[],"delete":[]}]}},"1b0148bc783298c7aa16a519e133bb26bcc1cc9f":{"changes":{"test\/unit\/plugins\/synced_folders\/rsync\/helper_test.rb":"MODIFY","plugins\/synced_folders\/rsync\/command\/rsync_auto.rb":"MODIFY","test\/unit\/plugins\/synced_folders\/rsync\/command\/rsync_auto_test.rb":"MODIFY","plugins\/synced_folders\/rsync\/helper.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/synced_folders\/rsync\/helper_test.rb":[{"add":["34","      expect(described_class.exclude_to_regexp(\"foo\/\")).","35","        to eq(\/foo\\\/\/)","39","      expect(described_class.exclude_to_regexp(\"\/foo\")).","40","        to eq(\/foo\/)","44","      expect(described_class.exclude_to_regexp(\"fo**o\")).","45","        to eq(\/fo.*o\/)","49","      expect(described_class.exclude_to_regexp(\"fo*o\")).","50","        to eq(\/fo[^\\\/]*o\/)"],"delete":["34","      expect(described_class.exclude_to_regexp(path, \"foo\/\")).","35","        to eq(\/^#{Regexp.escape(path)}\\\/.*foo\\\/\/)","39","      expect(described_class.exclude_to_regexp(path, \"\/foo\")).","40","        to eq(\/^\\\/foo\\\/bar\\\/foo\/)","44","      expect(described_class.exclude_to_regexp(path, \"fo**o\")).","45","        to eq(\/^#{Regexp.escape(path)}\\\/.*fo.*o\/)","49","      expect(described_class.exclude_to_regexp(path, \"fo*o\")).","50","        to eq(\/^#{Regexp.escape(path)}\\\/.*fo[^\\\/]*o\/)"]}],"plugins\/synced_folders\/rsync\/command\/rsync_auto.rb":[{"add":["123","                  ignores << RsyncHelper.exclude_to_regexp(pattern.to_s)","126","","127","              # Always ignore Vagrant","128","              ignores << \/.vagrant\\\/\/","129","              ignores.uniq!"],"delete":["123","                  ignores << RsyncHelper.exclude_to_regexp(hostpath, pattern.to_s)"]}],"test\/unit\/plugins\/synced_folders\/rsync\/command\/rsync_auto_test.rb":[{"add":["102","      expect(Listen).to receive(:to).","103","        with(\"\/Users\/brian\/code\/vagrant-sandbox\",","104","             \"\/Users\/brian\/code\/relative-dir\",","105","             {:ignore=>[\/.vagrant\\\/\/],","106","                        :force_polling=>false})"],"delete":["68","        exclude: false,","72","        exclude: false,","76","        exclude: false,"]}],"plugins\/synced_folders\/rsync\/helper.rb":[{"add":["18","      #","19","      # Note: Listen expects a path relative to the parameter passed into the","20","      # Listener, not a fully qualified path","21","      #","22","      # @param [String]  - exclude path","23","      # @return [Regexp] - A regex of the path, modified, to exclude","24","      def self.exclude_to_regexp(exclude)","39","        Regexp.new(exclude)"],"delete":["18","      def self.exclude_to_regexp(path, exclude)","26","        path   = \"#{path}\/\" if !path.end_with?(\"\/\")","27","        regexp = \"^#{Regexp.escape(path)}\"","28","        regexp += \".*\" if !start_anchor","29","","36","        regexp += exclude","38","        Regexp.new(regexp)"]}]}},"c2c1a443fdd6bb174183c7ee97d01e39db9a8581":{"changes":{"vagrant.gemspec":"MODIFY","website\/docs\/source\/v2\/provisioning\/chef_common.html.md":"MODIFY","website\/www\/source\/vmware\/index.html.erb":"MODIFY","plugins\/provisioners\/ansible\/provisioner\/guest.rb":"MODIFY","website\/docs\/source\/v2\/vagrantfile\/tips.html.md":"MODIFY","plugins\/provisioners\/puppet\/provisioner\/puppet.rb":"MODIFY","README.md":"MODIFY"},"diff":{"vagrant.gemspec":[{"add":["10","  s.license       = 'MIT'"],"delete":[]}],"website\/docs\/source\/v2\/provisioning\/chef_common.html.md":[{"add":["43","  or the Chef Development Kit. The default value is `\"current\"` which will pull","44","  ChefDK and the latest released version of Chef. For older versions, you may","45","  need to change the channel to \"stable\". Because Chef Software floats the","46","  versions that are contained in the channel, they may change and Vagrant is","47","  unable to detect this."],"delete":["43","  or the Chef Development Kit. The default value is `\"current\"`."]}],"website\/www\/source\/vmware\/index.html.erb":[{"add":["329","\t\t\t\t\t\tto find out if you qualify. Unfortunately we cannot retroactively"],"delete":["329","\t\t\t\t\t\tto find out if you qualify. Unfortuantely we cannot retroactively"]}],"plugins\/provisioners\/ansible\/provisioner\/guest.rb":[{"add":["54","            \"ansible-galaxy info --help && ansible-playbook --help\","],"delete":["54","            \"ansible-galaxy --help && ansible-playbook --help\","]}],"website\/docs\/source\/v2\/vagrantfile\/tips.html.md":[{"add":["49","","50","## Overwrite host locale in ssh session","51","","52","Usually, host locale environment variables are passed to guest. It may cause","53","failures if the guest software do not support host locale. One possible solution","54","is override locale in the `Vagrantfile`:","55","","56","<pre class=\"prettyprint\">","57","ENV[\"LC_ALL\"] = \"en_US.UTF-8\"","58","","59","Vagrant.configure(2) do |config|","60","  # ...","61","end","62","<\/pre>","63","","64","The change is only visible within the `Vagrantfile`."],"delete":[]}],"plugins\/provisioners\/puppet\/provisioner\/puppet.rb":[{"add":["232","              command = \"cd #{config.working_directory}; if ($?) \\{ #{command} \\}\""],"delete":["232","              command = \"cd #{config.working_directory}; if (`$?) \\{ #{command} \\}\""]}],"README.md":[{"add":["55","To install Vagrant from source, please [follow the guide in the Wiki](https:\/\/github.com\/mitchellh\/vagrant\/wiki\/Installing-Vagrant-from-Source).","57","You can run the test suite with:","59","    bundle exec rake"],"delete":["55","### Dependencies and Unit Tests","57","To hack on Vagrant, you'll need [bundler](https:\/\/github.com\/bundler\/bundler) which can","58","be installed with a simple `gem install bundler`. Afterwards, do the following:","60","    bundle install","61","    rake"]}]}},"3564b17925c4fc72f5001cf28e7524834b0acd5e":{"changes":{"templates\/locales\/en.yml":"MODIFY"},"diff":{"templates\/locales\/en.yml":[{"add":["1016","        Or you may want to try updating the installed plugins to their latest","1017","        versions:","1018","","1019","          vagrant plugin update","1020",""],"delete":[]}]}},"c0d4b39eea8203651932bd58e3525fa167719b3d":{"changes":{"plugins\/commands\/package\/command.rb":"MODIFY"},"diff":{"plugins\/commands\/package\/command.rb":[{"add":["82","        vm.action(:package, **opts)"],"delete":["82","        vm.action(:package, opts)"]}]}},"820607bbf644d1956fbc98867d4ec1e7fc32143c":{"changes":{"test\/unit\/plugins\/guests\/bsd\/cap\/remove_public_key_test.rb":"ADD","plugins\/guests\/bsd\/cap\/public_key.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/guests\/bsd\/cap\/remove_public_key_test.rb":[{"add":[],"delete":[]}],"plugins\/guests\/bsd\/cap\/public_key.rb":[{"add":["56","              chmod 0600 ~\/.ssh\/authorized_keys"],"delete":[]}]}},"2f4a0af5d13e24e2a019130dd6a84ecb10f36b21":{"changes":{"plugins\/provisioners\/salt\/bootstrap-salt.ps1":"MODIFY"},"diff":{"plugins\/provisioners\/salt\/bootstrap-salt.ps1":[{"add":["1","$version = '2014.7.1'","31","#Wait for process to exit before continuing...","32","C:\\tmp\\salt.exe \/S | Out-Null","33","","34","# Check if minion config has been uploaded","35","if (Test-Path C:\\tmp\\minion) {","36","  cp C:\\tmp\\minion C:\\salt\\conf\\","37","}"],"delete":["1","$version = '2014.1.10'","15","# Check if minion config has been uploaded","16","if (Test-Path C:\\tmp\\minion) {","17","  cp C:\\tmp\\minion C:\\salt\\conf\\","18","}","19","","36","C:\\tmp\\salt.exe \/S"]}]}},"00c7b1e00530b98f3c4cc9219ca0632296aa50f7":{"changes":{"plugins\/provisioners\/salt\/provisioner.rb":"MODIFY"},"diff":{"plugins\/provisioners\/salt\/provisioner.rb":[{"add":["173","      # Get command-line options for masterless provisioning","174","      def get_masterless","175","        options = \"\"","176","","177","        if @config.masterless","178","          options = \" --local\"","179","          if @config.minion_id","180","            options += \" --id #{@config.minion_id}\"","181","          end","182","        end","183","","184","        return options","185","      end","186","","343","            @machine.communicate.sudo(\"salt '*' state.highstate --verbose#{get_masterless}#{get_loglevel}#{get_colorize}#{get_pillar}\") do |type, data|","354","              @machine.communicate.execute(\"C:\\\\salt\\\\salt-call.bat state.highstate --retcode-passthrough#{get_masterless}#{get_loglevel}#{get_colorize}#{get_pillar}\", opts) do |type, data|","363","              @machine.communicate.sudo(\"salt-call state.highstate --retcode-passthrough#{get_masterless}#{get_loglevel}#{get_colorize}#{get_pillar}\") do |type, data|"],"delete":["324","          local=\"\"","325","          if @config.masterless","326","            local=\" --local\"","327","          end","333","            @machine.communicate.sudo(\"salt '*' state.highstate --verbose #{local}#{get_loglevel}#{get_colorize}#{get_pillar}\") do |type, data|","344","              @machine.communicate.execute(\"C:\\\\salt\\\\salt-call.bat state.highstate --retcode-passthrough #{local}#{get_loglevel}#{get_colorize}#{get_pillar}\", opts) do |type, data|","353","              @machine.communicate.sudo(\"salt-call state.highstate --retcode-passthrough #{local}#{get_loglevel}#{get_colorize}#{get_pillar}\") do |type, data|"]}]}},"a8b2f78f59643328c2d82ce07f48690e8057459e":{"changes":{"lib\/vagrant\/util\/platform.rb":"MODIFY","test\/unit\/vagrant\/util\/platform_test.rb":"MODIFY"},"diff":{"lib\/vagrant\/util\/platform.rb":[{"add":["191","          if path =~ \/^[a-zA-Z]:\\\\?$\/","192","            # If the path is just a drive letter, then return that as-is","193","            path + \"\\\\\"","194","          elsif path.start_with?(\"\\\\\\\\\")","195","            # If the path already starts with `\\\\` assume UNC and return as-is","196","            path","197","          else","198","            \"\\\\\\\\?\\\\\" + path.gsub(\"\/\", \"\\\\\")","199","          end"],"delete":["190","          # If the path is just a drive letter, then return that as-is","191","          return path + \"\\\\\" if path =~ \/^[a-zA-Z]:\\\\?$\/","192","","194","          \"\\\\\\\\?\\\\\" + path.gsub(\"\/\", \"\\\\\")"]}],"test\/unit\/vagrant\/util\/platform_test.rb":[{"add":["57","","58","    context \"when given a UNC path\" do","59","      let(:unc_path){ \"\\\\\\\\srvname\\\\path\" }","60","","61","      it \"should not modify the path\" do","62","        expect(described_class.windows_unc_path(unc_path).to_s).to eql(unc_path)","63","      end","64","    end"],"delete":[]}]}},"ce5bcc14ecd497e9a3c4773d23f241dbde8432e1":{"changes":{"plugins\/providers\/hyperv\/action\/import.rb":"MODIFY"},"diff":{"plugins\/providers\/hyperv\/action\/import.rb":[{"add":["21","          env[:ui].output(\"Configured Dynamic memory allocation, maxmemory is #{maxmemory}\") if maxmemory","40","          image_filename = nil","45","              image_filename = File.basename(f,image_ext)","96","          dest_path   = env[:machine].data_dir.join(\"#{image_filename}#{image_ext}\").to_s","107","          options[:memory] = memory if memory","110","          options[:vmname] = vmname if vmname"],"delete":["21","          env[:ui].output(\"Configured Dynamical memory allocation, maxmemory is #{maxmemory}\") if maxmemory","94","          dest_path   = env[:machine].data_dir.join(\"disk#{image_ext}\").to_s","105","          options[:memory] = memory if memory ","108","          options[:vmname] = vmname if vmname "]}]}},"6284a9ac5003ceaf7a23bf3a4f08b8ba4822b059":{"changes":{"plugins\/guests\/bsd\/plugin.rb":"MODIFY","plugins\/guests\/esxi\/cap\/mount_nfs_folder.rb":"MODIFY","plugins\/guests\/freebsd\/plugin.rb":"MODIFY","plugins\/guests\/bsd\/cap\/nfs.rb":"ADD","plugins\/guests\/tinycore\/cap\/mount_nfs.rb":"MODIFY","test\/unit\/plugins\/guests\/bsd\/cap\/nfs_test.rb":"ADD","plugins\/guests\/darwin\/plugin.rb":"MODIFY","\/dev\/null":"DELETE","plugins\/guests\/linux\/cap\/mount_nfs.rb":"MODIFY","plugins\/guests\/netbsd\/plugin.rb":"MODIFY","templates\/locales\/en.yml":"MODIFY","lib\/vagrant\/errors.rb":"MODIFY","plugins\/guests\/openbsd\/plugin.rb":"MODIFY"},"diff":{"plugins\/guests\/bsd\/plugin.rb":[{"add":["17","","18","      guest_capability(:bsd, :mount_nfs_folder) do","19","        require_relative \"cap\/nfs\"","20","        Cap::NFS","21","      end"],"delete":[]}],"plugins\/guests\/esxi\/cap\/mount_nfs_folder.rb":[{"add":["15","              retryable(on: Vagrant::Errors::NFSMountFailed, tries: 5, sleep: 2) do","17","                             error_class: Vagrant::Errors::NFSMountFailed)"],"delete":["15","              retryable(on: Vagrant::Errors::LinuxNFSMountFailed, tries: 5, sleep: 2) do","17","                             error_class: Vagrant::Errors::LinuxNFSMountFailed)"]}],"plugins\/guests\/freebsd\/plugin.rb":[{"add":[],"delete":["28","      guest_capability(:freebsd, :mount_nfs_folder) do","29","        require_relative \"cap\/mount_nfs_folder\"","30","        Cap::MountNFSFolder","31","      end","32",""]}],"plugins\/guests\/bsd\/cap\/nfs.rb":[{"add":[],"delete":[]}],"plugins\/guests\/tinycore\/cap\/mount_nfs.rb":[{"add":["29","            retryable(on: Vagrant::Errors::NFSMountFailed, tries: 8, sleep: 3) do","31","                                       error_class: Vagrant::Errors::NFSMountFailed)"],"delete":["29","            retryable(on: Vagrant::Errors::LinuxNFSMountFailed, tries: 8, sleep: 3) do","31","                                       error_class: Vagrant::Errors::LinuxNFSMountFailed)"]}],"test\/unit\/plugins\/guests\/bsd\/cap\/nfs_test.rb":[{"add":[],"delete":[]}],"plugins\/guests\/darwin\/plugin.rb":[{"add":[],"delete":["33","      guest_capability(:darwin, :mount_nfs_folder) do","34","        require_relative \"cap\/mount_nfs_folder\"","35","        Cap::MountNFSFolder","36","      end","37",""]}],"\/dev\/null":[{"add":[],"delete":[]}],"plugins\/guests\/linux\/cap\/mount_nfs.rb":[{"add":["42","          retryable(on: Vagrant::Errors::NFSMountFailed, tries: 8, sleep: 3) do","43","            comm.sudo(commands.join(\"\\n\"), error_class: Vagrant::Errors::NFSMountFailed)"],"delete":["42","          retryable(on: Vagrant::Errors::LinuxNFSMountFailed, tries: 8, sleep: 3) do","43","            comm.sudo(commands.join(\"\\n\"), error_class: Vagrant::Errors::LinuxNFSMountFailed)"]}],"plugins\/guests\/netbsd\/plugin.rb":[{"add":[],"delete":["28","      guest_capability(:netbsd, :mount_nfs_folder) do","29","        require_relative \"cap\/mount_nfs_folder\"","30","        Cap::MountNFSFolder","31","      end","32",""]}],"templates\/locales\/en.yml":[{"add":["881","      nfs_mount_failed: |-","882","        Mounting NFS shared folders failed. This is most often caused by the NFS","883","        client software not being installed on the guest machine. Please verify","884","        that the NFS client software is properly installed, and consult any resources","885","        specific to the linux distro you're using for more information on how to","886","        do this."],"delete":["824","      linux_nfs_mount_failed: |-","825","        Mounting NFS shared folders failed. This is most often caused by the NFS","826","        client software not being installed on the guest machine. Please verify","827","        that the NFS client software is properly installed, and consult any resources","828","        specific to the linux distro you're using for more information on how to","829","        do this."]}],"lib\/vagrant\/errors.rb":[{"add":["458","    class NFSMountFailed < VagrantError","459","      error_key(:nfs_mount_failed)","460","    end","461",""],"delete":["326","    class DarwinNFSMountFailed < VagrantError","327","      error_key(:darwin_nfs_mount_failed)","328","    end","329","","406","    class LinuxNFSMountFailed < VagrantError","407","      error_key(:linux_nfs_mount_failed)","408","    end","409",""]}],"plugins\/guests\/openbsd\/plugin.rb":[{"add":[],"delete":["28","      guest_capability(:openbsd, :mount_nfs_folder) do","29","        require_relative \"cap\/mount_nfs_folder\"","30","        Cap::MountNFSFolder","31","      end","32",""]}]}},"7d1c77f523dfa10789ee7993f3390c60e36fb2c6":{"changes":{"lib\/vagrant\/action\/builtin\/box_add.rb":"MODIFY"},"diff":{"lib\/vagrant\/action\/builtin\/box_add.rb":[{"add":["480","            url = URI.unescape(url)"],"delete":[]}]}},"40eb97893152e8a618f31b1f8e60302a1364162d":{"changes":{"lib\/vagrant\/action\/builtin\/handle_box.rb":"MODIFY"},"diff":{"lib\/vagrant\/action\/builtin\/handle_box.rb":[{"add":["66","          box_download_checksum_type = machine.config.vm.box_download_checksum_type","67","          box_download_checksum = machine.config.vm.box_download_checksum","90","              box_checksum_type: box_download_checksum_type,","91","              box_checksum: box_download_checksum,"],"delete":[]}]}},"09a37e0767483976b23fc9b084256065d05a8df9":{"changes":{"plugins\/kernel_v2\/config\/vm.rb":"MODIFY"},"diff":{"plugins\/kernel_v2\/config\/vm.rb":[{"add":["511","              if Vagrant::Util::Platform.windows?","512","                # path is split into two tokens on windows for some reason...","513","                # where 0th is drive letter, 1st is path, so line number is token 2","514","                line = e.backtrace[0].split(\":\")[2]","515","              else","516","                line = e.backtrace[0].split(\":\")[1]","517","              end"],"delete":["511","              line = e.backtrace[0].split(\":\")[1]"]}]}},"44c6f655bedeba46557f813ba53768f4b8185b42":{"changes":{"lib\/vagrant\/util\/file_checksum.rb":"MODIFY","test\/unit\/vagrant\/util\/file_checksum_test.rb":"MODIFY"},"diff":{"lib\/vagrant\/util\/file_checksum.rb":[{"add":["4","","5","require \"vagrant\/errors\"","6","","67","      raise Vagrant::Errors::BoxChecksumInvalidType,"],"delete":["64","      raise Errors::BoxChecksumInvalidType,"]}],"test\/unit\/vagrant\/util\/file_checksum_test.rb":[{"add":["34","","35","  context \"with an invalid digest\" do","36","    let(:fake_digest) { :fake_digest }","37","","38","    it \"should raise an exception if the box has an invalid checksum type\" do","39","      file = environment.workdir.join(\"file\")","40","      file.open(\"w+\") { |f| f.write(\"HELLO!\") }","41","","42","      expect{ described_class.new(file, fake_digest) }.to raise_error(Vagrant::Errors::BoxChecksumInvalidType)","43","    end","44","  end"],"delete":[]}]}},"bcc09e10e6e865f0e742548db8fa088e1484968e":{"changes":{"plugins\/communicators\/winssh\/communicator.rb":"MODIFY","website\/source\/docs\/vagrantfile\/winssh_settings.html.md":"MODIFY","test\/unit\/plugins\/communicators\/winssh\/communicator_test.rb":"MODIFY","plugins\/communicators\/winssh\/config.rb":"MODIFY"},"diff":{"plugins\/communicators\/winssh\/communicator.rb":[{"add":["35","          remote_name = \"#{machine_config_ssh.upload_directory}\\\\#{File.basename(tfile.path)}.#{remote_ext}\""],"delete":["35","          remote_name = \"C:\\\\Windows\\\\Temp\\\\#{File.basename(tfile.path)}.#{remote_ext}\""]}],"website\/source\/docs\/vagrantfile\/winssh_settings.html.md":[{"add":["163","","164","<hr>","165","","166","`config.winssh.upload_directory` - The upload directory used on the guest","167","to store scripts for execute. This is set to `C:\\Windows\\Temp` by default."],"delete":[]}],"test\/unit\/plugins\/communicators\/winssh\/communicator_test.rb":[{"add":["24","      shell: 'cmd',","25","      upload_directory: \"C:\\\\Windows\\\\Temp\""],"delete":["24","      shell: 'cmd'"]}],"plugins\/communicators\/winssh\/config.rb":[{"add":["6","      attr_accessor :upload_directory","7","","8","      def initialize","9","        super","10","        @upload_directory = UNSET_VALUE","11","      end","12","","16","        @upload_directory = \"C:\\\\Windows\\\\Temp\" if @upload_directory == UNSET_VALUE"],"delete":[]}]}},"cdbe14c09effe38033a0c4aa5edc3ce7075e79f1":{"changes":{"lib\/vagrant\/systems\/linux.rb":"MODIFY"},"diff":{"lib\/vagrant\/systems\/linux.rb":[{"add":["94","        perms << \"uid=`id -u #{vm.env.config.vm.shared_folder_uid}`\"","95","        perms << \"gid=`id -g #{vm.env.config.vm.shared_folder_gid}`\""],"delete":["94","        perms << \"uid=#{vm.env.config.vm.shared_folder_uid}\"","95","        perms << \"gid=#{vm.env.config.vm.shared_folder_gid}\""]}]}},"6b105d704db70b165fdbbb2bc58ac966899ece33":{"changes":{"plugins\/provisioners\/file\/provisioner.rb":"MODIFY","plugins\/communicators\/winrm\/shell.rb":"MODIFY","plugins\/communicators\/ssh\/communicator.rb":"MODIFY","test\/unit\/plugins\/provisioners\/file\/provisioner_test.rb":"MODIFY","test\/unit\/plugins\/communicators\/winrm\/shell_test.rb":"MODIFY","test\/unit\/plugins\/communicators\/ssh\/communicator_test.rb":"MODIFY","test\/unit\/plugins\/communicators\/winssh\/communicator_test.rb":"MODIFY"},"diff":{"plugins\/provisioners\/file\/provisioner.rb":[{"add":["8","          # If the source is a directory determine if any path modifications","9","          # need to be applied to the source for upload behavior. If the original","10","          # source value ends with a \".\" or if the original source does not end","11","          # with a \".\" but the original destination ends with a file separator","12","          # then append a \".\" character to the new source. This ensures that","13","          # the contents of the directory are uploaded to the destination and","14","          # not folder itself.","16","            if config.source.end_with?(\".\") ||","17","                (!config.destination.end_with?(File::SEPARATOR) &&","18","                !config.source.end_with?(\"#{File::SEPARATOR}.\"))","19","              source = File.join(source, \".\")","24","                                   src: config.source, dst: config.destination))"],"delete":["8","          # if source is a directory, make it then trim destination with dirname","9","          # Make sure the remote path exists","11","            # We need to make sure the actual destination folder","12","            # also exists before uploading, otherwise","13","            # you will get nested folders","14","            #","15","            # https:\/\/serverfault.com\/questions\/538368\/make-scp-always-overwrite-or-create-directory","16","            # https:\/\/unix.stackexchange.com\/questions\/292641\/get-scp-path-behave-like-rsync-path\/292732","17","            command = \"mkdir -p \\\"%s\\\"\" % destination","18","            if !destination.end_with?(File::SEPARATOR) &&","19","                !source.end_with?(\"#{File::SEPARATOR}.\")","20","              # We also need to append a '\/.' to the source folder so we copy","21","              # the contents rather than the folder itself, in case a users","22","              # destination folder differs from its source","23","              #","24","              # If source is set as `source\/` it will lose the trailing","25","              # slash due to how `File.expand_path` works, so we don't need","26","              # a conditional for that case.","27","              if @machine.config.vm.communicator == :winrm","28","                # windows needs an array of paths because of the","29","                # winrm-fs function Vagrant is using to upload file\/folder.","30","                source = Dir[\"#{source}#{File::SEPARATOR}*\"]","31","              else","32","                source << \"#{File::SEPARATOR}.\"","33","              end","35","          else","36","            command = \"mkdir -p \\\"%s\\\"\" % File.dirname(destination)","38","          comm.execute(command)","41","                                   src: source, dst: destination))"]}],"plugins\/communicators\/winrm\/shell.rb":[{"add":["110","        if from.is_a?(String) && File.directory?(from)","111","          if from.end_with?(\".\")","112","            from = from[0, from.length - 1]","113","          else","114","            to = File.join(to, File.basename(File.expand_path(from)))","115","          end","116","        end"],"delete":[]}],"plugins\/communicators\/ssh\/communicator.rb":[{"add":["11","require 'net\/sftp'","293","        if File.directory?(from)","294","          if from.end_with?(\".\")","295","            @logger.debug(\"Uploading directory contents of: #{from}\")","296","            from = from.sub(\/\\.$\/, \"\")","298","            @logger.debug(\"Uploading full directory container of: #{from}\")","299","            to = File.join(to, File.basename(File.expand_path(from)))","302","","303","        scp_connect do |scp|","304","          uploader = lambda do |path, remote_dest=nil|","305","            if File.directory?(path)","306","              Dir.new(path).each do |entry|","307","                next if entry == \".\" || entry == \"..\"","308","                full_path = File.join(path, entry)","309","                dest = File.join(to, path.sub(\/^#{Regexp.escape(from)}\/, \"\"))","310","                create_remote_directory(dest)","311","                uploader.call(full_path, dest)","312","              end","313","            else","314","              if remote_dest","315","                dest = File.join(remote_dest, File.basename(path))","316","              else","317","                dest = to","318","                if to.end_with?(File::SEPARATOR)","319","                  create_remote_directory(dest)","320","                  dest = File.join(to, File.basename(path))","321","                end","322","              end","323","              @logger.debug(\"Uploading file #{path} to remote #{dest}\")","324","              upload_file = File.open(path, \"rb\")","325","              begin","326","                scp.upload!(upload_file, dest)","327","              ensure","328","                upload_file.close","329","              end","330","            end","331","          end","332","          uploader.call(from)","333","        end","766","      def create_remote_directory(dir)","767","        execute(\"mkdir -p \\\"#{dir}\\\"\")","768","      end","769",""],"delete":["292","        scp_connect do |scp|","293","          if File.directory?(from)","294","            # Recursively upload directories","295","            scp.upload!(from, to, recursive: true)","297","            # Open file read only to fix issue [GH-1036]","298","            scp.upload!(File.open(from, \"r\"), to)"]}],"test\/unit\/plugins\/provisioners\/file\/provisioner_test.rb":[{"add":["101","    it \"appends a '\/.' to expanded source if defined in original source\" do","102","      allow(config).to receive(:source).and_return(\"\/source\/.\")","104","      allow(config).to receive(:destination).and_return(\"\/foo\/bar\")","106","      expect(communicator).to receive(:upload).with(\"\/source\/.\", \"\/foo\/bar\")"],"delete":["36","      expect(communicator).to receive(:execute).with(\"mkdir -p \\\"\/foo\\\"\")","37","","45","      expect(communicator).to receive(:execute).with(\"mkdir -p \\\"\/foo bar\\\"\")","46","","54","      expect(communicator).to receive(:execute).with(\"mkdir -p \\\"\/foo\/bar\\\"\")","55","","107","    it \"sends an array of files and folders if winrm and destination doesn't end with file separator\" do","108","      files = [\"\/source\/file.py\", \"\/source\/folder\"]","109","      allow(Dir).to receive(:[]).and_return(files)","110","      allow(config).to receive(:source).and_return(\"\/source\")","111","      allow(config).to receive(:destination).and_return(\"\/foo\/bar\")","113","      allow(machine.config.vm).to receive(:communicator).and_return(:winrm)","115","      expect(guest).to receive(:capability?).","116","        with(:shell_expand_guest_path).and_return(true)","117","      expect(guest).to receive(:capability).","118","        with(:shell_expand_guest_path, \"\/foo\/bar\").and_return(\"\/foo\/bar\")","119","","120","      expect(communicator).to receive(:upload)","121","        .with(files, \"\/foo\/bar\")"]}],"test\/unit\/plugins\/communicators\/winrm\/shell_test.rb":[{"add":["35","","36","    before do","37","      allow(WinRM::FS::FileManager).to receive(:new).with(connection)","38","        .and_return(fm)","39","    end","40","","62","","63","    context \"when source is a directory\" do","64","      let(:source) { \"path\/sourcedir\" }","65","","66","      before do","67","        allow(File).to receive(:directory?).with(\/#{Regexp.escape(source)}\/).and_return(true)","68","      end","69","","70","      it \"should add source directory name to destination\" do","71","        expect(fm).to receive(:upload) do |from, to|","72","          expect(to).to include(\"sourcedir\")","73","        end","74","        subject.upload(source, \"\/dest\")","75","      end","76","","77","      it \"should not add source directory name to destination when source ends with '.'\" do","78","        source << \"\/.\"","79","        expect(fm).to receive(:upload) do |from, to|","80","          expect(to).to eq(\"\/dest\")","81","        end","82","        subject.upload(source, \"\/dest\")","83","      end","84","    end"],"delete":["40","      allow(WinRM::FS::FileManager).to receive(:new).with(connection)","41","        .and_return(fm)","53","      allow(WinRM::FS::FileManager).to receive(:new).with(connection)","54","        .and_return(fm)"]}],"test\/unit\/plugins\/communicators\/ssh\/communicator_test.rb":[{"add":["499","      allow(communicator).to receive(:create_remote_directory)","502","    context \"directory uploads\" do","503","      let(:test_dir) { @dir }","504","      let(:test_file) { File.join(test_dir, \"test-file\") }","505","      let(:dir_name) { File.basename(test_dir) }","506","      let(:file_name) { File.basename(test_file) }","507","","508","      before do","509","        @dir = Dir.mktmpdir(\"vagrant-test\")","510","        FileUtils.touch(test_file)","511","      end","512","","513","      after { FileUtils.rm_rf(test_dir) }","514","","515","      it \"uploads directory when directory path provided\" do","516","        expect(scp).to receive(:upload!).with(instance_of(File),","517","          File.join(\"\", \"destination\", dir_name, file_name))","518","        communicator.upload(test_dir, \"\/destination\")","519","      end","520","","521","      it \"uploads contents of directory when dot suffix provided on directory\" do","522","        expect(scp).to receive(:upload!).with(instance_of(File),","523","          File.join(\"\", \"destination\", file_name))","524","        communicator.upload(File.join(test_dir, \".\"), \"\/destination\")","525","      end","526","","527","      it \"creates directories before upload\" do","528","        expect(communicator).to receive(:create_remote_directory).with(","529","          \/#{Regexp.escape(File.join(\"\", \"destination\", dir_name))}\/)","530","        allow(scp).to receive(:upload!)","531","        communicator.upload(test_dir, \"\/destination\")","545","    it \"uploads file to directory if destination ends with file separator\" do","546","      file = Tempfile.new('vagrant-test')","547","      begin","548","        expect(scp).to receive(:upload!).with(instance_of(File), \"\/destination\/dir\/#{File.basename(file.path)}\")","549","        expect(communicator).to receive(:create_remote_directory).with(\"\/destination\/dir\/\")","550","        communicator.upload(file.path, \"\/destination\/dir\/\")","551","      ensure","552","        file.delete","553","      end","554","    end","555","","649","        cipher_array = %w(aes256-ctr aes192-ctr aes128-ctr"],"delete":["501","    it \"uploads a directory if local path is a directory\" do","502","      Dir.mktmpdir('vagrant-test') do |dir|","503","        expect(scp).to receive(:upload!).with(dir, '\/destination', recursive: true)","504","        communicator.upload(dir, '\/destination')","611","        cipher_array = %w(aes256-ctr aes192-ctr aes128-ctr "]}],"test\/unit\/plugins\/communicators\/winssh\/communicator_test.rb":[{"add":["228","      allow(communicator).to receive(:create_remote_directory)","234","        FileUtils.touch(File.join(dir, \"test-file\"))","235","        expect(scp).to receive(:upload!).with(an_instance_of(File), \/test-file\/)"],"delete":["233","        expect(scp).to receive(:upload!).with(dir, 'C:\\destination', recursive: true)"]}]}},"a56e118b16901f58b5bc0843e1174bde65afec82":{"changes":{"test\/unit\/plugins\/providers\/virtualbox\/action\/network_test.rb":"MODIFY","plugins\/providers\/virtualbox\/action\/network.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/providers\/virtualbox\/action\/network_test.rb":[{"add":["44","  it \"creates a host-only interface with an IPv6 address <prefix>:1\" do","45","    guest = double(\"guest\")","46","    machine.config.vm.network 'private_network', { type: :static, ip: 'dead:beef::100' }","47","    #allow(driver).to receive(:read_bridged_interfaces) { [] }","48","    allow(driver).to receive(:read_host_only_interfaces) { [] }","49","    #allow(driver).to receive(:read_dhcp_servers) { [] }","50","    allow(machine).to receive(:guest) { guest }","51","    allow(driver).to receive(:create_host_only_network) {{ name: 'vboxnet0' }}","52","    allow(guest).to receive(:capability)","53","    interface_ip = 'dead:beef::1'","54","","55","    subject.call(env)","56","","57","    expect(driver).to have_received(:create_host_only_network).with({","58","      adapter_ip: interface_ip,","59","      netmask: 64,","60","    })","61","","62","    expect(guest).to have_received(:capability).with(:configure_networks, [{","63","      type: :static6,","64","      adapter_ip: 'dead:beef::1',","65","      ip: 'dead:beef::100',","66","      netmask: 64,","67","      auto_config: true,","68","      interface: nil","69","    }])","70","  end","71",""],"delete":[]}],"plugins\/providers\/virtualbox\/action\/network.rb":[{"add":["292","            # Set adapter IP to <prefix>::1","293","            options[:adapter_ip] ||= (ip.mask(options[:netmask].to_i) | 1).to_s"],"delete":["292","            # IPv6 we just mask the address and use that as the adapter","293","            options[:adapter_ip] ||= ip.mask(options[:netmask].to_i).to_s"]}]}},"62b7e3516904465f31b4a46a9993ebb4d58a9296":{"changes":{"plugins\/providers\/docker\/action\/prepare_networks.rb":"MODIFY","test\/unit\/plugins\/providers\/docker\/action\/prepare_networks_test.rb":"MODIFY"},"diff":{"plugins\/providers\/docker\/action\/prepare_networks.rb":[{"add":["193","            prefix = subnet.ipv4? ? 24 : 64","194","            base_opts[:subnet] = \"#{subnet}\/#{prefix}\"","299","          prefix = range.ipv4? ? 24 : 64","300","          \"#{range}\/#{prefix}\""],"delete":["193","            base_opts[:subnet] = \"#{subnet}\/#{subnet.prefix}\"","284","                puts \"we in here\"","299","          \"#{range}\/#{range.prefix}\""]}],"test\/unit\/plugins\/providers\/docker\/action\/prepare_networks_test.rb":[{"add":["307","    let(:ipaddr) { double(\"ipaddr\", prefix: 22, succ: \"10.1.10.2\", ipv4?: true, ipv6?: false) }","333","                          ipv4?: true, ipv6?: false) }","349","                          ipv4?: true, ipv6?: false) }"],"delete":["307","    let(:ipaddr) { double(\"ipaddr\", prefix: 22, succ: \"10.1.10.2\", ipv6?: false) }","333","                          ipv6?: false) }","349","                          ipv6?: false) }"]}]}},"f1e730e9a12de05105728951a4f1a7f167eafa31":{"changes":{"plugins\/providers\/docker\/action\/create.rb":"MODIFY"},"diff":{"plugins\/providers\/docker\/action\/create.rb":[{"add":["34","            # Name should not be used with run_command","35","            params[:name] = UNSET_VALUE","36","","42","","43","          if params[:name] != UNSET_VALUE","44","            env[:ui].detail(\"  Name: #{params[:name]}\")","45","          end","46",""],"delete":["39","          env[:ui].detail(\"  Name: #{params[:name]}\")"]}]}},"73a5a5a8c9ffd1e6bdd804cb17a99b3994df7652":{"changes":{"plugins\/providers\/virtualbox\/action\/export.rb":"MODIFY"},"diff":{"plugins\/providers\/virtualbox\/action\/export.rb":[{"add":["1","require 'vagrant\/util\/platform'","35","          path = File.join(@env[\"export.temp_dir\"], \"box.ovf\")","36","","37","          # If we're within WSL, we should use the correct path rather than","38","          # the mnt path. GH-9059","39","          if Vagrant::Util::Platform.wsl?","40","            path = Vagrant::Util::Platform.wsl_to_windows_path(path)","41","          end","42","","43","          return path"],"delete":["34","          File.join(@env[\"export.temp_dir\"], \"box.ovf\")"]}]}},"11ddd0136d82c8b89bc3b942a78c535843d0b848":{"changes":{"plugins\/commands\/box\/command\/outdated.rb":"MODIFY","lib\/vagrant\/action\/builtin\/box_check_outdated.rb":"MODIFY","templates\/locales\/en.yml":"MODIFY"},"diff":{"plugins\/commands\/box\/command\/outdated.rb":[{"add":["53","            box = @env.boxes.find(name, provider, version)","57","                name: box.name,","58","                provider: box.provider))","69","                provider: box.provider,","80","                provider: box.provider,","86","                provider: box.provider,"],"delete":["53","            next if boxes[name]","54","            boxes[name] = @env.boxes.find(name, provider, version)","55","          end","56","","57","          boxes.values.each do |box|","61","                name: box.name))"]}],"lib\/vagrant\/action\/builtin\/box_check_outdated.rb":[{"add":["71","              provider: box.provider,"],"delete":[]}],"templates\/locales\/en.yml":[{"add":["38","      * '%{name}' for '%{provider}' is outdated! Current: %{current}. Latest: %{latest}","60","      A newer version of the box '%{name}' for provider '%{provider}' is","61","      available! You currently have version '%{current}'. The latest is version","62","      '%{latest}'. Run `vagrant box update` to update.","64","      * '%{name}' for '%{provider}': Error loading metadata: %{message}","66","      * '%{name}' for '%{provider}' wasn't added from a catalog, no version information","73","      * '%{name}' for '%{provider}' (v%{version}) is up to date"],"delete":["38","      * '%{name}' is outdated! Current: %{current}. Latest: %{latest}","60","      A newer version of the box '%{name}' is available! You currently","61","      have version '%{current}'. The latest is version '%{latest}'. Run","62","      `vagrant box update` to update.","64","      * '%{name}': Error loading metadata: %{message}","66","      * '%{name}' wasn't added from a catalog, no version information","73","      * '%{name}' (v%{version}) is up to date"]}]}},"624a9dd2fd556bc2062e8f63878a406e1e46456a":{"changes":{"plugins\/provisioners\/salt\/provisioner.rb":"MODIFY"},"diff":{"plugins\/provisioners\/salt\/provisioner.rb":[{"add":["61","        @config.minion_config or @config.minion_key or @config.master_config or @config.master_key"],"delete":["61","        @config.minion_config or @config.minion_key"]}]}},"b333e5cd82e92fc944f615cfdc521e8fc000e70c":{"changes":{"plugins\/providers\/docker\/action\/build.rb":"MODIFY"},"diff":{"plugins\/providers\/docker\/action\/build.rb":[{"add":["45","              args.push(\"--file\").push(dockerfile_path)"],"delete":["45","              args.push(\"--file=\\\"#{dockerfile_path}\\\"\")"]}]}},"6caa7bfa862946d791772cf96d108316038437dc":{"changes":{"plugins\/providers\/hyperv\/scripts\/utils\/VagrantVM\/VagrantVM.psm1":"MODIFY"},"diff":{"plugins\/providers\/hyperv\/scripts\/utils\/VagrantVM\/VagrantVM.psm1":[{"add":["357","    if($null -eq $ManagementService) {","358","        throw 'The Hyper-V Virtual Machine Management Service (VMMS) is not running.'","359","    }"],"delete":[]}]}},"c8a18fda269d972f389edd88b84b95777f00e52b":{"changes":{"plugins\/provisioners\/salt\/bootstrap-salt.ps1":"MODIFY"},"diff":{"plugins\/provisioners\/salt\/bootstrap-salt.ps1":[{"add":["53","$url = \"https:\/\/repo.saltstack.com\/windows\/Salt-Minion-$version-$arch-Setup.exe\""],"delete":["53","$url = \"https:\/\/docs.saltstack.com\/downloads\/Salt-Minion-$version-$arch-Setup.exe\""]}]}},"7a97f0a53e7a4c8c4d78211cb5e4289470f1ad7f":{"changes":{"plugins\/communicators\/ssh\/communicator.rb":"MODIFY","test\/unit\/plugins\/communicators\/ssh\/communicator_test.rb":"MODIFY"},"diff":{"plugins\/communicators\/ssh\/communicator.rb":[{"add":["350","        # yanked directly from ruby's Net::SSH, but with `none` last","351","        # TODO: Remove this once Vagrant has updated its dependency on Net:SSH","352","        # to be > 4.1.0, which should include this fix.","353","        cipher_array = Net::SSH::Transport::Algorithms::ALGORITHMS[:encryption].dup","354","        if cipher_array.delete(\"none\")","355","          cipher_array.push(\"none\")","356","        end","357","","371","          encryption:            cipher_array,"],"delete":[]}],"test\/unit\/plugins\/communicators\/ssh\/communicator_test.rb":[{"add":["398","","399","      it \"includes the default cipher array for encryption\" do","400","        cipher_array = %w(aes128-cbc 3des-cbc blowfish-cbc cast128-cbc","401","                         aes192-cbc aes256-cbc rijndael-cbc@lysator.liu.se","402","                         idea-cbc arcfour128 arcfour256 arcfour","403","                         aes128-ctr aes192-ctr aes256-ctr","404","                         cast128-ctr blowfish-ctr 3des-ctr none)","405","        expect(Net::SSH).to receive(:start).with(","406","          nil, nil, hash_including(","407","            encryption: cipher_array","408","          )","409","        ).and_return(true)","410","        communicator.send(:connect)","411","      end"],"delete":[]}]}},"a39a7ae7949d2dd9644ef89e066b488fad2c19d4":{"changes":{"lib\/vagrant\/action\/builtin\/box_check_outdated.rb":"MODIFY","test\/unit\/vagrant\/action\/builtin\/box_check_outdated_test.rb":"MODIFY"},"diff":{"lib\/vagrant\/action\/builtin\/box_check_outdated.rb":[{"add":["72","          local_update = check_outdated_local(env)","73","          if update && (local_update.nil? || (local_update.version < update[1].version))","80","          elsif local_update","81","            env[:ui].warn(I18n.t(","82","              \"vagrant.box_outdated_local\",","83","              name: local_update.name,","84","              old: box.version,","85","              new: local_update.version))","86","            env[:box_outdated] = true","88","            env[:box_outdated] = false","103","          env[:box_collection].find("],"delete":["72","          if update","80","            check_outdated_local(env)","95","          box = env[:box_collection].find(","97","          if box","98","            env[:ui].warn(I18n.t(","99","              \"vagrant.box_outdated_local\",","100","              name: box.name,","101","              old: machine.box.version,","102","              new: box.version))","103","            env[:box_outdated] = true","104","            return","105","          end","106","","107","          env[:box_outdated] = false"]}],"test\/unit\/vagrant\/action\/builtin\/box_check_outdated_test.rb":[{"add":["143","    context \"both local and remote update exist\" do","144","      it \"should prompt user to update\" do","145","        iso_env.box3(\"foo\", \"1.1\", :virtualbox)","146","","147","        md = Vagrant::BoxMetadata.new(StringIO.new(<<-RAW))","148","        {","149","          \"name\": \"foo\",","150","          \"versions\": [","151","            {","152","              \"version\": \"1.2\",","153","              \"providers\": [","154","                {","155","                  \"name\": \"virtualbox\",","156","                  \"url\": \"bar\"","157","                }","158","              ]","159","            }","160","          ]","161","        }","162","        RAW","163","","164","        expect(box).to receive(:has_update?).with(machine.config.vm.box_version,","165","            {download_options:","166","              {automatic_check: true, ca_cert: nil, ca_path: nil, client_cert: nil, insecure: false}}).","167","          and_return([md, md.version(\"1.2\"), md.version(\"1.2\").provider(\"virtualbox\")])","168","","169","        allow(I18n).to receive(:t) { :ok }","170","        expect(I18n).to receive(:t).with(\/box_outdated_single\/, hash_including(latest: \"1.2\")).once","171","","172","        expect(app).to receive(:call).with(env).once","173","","174","        subject.call(env)","175","      end","176","    end","177","","264","","265","  describe \".check_outdated_local\" do","266","    let(:updated_box) do","267","      box_dir = iso_env.box3(\"foo\", \"1.1\", :virtualbox)","268","      Vagrant::Box.new(\"foo\", :virtualbox, \"1.1\", box_dir).tap do |b|","269","        allow(b).to receive(:has_update?).and_return(nil)","270","      end","271","    end","272","","273","    it \"should return the updated box if it is already installed\" do","274","      expect(env[:box_collection]).to receive(:find).with(\"foo\", :virtualbox, \"> 1.0\").and_return(updated_box)","275","","276","      local_update = subject.check_outdated_local(env)","277","","278","      expect(local_update).to eq(updated_box)","279","    end","280","  end"],"delete":[]}]}},"f3038a40335d28d12f1f4fac5e3593b3ebe796db":{"changes":{"lib\/vagrant\/command\/box.rb":"MODIFY"},"diff":{"lib\/vagrant\/command\/box.rb":[{"add":["43","          @subcommands.each { |key, value| keys << key.to_s }"],"delete":["43","          @subcommands.each { |key, value| keys << key }"]}]}},"4bf32e3f6d31ebf557953328a545bcff58680118":{"changes":{"test\/unit\/plugins\/guests\/photon\/cap\/configure_networks_test.rb":"MODIFY","plugins\/guests\/photon\/cap\/configure_networks.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/guests\/photon\/cap\/configure_networks_test.rb":[{"add":["47","      expect(comm.received_commands[1]).to match(\/ifconfig eth2 33.33.33.10 netmask 255.255.0.0\/)"],"delete":["47","      expect(comm.received_commands[1]).to match(\/ifconfig eth2 33.33.33.10 netmast 255.255.0.0\/)"]}],"plugins\/guests\/photon\/cap\/configure_networks.rb":[{"add":["20","            command << \" netmask #{network[:netmask]}\" if network[:netmask]"],"delete":["20","            command << \" netmast #{network[:netmask]}\" if network[:netmask]"]}]}},"352b955d0995af4953ebb2895a3e50fa7939af02":{"changes":{"plugins\/kernel_v2\/config\/vm.rb":"MODIFY","test\/unit\/plugins\/kernel_v2\/config\/vm_test.rb":"MODIFY"},"diff":{"plugins\/kernel_v2\/config\/vm.rb":[{"add":["513","        @box = nil if @box == UNSET_VALUE || @box.to_s.empty?"],"delete":["513","        @box = nil if @box == UNSET_VALUE"]}],"test\/unit\/plugins\/kernel_v2\/config\/vm_test.rb":[{"add":["88","    it \"cannot be an empty string\" do","89","      subject.box = \"\"","90","      subject.finalize!","91","      assert_invalid","92","    end","93",""],"delete":[]}]}},"ba85627c214a936bbdd4bf003f501f6f92ba2f60":{"changes":{"lib\/vagrant\/environment.rb":"MODIFY","plugins\/commands\/plugin\/gem_helper.rb":"MODIFY","plugins\/commands\/plugin\/action\/update_gems.rb":"ADD","plugins\/commands\/plugin\/command\/mixin_install_opts.rb":"MODIFY","lib\/vagrant\/plugin.rb":"MODIFY","test\/unit\/vagrant_test.rb":"MODIFY","lib\/vagrant.rb":"MODIFY","lib\/vagrant\/shared_helpers.rb":"ADD","plugins\/commands\/plugin\/plugin.rb":"MODIFY","website\/docs\/source\/v2\/cli\/plugin.html.md":"MODIFY","plugins\/commands\/plugin\/action.rb":"MODIFY","plugins\/commands\/plugin\/command\/update.rb":"MODIFY","plugins\/commands\/plugin\/action\/uninstall_plugin.rb":"MODIFY","plugins\/commands\/plugin\/command\/install.rb":"MODIFY","plugins\/commands\/plugin\/action\/license_plugin.rb":"MODIFY","templates\/locales\/en.yml":"MODIFY","lib\/vagrant\/errors.rb":"MODIFY","plugins\/commands\/plugin\/action\/plugin_exists_check.rb":"MODIFY","lib\/vagrant\/pre-rubygems.rb":"ADD","test\/unit\/plugins\/commands\/plugin\/action\/install_gem_test.rb":"ADD","lib\/vagrant\/bundler.rb":"ADD","test\/unit\/plugins\/commands\/plugin\/action\/uninstall_plugin_test.rb":"ADD","test\/unit\/vagrant\/plugin\/state_file_test.rb":"ADD","\/dev\/null":"DELETE","test\/unit\/plugins\/commands\/plugin\/action\/update_gems_test.rb":"ADD","vagrant.gemspec":"MODIFY","plugins\/commands\/plugin\/action\/list_plugins.rb":"MODIFY","lib\/vagrant\/plugin\/manager.rb":"ADD","test\/unit\/vagrant\/plugin\/manager_test.rb":"ADD","bin\/vagrant":"MODIFY","plugins\/commands\/plugin\/action\/install_gem.rb":"MODIFY","lib\/vagrant\/plugin\/state_file.rb":"ADD","plugins\/commands\/plugin\/command\/base.rb":"MODIFY","vagrant-spec.config.example.rb":"MODIFY","test\/unit\/plugins\/commands\/plugin\/action\/plugin_exists_check_test.rb":"ADD"},"diff":{"lib\/vagrant\/environment.rb":[{"add":["590","                                                 Vagrant.user_data_path))"],"delete":["130","      # Load the plugins","131","      load_plugins","132","","593","                                                 default_home_path))","693","    # This returns the default home directory path for Vagrant, which","694","    # can differ depending on the system.","695","    #","696","    # @return [Pathname]","697","    def default_home_path","698","      path = \"~\/.vagrant.d\"","699","","700","      # On Windows, we default ot the USERPROFILE directory if it","701","      # is available. This is more compatible with Cygwin and sharing","702","      # the home directory across shells.","703","      if Util::Platform.windows? && ENV[\"USERPROFILE\"]","704","        path = \"#{ENV[\"USERPROFILE\"]}\/.vagrant.d\"","705","      end","706","","707","      Pathname.new(path)","708","    end","709","","724","    # Loads the Vagrant plugins by properly setting up RubyGems so that","725","    # our private gem repository is on the path.","726","    def load_plugins","727","      # Add our private gem path to the gem path and reset the paths","728","      # that Rubygems knows about.","729","      ENV[\"GEM_PATH\"] = \"#{@gems_path}#{::File::PATH_SEPARATOR}#{ENV[\"GEM_PATH\"]}\"","730","      ::Gem.clear_paths","731","","732","      # If we're in a Bundler environment, don't load plugins. This only","733","      # happens in plugin development environments.","734","      if defined?(Bundler)","735","        require 'bundler\/shared_helpers'","736","        if Bundler::SharedHelpers.in_bundle?","737","          @logger.warn(\"In a bundler environment, not loading environment plugins!\")","738","          return","739","        end","740","      end","741","","742","      # This keeps track of the old plugins that need to be reinstalled","743","      # because they were installed with an old version of Ruby.","744","      reinstall = []","745","","746","      # Load the plugins","747","      plugins_json_file = @home_path.join(\"plugins.json\")","748","      @logger.debug(\"Loading plugins from: #{plugins_json_file}\")","749","      state = VagrantPlugins::CommandPlugin::StateFile.new(plugins_json_file)","750","      state.installed_plugins.each do |name, extra|","751","        # If the Ruby version changed, then they need to reinstall the plugin","752","        if extra[\"ruby_version\"] != RUBY_VERSION","753","          reinstall << name","754","          next","755","        end","756","","757","        @logger.info(\"Loading plugin from JSON: #{name}\")","758","        begin","759","          Vagrant.require_plugin(name)","760","        rescue Errors::PluginLoadError => e","761","          @ui.error(e.message + \"\\n\")","762","        rescue Errors::PluginLoadFailed => e","763","          @ui.error(e.message + \"\\n\")","764","        end","765","      end","766","","767","      if !reinstall.empty?","768","        @ui.warn(I18n.t(\"vagrant.plugin_needs_reinstall\",","769","          names: reinstall.join(\", \")))","770","      end","771","    end","772",""]}],"plugins\/commands\/plugin\/gem_helper.rb":[{"add":["31","        old_config = nil","32","        begin","33","          old_config = Gem.configuration","34","        rescue Psych::SyntaxError","35","          # Just ignore this. This means that the \".gemrc\" file has","36","          # an invalid syntax and can't be loaded. We don't care, because","37","          # when we set Gem.configuration to nil later, it'll force a reload","38","          # if it is needed.","39","        end"],"delete":["31","        old_config = Gem.configuration"]}],"plugins\/commands\/plugin\/action\/update_gems.rb":[{"add":[],"delete":[]}],"plugins\/commands\/plugin\/command\/mixin_install_opts.rb":[{"add":["10","          # @deprecated","13","            puts \"--plugin-prelease is deprecated and will be removed in the next\"","14","            puts \"version of Vagrant. It has no effect now. Use the '--plugin-version'\"","15","            puts \"flag to get a specific pre-release version.\"","16","            puts"],"delete":["12","            options[:plugin_prerelease] = plugin_prerelease"]}],"lib\/vagrant\/plugin.rb":[{"add":["2","    autoload :V1,        \"vagrant\/plugin\/v1\"","3","    autoload :V2,        \"vagrant\/plugin\/v2\"","4","    autoload :Manager,   \"vagrant\/plugin\/manager\"","5","    autoload :StateFile, \"vagrant\/plugin\/state_file\""],"delete":["2","    autoload :V1, \"vagrant\/plugin\/v1\"","3","    autoload :V2, \"vagrant\/plugin\/v2\""]}],"test\/unit\/vagrant_test.rb":[{"add":[],"delete":["49","  describe \"requiring plugins\" do","50","    it \"should require the plugin given\" do","51","      # For now, just require a stdlib","52","      expect { described_class.require_plugin \"set\" }.","53","        to_not raise_error","54","    end","55","","56","    it \"should add the gem name to plugin manager\" do","57","      expect(described_class.plugin(\"2\").manager).","58","        to receive(:plugin_required).with(\"set\")","59","      described_class.require_plugin \"set\"","60","    end","61","","62","    it \"should raise an error if the file doesn't exist\" do","63","      expect { described_class.require_plugin(\"i_dont_exist\") }.","64","        to raise_error(Vagrant::Errors::PluginLoadError)","65","    end","66","","67","    it \"should raise an error if the loading failed in some other way\" do","68","      plugin_dir  = temporary_dir","69","      plugin_path = plugin_dir.join(\"test.rb\")","70","      plugin_path.open(\"w\") do |f|","71","        f.write(%Q[require 'I_dont_exist'])","72","      end","73","","74","      expect { described_class.require_plugin(plugin_path.to_s) }.","75","        to raise_error(Vagrant::Errors::PluginLoadFailed)","76","    end","77","  end","78",""]}],"lib\/vagrant.rb":[{"add":["0","# This file is load before RubyGems are loaded, and allow us to actually","1","# resolve plugin dependencies and load the proper versions of everything.","2","","3","require \"vagrant\/shared_helpers\"","4","","5","if Vagrant.plugins_enabled? && !defined?(Bundler)","6","  puts \"It appears that Vagrant was not properly loaded. Specifically,\"","7","  puts \"the bundler context Vagrant requires was not setup. Please execute\"","8","  puts \"vagrant using only the `vagrant` executable.\"","9","  abort","10","end","11","","13","require 'log4r'","80","require \"vagrant\/plugin\"","187","  # @deprecated","189","    puts \"Vagrant.require_plugin is deprecated and has no effect any longer.\"","190","    puts \"Use `vagrant plugin` commands to manage plugins. This warning will\"","191","    puts \"be removed in the next version of Vagrant.\"","260","","261","# If we have plugins enabled, then load those","262","Bundler.require(:plugins) if Vagrant.plugins_enabled?"],"delete":["0","require 'log4r'","120","  # The source root is the path to the root directory of","121","  # the Vagrant gem.","122","  def self.source_root","123","    @source_root ||= Pathname.new(File.expand_path('..\/..\/', __FILE__))","124","  end","125","","180","  # This should be used instead of Ruby's built-in `require` in order to","181","  # load a Vagrant plugin. This will load the given plugin by first doing","182","  # a normal `require`, giving a nice error message if things go wrong,","183","  # and second by verifying that a Vagrant plugin was actually defined in","184","  # the process.","185","  #","186","  # @param [String] name Name of the plugin to load.","188","    logger = Log4r::Logger.new(\"vagrant::root\")","189","","190","    if ENV[\"VAGRANT_NO_PLUGINS\"]","191","      logger.warn(\"VAGRANT_NO_PLUGINS is set, not loading 3rd party plugin: #{name}\")","192","      return","193","    end","194","","195","    # Redirect stdout\/stderr so that we can output it in our own way.","196","    previous_stderr = $stderr","197","    previous_stdout = $stdout","198","    $stderr = StringIO.new","199","    $stdout = StringIO.new","200","","201","    # Attempt the normal require","202","    begin","203","      require name","204","      plugin(\"2\").manager.plugin_required(name)","205","    rescue Exception => e","206","      # Since this is a rare case, we create a one-time logger here","207","      # in order to output the error","208","      logger.error(\"Failed to load plugin: #{name}\")","209","      logger.error(\" -- Error: #{e.inspect}\")","210","      logger.error(\" -- Backtrace:\")","211","      logger.error(e.backtrace.join(\"\\n\"))","212","","213","      # If it is a LoadError we first try to see if it failed loading","214","      # the top-level entrypoint. If so, then we report a different error.","215","      if e.is_a?(LoadError)","216","        # Parse the message in order to get what failed to load, and","217","        # add some extra protection around if the message is different.","218","        parts = e.to_s.split(\" -- \", 2)","219","        if parts.length == 2 && parts[1] == name","220","          raise Errors::PluginLoadError, :plugin => name","221","        end","222","      end","223","","224","      # Get the string data out from the stdout\/stderr captures","225","      stderr = $stderr.string","226","      stdout = $stdout.string","227","      if !stderr.empty? || !stdout.empty?","228","        raise Errors::PluginLoadFailedWithOutput,","229","          :plugin => name,","230","          :stderr => stderr,","231","          :stdout => stdout","232","      end","233","","234","      # And raise an error itself","235","      raise Errors::PluginLoadFailed,","236","        :plugin => name","237","    end","238","","239","    # Log plugin version","240","    gem = Gem::Specification.find { |spec| spec.name == name }","241","    version = gem ? gem.version : \"<unknown>\"","242","    logger.info(\"Loaded plugin #{name}, version #{version}\")","243","  ensure","244","    $stderr = previous_stderr if previous_stderr","245","    $stdout = previous_stdout if previous_stdout"]}],"lib\/vagrant\/shared_helpers.rb":[{"add":[],"delete":[]}],"plugins\/commands\/plugin\/plugin.rb":[{"add":[],"delete":["18","    autoload :GemHelper, File.expand_path(\"..\/gem_helper\", __FILE__)","19","    autoload :StateFile, File.expand_path(\"..\/state_file\", __FILE__)"]}],"website\/docs\/source\/v2\/cli\/plugin.html.md":[{"add":["30","This command accepts optional command-line flags:","31","","32","* `--entry-point ENTRYPOINT` - By default, installed plugins are loaded","33","  internally by loading an initialization file of the same name as the plugin.","34","  Most of the time, this is correct. If the plugin you're installing has","35","  another entrypoint, this flag can be used to specify it.","36","","37","* `--plugin-source SOURCE` - Adds a source from which to fetch a plugin. Note","38","  that this doesn't only affect the single plugin being installed, by all future","39","  plugin as well. This is a limitation of the underlying plugin installer","40","  Vagrant uses.","41","","42","* `--plugin-version VERSION` - The version of the plugin to install. By default,","43","  this command will install the latest version. You can constrain the version","44","  using this flag. You can set it to a specific version, such as \"1.2.3\" or","45","  you can set it to a version contraint, such as \"> 1.0.2\". You can set it","46","  to a more complex constraint by comma-separating multiple constraints:","47","  \"> 1.0.2, < 1.1.0\" (don't forget to quote these on the command-line).","48","","60","This lists all installed plugins and their respective installed versions.","61","If a version constraint was specified for a plugin when installing it, the","62","constraint will be listed as well. Other plugin-specific information may","63","be shown, too.","74","**Command: `vagrant plugin update [<name>]`**","76","This updates the plugins that are installed within Vagrant. If you specified","77","version constraints when installing the plugin, this command will respect","78","those constraints. If you want to change a version constraint, re-install","79","the plugin using `vagrant plugin install`.","80","","81","If a name is specified, only that single plugin will be updated. If a","82","name is specified of a plugin that is not installed, this command will not","83","install it."],"delete":["41","This lists all installed plugins and their respective versions.","52","**Command: `vagrant plugin update <name>`**","54","This updates the plugin with the given name. If the plugin isn't already","55","installed, this will not install it."]}],"plugins\/commands\/plugin\/action.rb":[{"add":["17","          b.use PluginExistsCheck","32","          b.use PluginExistsCheck","40","          b.use UpdateGems","51","      autoload :UpdateGems, action_root.join(\"update_gems\")"],"delete":["10","          b.use BundlerCheck","12","          b.use PruneGems","19","          b.use BundlerCheck","27","          b.use BundlerCheck","35","          b.use BundlerCheck","37","          b.use PruneGems","44","          b.use BundlerCheck","45","          b.use PluginExistsCheck","46","          b.use InstallGem","47","          b.use PruneGems","53","      autoload :BundlerCheck, action_root.join(\"bundler_check\")","58","      autoload :PruneGems, action_root.join(\"prune_gems\")"]}],"plugins\/commands\/plugin\/command\/update.rb":[{"add":["13","            o.banner = \"Usage: vagrant plugin update [names...] [-h]\"","23","            :plugin_name        => argv,"],"delete":["12","          options = {}","13","","15","            o.banner = \"Usage: vagrant plugin update <name> [-h]\"","17","            build_install_opts(o, options)","23","          raise Vagrant::Errors::CLIInvalidUsage, :help => opts.help.chomp if argv.length < 1","27","            :plugin_entry_point => options[:entry_point],","28","            :plugin_prerelease  => options[:plugin_prerelease],","29","            :plugin_version     => options[:plugin_version],","30","            :plugin_sources     => options[:plugin_sources],","31","            :plugin_name        => argv[0]"]}],"plugins\/commands\/plugin\/action\/uninstall_plugin.rb":[{"add":["15","","16","          manager = Vagrant::Plugin::Manager.instance","17","          manager.uninstall_plugin(env[:plugin_name])"],"delete":["15","          env[:plugin_state_file].remove_plugin(env[:plugin_name])"]}],"plugins\/commands\/plugin\/command\/install.rb":[{"add":["12","          options = { verbose: false }","18","","19","            o.on(\"--verbose\", \"Enable verbose output for plugin installation\") do |v|","20","              options[:verbose] = v","21","            end","34","            :plugin_name        => argv[0],","35","            :plugin_verbose     => options[:verbose]"],"delete":["12","          options = {}","28","            :plugin_prerelease  => options[:plugin_prerelease],","31","            :plugin_name        => argv[0]"]}],"plugins\/commands\/plugin\/action\/license_plugin.rb":[{"add":[],"delete":["19","          # Get the list of installed plugins according to the state file","20","          installed = env[:plugin_state_file].installed_plugins.keys","21","","22","          # If the plugin we're trying to license doesn't exist in the","23","          # state file, then it is an error.","24","          if !installed.include?(env[:plugin_name])","25","            raise Vagrant::Errors::PluginNotFound, :name => env[:plugin_name]","26","          end","27",""]}],"templates\/locales\/en.yml":[{"add":["256","      bundler_error: |-","257","        Bundler, the underlying system Vagrant uses to install plugins,","258","        reported an error. The error is shown below. These errors are usually","259","        caused by misconfigured plugin installations or transient network","260","        issues. The error from Bundler is:","261","","262","        %{message}","483","      plugin_gem_not_found: |-","484","        The plugin '%{name}' could not be installed because it could not","485","        be found. Please double check the name and try again.","498","      plugin_install_version_conflict: |-","499","        The plugin(s) can't be installed due to the version conflicts below.","500","        This means that the plugins depend on a library version that conflicts","501","        with other plugins or Vagrant itself, creating an impossible situation","502","        where Vagrant wouldn't be able to load the plugins.","503","","504","        You can fix the issue by either removing a conflicting plugin or","505","        by contacting a plugin author to see if they can address the conflict.","506","","507","        %{conflicts}","928","        plugin_require: \"  - Custom entrypoint: %{require}\"","929","        plugin_version: \"  - Version Constraint: %{version}\"","936","        up_to_date: |-","937","          All plugins are up to date.","938","        updated: |-","939","          Updated '%{name}' to version '%{version}'!","940","        updating: |-","941","          Updating installed plugins...","942","        updating_specific: |-","943","          Updating plugins: %{names}. This may take a few minutes..."],"delete":["141","      in_bundler: |-","142","        You appear to be running Vagrant in a Bundler environment. Because","143","        Vagrant should be run within installers (outside of Bundler), Vagrant","144","        will assume that you're developing plugins and will change its behavior","145","        in certain ways to better assist plugin development."]}],"lib\/vagrant\/errors.rb":[{"add":["170","    class BundlerError < VagrantError","171","      error_key(:bundler_error)","172","    end","173","","434","    class PluginGemNotFound < VagrantError","435","      error_key(:plugin_gem_not_found)","436","    end","437","","450","    class PluginInstallVersionConflict < VagrantError","451","      error_key(:plugin_install_version_conflict)","452","    end","453",""],"delete":[]}],"plugins\/commands\/plugin\/action\/plugin_exists_check.rb":[{"add":["0","require \"vagrant\/plugin\/manager\"","13","          installed = Vagrant::Plugin::Manager.instance.installed_plugins","14","          if !installed.has_key?(env[:plugin_name])"],"delete":["0","require \"set\"","13","          # Get the list of installed plugins according to the state file","14","          installed = env[:plugin_state_file].installed_plugins.keys","15","          if !installed.include?(env[:plugin_name])"]}],"lib\/vagrant\/pre-rubygems.rb":[{"add":[],"delete":[]}],"test\/unit\/plugins\/commands\/plugin\/action\/install_gem_test.rb":[{"add":[],"delete":[]}],"lib\/vagrant\/bundler.rb":[{"add":[],"delete":[]}],"test\/unit\/plugins\/commands\/plugin\/action\/uninstall_plugin_test.rb":[{"add":[],"delete":[]}],"test\/unit\/vagrant\/plugin\/state_file_test.rb":[{"add":[],"delete":[]}],"\/dev\/null":[{"add":[],"delete":[]}],"test\/unit\/plugins\/commands\/plugin\/action\/update_gems_test.rb":[{"add":[],"delete":[]}],"vagrant.gemspec":[{"add":["16","  s.add_dependency \"bundler\", \"~> 1.5.1\""],"delete":["27","  # This has problems on Windows, we need to find a better way:","28","  # s.add_development_dependency \"sys-proctable\", \"~> 0.9.0\""]}],"plugins\/commands\/plugin\/action\/list_plugins.rb":[{"add":["0","require \"vagrant\/plugin\/manager\"","18","          manager = Vagrant::Plugin::Manager.instance","19","          plugins = manager.installed_plugins","20","          specs   = manager.installed_specs","23","          if specs.empty?","25","            return @app.call(env)","26","          end","27","","28","          specs.each do |spec|","29","            env[:ui].info \"#{spec.name} (#{spec.version})\"","30","","31","            # Grab the plugin. Note that the check for whether it exists","32","            # shouldn't be necessary since installed_specs checks that but","33","            # its nice to be certain.","34","            plugin = plugins[spec.name]","35","            next if !plugin","36","","37","            if plugin[\"gem_version\"] && plugin[\"gem_version\"] != \"\"","38","              env[:ui].info(I18n.t(","39","                \"vagrant.commands.plugin.plugin_version\",","40","                version: plugin[\"gem_version\"]))","41","            end","42","","43","            if plugin[\"require\"] && plugin[\"require\"] != \"\"","44","              env[:ui].info(I18n.t(","45","                \"vagrant.commands.plugin.plugin_require\",","46","                require: plugin[\"require\"]))"],"delete":["0","require \"rubygems\"","1","require \"set\"","19","          # Get the list of installed plugins according to the state file","20","          installed = env[:plugin_state_file].installed_plugins.keys","21","","22","          # Go through the plugins installed in this environment and","23","          # get the latest version of each.","24","          installed_map = {}","25","          env[:gem_helper].with_environment do","26","            Gem::Specification.find_all.each do |spec|","27","              # Ignore specs that aren't in our installed list","28","              next if !installed.include?(spec.name)","29","","30","              # If we already have a newer version in our list of installed,","31","              # then ignore it","32","              next if installed_map.has_key?(spec.name) &&","33","                installed_map[spec.name].version >= spec.version","34","","35","              installed_map[spec.name] = spec","36","            end","37","          end","40","          if installed_map.empty?","42","          else","43","            installed_map.values.each do |spec|","44","              env[:ui].info \"#{spec.name} (#{spec.version})\""]}],"lib\/vagrant\/plugin\/manager.rb":[{"add":[],"delete":[]}],"test\/unit\/vagrant\/plugin\/manager_test.rb":[{"add":[],"delete":[]}],"bin\/vagrant":[{"add":["15","# Fast path the version of Vagrant","16","if argv.include?(\"-v\") || argv.include?(\"--version\")","17","  require \"vagrant\/version\"","18","  puts \"Vagrant #{Vagrant::VERSION}\"","19","  exit 0","20","end","21","","22","# This is kind of hacky, and I'd love to find a better way to do this, but","23","# if we're accessing the plugin interface, we want to NOT load plugins","24","# for this run, because they can actually interfere with the function","25","# of the plugin interface.","26","argv.each do |arg|","27","  if !arg.start_with?(\"-\")","28","    if arg == \"plugin\"","29","      ENV[\"VAGRANT_NO_PLUGINS\"] = \"1\"","30","      ENV[\"VAGRANT_VAGRANTFILE\"] = \"plugin_command_#{Time.now.to_i}\"","31","    end","32","","33","    break","34","  end","35","end","36","","37","# First, make sure that we're executing using the proper Bundler context","38","# with our plugins. If we're not, then load that and reload Vagrant.","39","if !ENV[\"VAGRANT_INTERNAL_BUNDLERIZED\"]","40","  require \"rbconfig\"","41","  ruby_path = File.join(RbConfig::CONFIG[\"bindir\"], RbConfig::CONFIG[\"ruby_install_name\"])","42","  Kernel.exec(","43","    ruby_path,","44","    File.expand_path(\"..\/..\/lib\/vagrant\/pre-rubygems.rb\", __FILE__),","45","    *ARGV)","46","  raise \"Fatal error: this line should never be reached\"","47","end","48","","56","# Require some stuff that is NOT dependent on RubyGems","57","require \"vagrant\/shared_helpers\"","58","","59","# Setup our dependencies by initializing Bundler. If we're using plugins,","60","# then also initialize the paths to the plugins.","61","require \"bundler\"","62","Bundler.setup","63","","129","    env.ui.warn(I18n.t(\"vagrant.general.not_in_installer\"))"],"delete":["74","# This is kind of hacky, and I'd love to find a better way to do this, but","75","# if we're accessing the plugin interface, we want to NOT load plugins","76","# for this run, because they can actually interfere with the function","77","# of the plugin interface.","78","argv.each do |arg|","79","  if !arg.start_with?(\"-\")","80","    if arg == \"plugin\"","81","      ENV[\"VAGRANT_NO_PLUGINS\"] = \"1\"","82","      ENV[\"VAGRANT_VAGRANTFILE\"] = \"plugin_command_#{Time.now.to_i}\"","83","    end","84","","85","    break","86","  end","87","end","88","","89","# Fast path the version of Vagrant","90","if argv.include?(\"-v\") || argv.include?(\"--version\")","91","  puts \"Vagrant #{Vagrant::VERSION}\"","92","  exit 0","93","end","94","","107","    warned = false","108","","109","    # If we're in a bundler environment, we assume it is for plugin","110","    # development and will let the user know that.","111","    if defined?(Bundler)","112","      require 'bundler\/shared_helpers'","113","      if Bundler::SharedHelpers.in_bundle?","114","        env.ui.warn(I18n.t(\"vagrant.general.in_bundler\"))","115","        env.ui.warn(\"\")","116","        warned = true","117","      end","118","    end","119","","121","    env.ui.warn(I18n.t(\"vagrant.general.not_in_installer\")) if !warned"]}],"plugins\/commands\/plugin\/action\/install_gem.rb":[{"add":["1","require \"vagrant\/plugin\/manager\"","15","          entrypoint  = env[:plugin_entry_point]","17","          sources     = env[:plugin_sources]","26","          manager = Vagrant::Plugin::Manager.instance","27","          plugin_spec = manager.install_plugin(","28","            plugin_name,","29","            version: version,","30","            require: entrypoint,","31","            sources: sources,","32","            verbose: !!env[:plugin_verbose],","33","          )","35","          # Record it so we can uninstall if something goes wrong"],"delete":["0","require \"rubygems\"","1","require \"rubygems\/dependency_installer\"","2","","3","begin","4","  require \"rubygems\/format\"","5","rescue LoadError","6","  # rubygems 2.x","7","end","8","","24","          prerelease  = env[:plugin_prerelease]","27","          # Determine the plugin name we'll look for in the installed set","28","          # in order to determine the version and all that.","29","          find_plugin_name = plugin_name","30","          if plugin_name =~ \/\\.gem$\/","31","            # If we're installing from a gem file, determine the name","32","            # based on the spec in the file.","33","            pkg = if defined?(Gem::Format)","34","              # RubyGems 1.x","35","              Gem::Format.from_file_by_path(plugin_name)","36","            else","37","              # RubyGems 2.x","38","              Gem::Package.new(plugin_name)","39","            end","40","","41","            find_plugin_name = pkg.spec.name","42","            version = pkg.spec.version","43","          end","44","","47","          plugin_name_label += ' --prerelease' if prerelease","51","          installed_gems = env[:gem_helper].with_environment do","52","            # Override the list of sources by the ones set as a parameter if given","53","            if env[:plugin_sources]","54","              @logger.info(\"Custom plugin sources: #{env[:plugin_sources]}\")","55","              Gem.sources = env[:plugin_sources]","56","            end","58","            installer = Gem::DependencyInstaller.new(:document => [], :prerelease => prerelease)","60","            # If we don't have a version, use the default version","61","            version ||= Gem::Requirement.default","62","","63","            begin","64","              installer.install(plugin_name, version)","65","            rescue Gem::GemNotFoundException","66","              raise Vagrant::Errors::PluginInstallNotFound,","67","                :name => plugin_name","68","            end","69","          end","70","","71","          # The plugin spec is the last installed gem since RubyGems","72","          # currently always installed the requested gem last.","73","          @logger.debug(\"Installed #{installed_gems.length} gems.\")","74","          plugin_spec = installed_gems.find do |gem|","75","            gem.name.downcase == find_plugin_name.downcase","76","          end","77","","78","          # Store the installed name so we can uninstall it if things go","79","          # wrong.","82","          # Mark that we installed the gem","83","          @logger.info(\"Adding the plugin to the state file...\")","84","          env[:plugin_state_file].add_plugin(plugin_spec.name)","85",""]}],"lib\/vagrant\/plugin\/state_file.rb":[{"add":[],"delete":[]}],"plugins\/commands\/plugin\/command\/base.rb":[{"add":["0","require \"vagrant\/plugin\/state_file\"","1",""],"delete":["11","          env = {","12","            :gem_helper => GemHelper.new(@env.gems_path),","13","            :plugin_state_file => StateFile.new(@env.home_path.join(\"plugins.json\"))","14","          }.merge(env || {})","15",""]}],"vagrant-spec.config.example.rb":[{"add":["0","ENV[\"VAGRANT_FORCE_PLUGINS\"] = \"1\"","1",""],"delete":[]}],"test\/unit\/plugins\/commands\/plugin\/action\/plugin_exists_check_test.rb":[{"add":[],"delete":[]}]}},"783f5fc65d484334f1322a31a8ec3adc70fdbba6":{"changes":{"test\/unit\/vagrant\/ui_test.rb":"MODIFY","lib\/vagrant\/ui.rb":"MODIFY"},"diff":{"test\/unit\/vagrant\/ui_test.rb":[{"add":["408","","409","  describe \"#format_message\" do","410","    it \"should return the same number of new lines as given\" do","411","      [\"no new line\", \"one\\nnew line\", \"two\\nnew lines\\n\", \"three\\nnew lines\\n\\n\"].each do |msg|","412","        expect(subject.format_message(:detail, msg).count(\"\\n\")).to eq(msg.count(\"\\n\"))","413","      end","414","    end","415","  end"],"delete":[]}],"lib\/vagrant\/ui.rb":[{"add":["331","        lines = [].tap do |l|","332","          message.scan(\/(.*?)(\\n|$)\/).each do |m|","333","            l << m.first if m.first != \"\" || (m.first == \"\" && m.last == \"\\n\")","334","          end","335","        end","336","        lines << \"\" if message.end_with?(\"\\n\")"],"delete":["331","        # Get the lines. The first default is because if the message","332","        # is an empty string, then we want to still use the empty string.","333","        lines = [message]","334","        lines = message.split(\"\\n\") if message != \"\""]}]}},"71bfe7c8843d34c4a22ea47d1cdec0d57ebc0174":{"changes":{"plugins\/provisioners\/shell\/provisioner.rb":"MODIFY"},"diff":{"plugins\/provisioners\/shell\/provisioner.rb":[{"add":["193","            if File.extname(exec_path).downcase == \".ps1\"","194","              command = \"powershell #{shell_args.to_s} -file #{command}\"","195","            else","196","              command = \"cmd \/q \/c #{command}\"","197","            end"],"delete":["193","            command = \"powershell #{shell_args.to_s} -file #{command}\" if","194","              File.extname(exec_path).downcase == '.ps1'"]}]}},"a8970281ced199a43ca9b0a4d5b0b97aff02a2e2":{"changes":{"plugins\/guests\/linux\/cap\/network_interfaces.rb":"MODIFY","test\/unit\/plugins\/guests\/linux\/cap\/network_interfaces_test.rb":"MODIFY"},"diff":{"plugins\/guests\/linux\/cap\/network_interfaces.rb":[{"add":["25","          # NOTE: Devices named with a hex value suffix will _not_ be sorted","26","          #  as expected. This is generally seen with veth* devices, and proper ordering","27","          #  is currently not required","36","          end","37","          ifaces = ifaces.sort do |lhs, rhs|","38","            result = 0","39","            slice_length = [rhs.size, lhs.size].min","40","            slice_length.times do |idx|","41","              if(lhs[idx].is_a?(rhs[idx].class))","42","                result = lhs[idx] <=> rhs[idx]","43","              elsif(lhs[idx].is_a?(String))","44","                result = 1","45","              else","46","                result = -1","47","              end","48","              break if result != 0","49","            end","50","            result","51","          end.map(&:join)"],"delete":["33","          end.sort.map(&:join)"]}],"test\/unit\/plugins\/guests\/linux\/cap\/network_interfaces_test.rb":[{"add":["66","      expect(comm).to receive(:sudo).and_yield(:stdout, \"eth1\\neth2\\ndocker0\\nbridge0\\neth0\\ndocker1\\neth0:0\")","68","      expect(result).to eq([\"eth0\", \"eth1\", \"eth2\", \"bridge0\", \"docker0\", \"docker1\", \"eth0:0\"])","69","    end","70","","71","    it \"properly sorts non-consistent device name formats\" do","72","      expect(comm).to receive(:sudo).and_yield(:stdout, \"eth0\\neth1\\ndocker0\\nveth437f7f9\\nveth06b3e44\\nveth8bb7081\")","73","      result = cap.network_interfaces(machine)","74","      expect(result).to eq([\"eth0\", \"eth1\", \"docker0\", \"veth8bb7081\", \"veth437f7f9\", \"veth06b3e44\"])"],"delete":["66","      expect(comm).to receive(:sudo).and_yield(:stdout, \"eth1\\neth2\\ndocker0\\nbridge0\\neth0\\neth0:0\")","68","      expect(result).to eq([\"eth0\", \"eth1\", \"eth2\", \"bridge0\", \"docker0\", \"eth0:0\"])"]}]}},"f3daf5fad74628ed605746a748a026d99bf881ed":{"changes":{"lib\/vagrant\/util\/safe_exec.rb":"MODIFY"},"diff":{"lib\/vagrant\/util\/safe_exec.rb":[{"add":["43","              # Re-generate strings to ensure common encoding","44","              command = \"#{command}\".force_encoding(\"UTF-8\")","45","              args = args.map{|arg| \"#{arg}\".force_encoding(\"UTF-8\") }","47","            Kernel.exec(command, *args)"],"delete":["43","              @@logger.debug(\"Converting command and arguments to single string for exec\")","44","              @@logger.debug(\"Command: `#{command.inspect}` Args: `#{args.inspect}`\")","45","              full_command = \"#{command} #{args.join(\" \")}\"","46","              @@logger.debug(\"Converted command: #{full_command}\")","47","              Kernel.exec(full_command)","48","            else","49","              Kernel.exec(command, *args)"]}]}},"49ff17b9b925e947cdc18c51ff2607613716238f":{"changes":{"plugins\/guests\/linux\/cap\/mount_nfs.rb":"MODIFY","plugins\/guests\/linux\/cap\/mount_virtualbox_shared_folder.rb":"MODIFY","plugins\/guests\/linux\/cap\/mount_smb_shared_folder.rb":"MODIFY"},"diff":{"plugins\/guests\/linux\/cap\/mount_nfs.rb":[{"add":["35","            if machine.communicate.test(\"test -x \/sbin\/initctl && test 'upstart' = $(basename $(sudo readlink \/proc\/1\/exe))\")"],"delete":["35","            if machine.communicate.test(\"test -x \/sbin\/initctl\")"]}],"plugins\/guests\/linux\/cap\/mount_virtualbox_shared_folder.rb":[{"add":["82","          if machine.communicate.test(\"test -x \/sbin\/initctl && test 'upstart' = $(basename $(sudo readlink \/proc\/1\/exe))\")"],"delete":["82","          if machine.communicate.test(\"test -x \/sbin\/initctl\")"]}],"plugins\/guests\/linux\/cap\/mount_smb_shared_folder.rb":[{"add":["84","          if machine.communicate.test(\"test -x \/sbin\/initctl && test 'upstart' = $(basename $(sudo readlink \/proc\/1\/exe))\")"],"delete":["84","          if machine.communicate.test(\"test -x \/sbin\/initctl\")"]}]}},"06b3268b6f2147a26bb315510a17edc63b13e138":{"changes":{"test\/unit\/plugins\/provisioners\/puppet\/provisioner\/puppet_test.rb":"MODIFY","plugins\/provisioners\/puppet\/provisioner\/puppet.rb":"MODIFY"},"diff":{"test\/unit\/plugins\/provisioners\/puppet\/provisioner\/puppet_test.rb":[{"add":["29","    let(:options) { \"--environment production\" }","38","      allow(config).to receive(:environment_variables).and_return({hello: \"there\", test: \"test\"})","48","      expect(machine.communicate).to receive(:sudo).with(\"hello=\\\"there\\\" test=\\\"test\\\" \/opt\/puppetlabs\/bin\/puppet apply --environment production --color=false --detailed-exitcodes \", anything)","49","","50","      subject.run_puppet_apply()","51","    end","52","","53","    it \"properly sets env variables on windows\" do","54","      allow(config).to receive(:options).and_return(options)","55","      allow(config).to receive(:environment_path).and_return(false)","56","      allow(config).to receive(:facter).and_return(facts)","57","      allow(config).to receive(:binary_path).and_return(binary_path)","58","      allow(config).to receive(:environment_variables).and_return({hello: \"there\", test: \"test\"})","59","      allow(config).to receive(:working_directory).and_return(false)","60","      allow(config).to receive(:manifest_file).and_return(manifest_file)","61","      allow(config).to receive(:structured_facts).and_return(double(\"structured_facts\"))","62","      allow(subject).to receive(:windows?).and_return(true)","63","","64","      allow_message_expectations_on_nil","65","      allow(@module_paths).to receive(:map) { module_paths }","66","      allow(@module_paths).to receive(:empty?).and_return(true)","67","","68","      expect(machine).to receive(:communicate).and_return(comm)","69","      expect(machine.communicate).to receive(:sudo).with(\"$env:hello=\\\"there\\\"; $env:test=\\\"test\\\"; \/opt\/puppetlabs\/bin\/puppet apply --environment production --color=false --detailed-exitcodes \", anything)","70",""],"delete":["29","    let(:options) { double(\"options\") }","38","      allow(config).to receive(:environment_variables).and_return(nil)"]}],"plugins\/provisioners\/puppet\/provisioner\/puppet.rb":[{"add":["261","              env_vars = env_vars.join(\"; \")","262","              env_vars << \";\"","263","            else","264","              env_vars = env_vars.join(\" \")"],"delete":["262","","263","            env_vars = env_vars.join(\" \")"]}]}},"82b2630a80b412f31f31632befa52ac76fdf7489":{"changes":{"plugins\/kernel_v2\/config\/vm.rb":"MODIFY","templates\/locales\/en.yml":"MODIFY"},"diff":{"plugins\/kernel_v2\/config\/vm.rb":[{"add":["757","          if options[:type]","758","            plugins = Vagrant.plugin(\"2\").manager.synced_folders","759","            impl_class = plugins[options[:type]]","760","            if !impl_class","761","              errors << I18n.t(\"vagrant.config.vm.shared_folder_invalid_option_type\",","762","                              type: options[:type],","763","                              options: plugins.keys.join(', '))","764","            end"],"delete":["757","          # One day remove this probably.","758","          if options[:extra]","759","            errors << \"The 'extra' flag on synced folders is now 'mount_options'\""]}],"templates\/locales\/en.yml":[{"add":["1945","        shared_folder_invalid_option_type: |-","1946","          The type '%{type}' is not a valid synced folder type. If 'type' is not","1947","            specified, Vagrant will automatically choose the best synced folder","1948","            option for your guest. Otherwise, please pick from the following valid options:","1949","","1950","              %{options}"],"delete":[]}]}},"01528689fde32bb90c0ffeb6ec05a5d263aff31c":{"changes":{"plugins\/provisioners\/shell\/provisioner.rb":"MODIFY","test\/unit\/plugins\/provisioners\/shell\/provisioner_test.rb":"MODIFY"},"diff":{"plugins\/provisioners\/shell\/provisioner.rb":[{"add":["267","            script = script.gsub(\/\\r\\n?$\/, \"\\n\")"],"delete":["267","            script.gsub!(\/\\r\\n?$\/, \"\\n\")"]}],"test\/unit\/plugins\/provisioners\/shell\/provisioner_test.rb":[{"add":["45","  context \"with a script that was set to freeze the string\" do","46","    TEST_CONSTANT_VARIABLE = <<-TEST_CONSTANT_VARIABLE.freeze","47","      echo test","48","    TEST_CONSTANT_VARIABLE","49","","50","    let(:script) { TEST_CONSTANT_VARIABLE }","51","    let(:config) {","52","      double(","53","        :config,","54","        :args        => \"doesn't matter\",","55","        :env         => {},","56","        :upload_path => \"arbitrary\",","57","        :remote?     => false,","58","        :path        => nil,","59","        :inline      => script,","60","        :binary      => false,","61","      )","62","    }","63","","64","    it \"does not raise an exception\" do","65","      vsp = VagrantPlugins::Shell::Provisioner.new(machine, config)","66","","67","      RSpec::Expectations.configuration.on_potential_false_positives = :nothing","68","      # This test should be fine, since we are specifically looking for the","69","      # string 'freeze' when RuntimeError is raised","70","      expect {","71","        vsp.provision","72","      }.not_to raise_error(RuntimeError)","73","    end","74","  end","75",""],"delete":[]}]}},"19780b6342500fd50423195c29ad2b8cee189040":{"changes":{"website\/source\/docs\/synced-folders\/nfs.html.md":"MODIFY"},"diff":{"website\/source\/docs\/synced-folders\/nfs.html.md":[{"add":["162","Cmnd_Alias VAGRANT_EXPORTS_CHOWN = \/bin\/chown 0\\:0 \/tmp\/*","163","Cmnd_Alias VAGRANT_EXPORTS_MV = \/bin\/mv -f \/tmp\/* \/etc\/exports","167","%sudo ALL=(root) NOPASSWD: VAGRANT_EXPORTS_CHOWN, VAGRANT_EXPORTS_MV, VAGRANT_NFSD_CHECK, VAGRANT_NFSD_START, VAGRANT_NFSD_APPLY","174","Cmnd_Alias VAGRANT_EXPORTS_CHOWN = \/bin\/chown 0\\:0 \/tmp\/*","175","Cmnd_Alias VAGRANT_EXPORTS_MV = \/bin\/mv -f \/tmp\/* \/etc\/exports","179","%vagrant ALL=(root) NOPASSWD: AGRANT_EXPORTS_CHOWN, VAGRANT_EXPORTS_MV, VAGRANT_NFSD_CHECK, VAGRANT_NFSD_START, VAGRANT_NFSD_APPLY"],"delete":["162","Cmnd_Alias VAGRANT_EXPORTS_ADD = \/usr\/bin\/tee -a \/etc\/exports","163","Cmnd_Alias VAGRANT_EXPORTS_COPY = \/bin\/cp \/tmp\/exports \/etc\/exports","167","Cmnd_Alias VAGRANT_EXPORTS_REMOVE = \/bin\/sed -r -e * d -ibak \/tmp\/exports","168","%sudo ALL=(root) NOPASSWD: VAGRANT_EXPORTS_ADD, VAGRANT_NFSD_CHECK, VAGRANT_NFSD_START, VAGRANT_NFSD_APPLY, VAGRANT_EXPORTS_REMOVE, VAGRANT_EXPORTS_COPY","175","Cmnd_Alias VAGRANT_EXPORTS_ADD = \/usr\/bin\/tee -a \/etc\/exports","179","Cmnd_Alias VAGRANT_EXPORTS_REMOVE = \/bin\/sed -r -e * d -ibak \/tmp\/exports","180","%vagrant ALL=(root) NOPASSWD: VAGRANT_EXPORTS_ADD, VAGRANT_NFSD_CHECK, VAGRANT_NFSD_START, VAGRANT_NFSD_APPLY, VAGRANT_EXPORTS_REMOVE"]}]}},"5d4c9ef8a74df967f6f24867360d4f6e1f3705ff":{"changes":{"vagrant.gemspec":"MODIFY","plugins\/commands\/cloud\/publish.rb":"MODIFY"},"diff":{"vagrant.gemspec":[{"add":["36","  s.add_dependency \"vagrant_cloud\", \"~> 2.0.2\""],"delete":["36","  s.add_dependency \"vagrant_cloud\", \"~> 2.0.0\""]}],"plugins\/commands\/cloud\/publish.rb":[{"add":["129","          rescue VagrantCloud::InvalidVersion => e","130","            @env.ui.error(I18n.t(\"cloud_command.errors.publish.fail\", org: org, box_name: box_name))","131","            @env.ui.error(e)","132","            return 1"],"delete":[]}]}},"754c1eebe59d229dfaa03090aa934b1a114a10be":{"changes":{"plugins\/guests\/windows\/cap\/mount_shared_folder.rb":"MODIFY","test\/unit\/plugins\/guests\/windows\/cap\/mount_shared_folder_test.rb":"MODIFY"},"diff":{"plugins\/guests\/windows\/cap\/mount_shared_folder.rb":[{"add":["1","require \"base64\"","36","          if machine.config.vm.communicator == :winrm","37","            machine.communicate.execute(script, shell: :powershell)","38","          else","39","            # Convert script to double byte unicode string then base64 encode","40","            # just like PowerShell -EncodedCommand expects.","41","            # Suppress the progress stream from leaking to stderr.","42","            wrapped_encoded_command = Base64.strict_encode64(","43","              \"$ProgressPreference='SilentlyContinue'; #{script}; exit $LASTEXITCODE\".encode('UTF-16LE', 'UTF-8'))","44","            # Execute encoded PowerShell script via OpenSSH shell","45","            machine.communicate.execute(\"powershell.exe -noprofile -executionpolicy bypass \" +","46","              \"-encodedcommand '#{wrapped_encoded_command}'\", shell: \"sh\")","47","          end"],"delete":["35","          machine.communicate.execute(script, shell: :powershell)"]}],"test\/unit\/plugins\/guests\/windows\/cap\/mount_shared_folder_test.rb":[{"add":["8","  let(:config) { double(\"config\") }","9","  let(:vm) { double(\"vm\") }","14","    allow(machine).to receive(:config).and_return(config)","15","    allow(config).to receive(:vm).and_return(vm)","16","    allow(vm).to receive(:communicator).and_return(:winrm)","105","  describe \"virtualbox-ssh\" do","106","","107","    let(:described_class) do","108","      VagrantPlugins::GuestWindows::Plugin.components.guest_capabilities[:windows].get(:mount_virtualbox_shared_folder)","109","    end","110","","111","    before do","112","      allow(vm).to receive(:communicator).and_return(:ssh)","113","    end","114","","115","    describe \".mount_shared_folder\" do","116","      it \"should call mount_volume script via ssh\" do","117","        expect(communicator).to receive(:execute).with(\/powershell\/, shell: \"sh\")","118","        described_class.mount_virtualbox_shared_folder(machine, 'name', 'guestpath', {})","119","      end","120","    end","121","  end","122",""],"delete":[]}]}},"cb3b8bd732cdc7616e0381476e19664cc2d961d0":{"changes":{"website\/source\/docs\/cli\/rsync-auto.html.md":"MODIFY","test\/unit\/plugins\/synced_folders\/rsync\/helper_test.rb":"MODIFY","website\/source\/docs\/cli\/rsync.html.md":"MODIFY","plugins\/synced_folders\/rsync\/command\/rsync_auto.rb":"MODIFY","website\/source\/docs\/synced-folders\/rsync.html.md":"MODIFY","plugins\/synced_folders\/rsync\/command\/rsync.rb":"MODIFY","test\/unit\/plugins\/synced_folders\/rsync\/command\/rsync_auto_test.rb":"MODIFY","test\/unit\/plugins\/synced_folders\/rsync\/command\/rsync_test.rb":"MODIFY","plugins\/synced_folders\/rsync\/helper.rb":"MODIFY"},"diff":{"website\/source\/docs\/cli\/rsync-auto.html.md":[{"add":["24","* `--[no-]rsync-chown` - Use rsync to modify ownership of transferred files. Enabling","25","    this option can result in faster completion due to a secondary process not being","26","    required to update ownership. By default this is disabled.","27",""],"delete":[]}],"test\/unit\/plugins\/synced_folders\/rsync\/helper_test.rb":[{"add":["171","    context \"with rsync_ownership option\" do","172","      let(:rsync_local_version) { \"3.1.1\" }","173","      let(:rsync_remote_version) { \"3.1.1\" }","174","      let(:rsync_result) { Vagrant::Util::Subprocess::Result.new(0, \"\", \"\") }","175","","176","      before do","177","        expect(Vagrant::Util::Subprocess).to receive(:execute).","178","          with(\"rsync\", \"--version\").and_return(Vagrant::Util::Subprocess::Result.new(0, \" version #{rsync_local_version} \", \"\"))","179","        allow(machine.communicate).to receive(:execute).with(\/--version\/).and_yield(:stdout, \" version #{rsync_remote_version} \")","180","        allow(Vagrant::Util::Subprocess).to receive(:execute).with(\"rsync\", any_args).and_return(rsync_result)","181","        opts[:rsync_ownership] = true","182","      end","183","","184","      after { subject.reset! }","185","","186","      it \"should use the rsync --chown flag\" do","187","        expect(Vagrant::Util::Subprocess).to receive(:execute) { |*args|","188","          expect(args.detect{|a| a.include?(\"--chown\")}).to be_truthy","189","          rsync_result","190","        }","191","        subject.rsync_single(machine, ssh_info, opts)","192","      end","193","","194","      it \"should set the chown option to false\" do","195","        expect(opts.has_key?(:chown)).to eq(false)","196","        subject.rsync_single(machine, ssh_info, opts)","197","        expect(opts[:chown]).to eq(false)","198","      end","199","","200","      context \"when local rsync version does not support --chown\" do","201","        let(:rsync_local_version) { \"2.0\" }","202","","203","        it \"should not use the --chown flag\" do","204","          expect(Vagrant::Util::Subprocess).to receive(:execute) { |*args|","205","            expect(args.detect{|a| a.include?(\"--chown\")}).to be_falsey","206","            rsync_result","207","          }","208","          subject.rsync_single(machine, ssh_info, opts)","209","        end","210","      end","211","","212","      context \"when remote rsync version does not support --chown\" do","213","        let(:rsync_remote_version) { \"2.0\" }","214","","215","        it \"should not use the --chown flag\" do","216","          expect(Vagrant::Util::Subprocess).to receive(:execute) { |*args|","217","            expect(args.detect{|a| a.include?(\"--chown\")}).to be_falsey","218","            rsync_result","219","          }","220","          subject.rsync_single(machine, ssh_info, opts)","221","        end","222","      end","223","    end","224","","401","","402","  describe \".rsync_chown_support?\" do","403","    let(:local_version) { \"3.1.1\" }","404","    let(:remote_version) { \"3.1.1\" }","405","","406","    before do","407","      allow(subject).to receive(:local_rsync_version).and_return(local_version)","408","      allow(subject).to receive(:machine_rsync_version).and_return(remote_version)","409","    end","410","","411","    it \"should return when local and remote versions support chown\" do","412","      expect(subject.rsync_chown_support?(machine)).to be_truthy","413","    end","414","","415","    context \"when local version does not support chown\" do","416","      let(:local_version) { \"2.0\" }","417","","418","      it \"should return false\" do","419","        expect(subject.rsync_chown_support?(machine)).to be_falsey","420","      end","421","    end","422","","423","    context \"when remote version does not support chown\" do","424","      let(:remote_version) { \"2.0\" }","425","","426","      it \"should return false\" do","427","        expect(subject.rsync_chown_support?(machine)).to be_falsey","428","      end","429","    end","430","","431","    context \"when both local and remote versions do not support chown\" do","432","      let(:local_version) { \"2.0\" }","433","      let(:remote_version) { \"2.0\" }","434","","435","      it \"should return false\" do","436","        expect(subject.rsync_chown_support?(machine)).to be_falsey","437","      end","438","    end","439","  end","440","","441","  describe \".machine_rsync_version\" do","442","    let(:version_output) {","443","      <<-EOV","444","      rsync  version 3.1.3  protocol version 31","445","      Copyright (C) 1996-2018 by Andrew Tridgell, Wayne Davison, and others.","446","      Web site: http:\/\/rsync.samba.org\/","447","      Capabilities:","448","      64-bit files, 64-bit inums, 64-bit timestamps, 64-bit long ints,","449","      socketpairs, hardlinks, symlinks, IPv6, batchfiles, inplace,","450","      append, ACLs, xattrs, iconv, symtimes, prealloc","451","","452","      rsync comes with ABSOLUTELY NO WARRANTY.  This is free software, and you","453","      are welcome to redistribute it under certain conditions.  See the GNU","454","      General Public Licence for details.","455","      EOV","456","    }","457","","458","    before do","459","      allow(machine.communicate).to receive(:execute).with(\/--version\/).","460","        and_yield(:stdout, version_output)","461","      allow(guest).to receive(:capability?).and_return(false)","462","    end","463","","464","    it \"should extract the version string\" do","465","      expect(subject.machine_rsync_version(machine)).to eq(\"3.1.3\")","466","    end","467","","468","    context \"when version output is an unknown format\" do","469","      let(:version_output) { \"unknown\" }","470","","471","      it \"should return nil value\" do","472","        expect(subject.machine_rsync_version(machine)).to be_nil","473","      end","474","    end","475","","476","    context \"with guest rsync_command capability\" do","477","      let(:rsync_path) { \"custom_rsync\" }","478","","479","      before do","480","        allow(guest).to receive(:capability?).with(:rsync_command).","481","          and_return(true)","482","        allow(guest).to receive(:capability).with(:rsync_command).","483","          and_return(rsync_path)","484","      end","485","","486","      it \"should use custom rsync_path\" do","487","        expect(machine.communicate).to receive(:execute).","488","          with(\"#{rsync_path} --version\").and_yield(:stdout, version_output)","489","        subject.machine_rsync_version(machine)","490","      end","491","    end","492","  end","493","","494","  describe \".local_rsync_version\" do","495","    let(:version_output) {","496","      <<-EOV","497","      rsync  version 3.1.3  protocol version 31","498","      Copyright (C) 1996-2018 by Andrew Tridgell, Wayne Davison, and others.","499","      Web site: http:\/\/rsync.samba.org\/","500","      Capabilities:","501","      64-bit files, 64-bit inums, 64-bit timestamps, 64-bit long ints,","502","      socketpairs, hardlinks, symlinks, IPv6, batchfiles, inplace,","503","      append, ACLs, xattrs, iconv, symtimes, prealloc","504","","505","      rsync comes with ABSOLUTELY NO WARRANTY.  This is free software, and you","506","      are welcome to redistribute it under certain conditions.  See the GNU","507","      General Public Licence for details.","508","      EOV","509","    }","510","    let(:result) { Vagrant::Util::Subprocess::Result.new(0, version_output, \"\") }","511","","512","    before do","513","      allow(Vagrant::Util::Subprocess).to receive(:execute).with(\"rsync\", \"--version\").","514","        and_return(result)","515","    end","516","","517","    after { subject.reset! }","518","","519","    it \"should extract the version string\" do","520","      expect(subject.local_rsync_version).to eq(\"3.1.3\")","521","    end","522","","523","    it \"should cache the version lookup\" do","524","      expect(Vagrant::Util::Subprocess).to receive(:execute).with(\"rsync\", \"--version\").","525","        and_return(result).once","526","      expect(subject.local_rsync_version).to eq(\"3.1.3\")","527","      expect(subject.local_rsync_version).to eq(\"3.1.3\")","528","    end","529","","530","    context \"when version output is an unknown format\" do","531","      let(:version_output) { \"unknown\" }","532","","533","      it \"should return nil value\" do","534","        expect(subject.local_rsync_version).to be_nil","535","      end","536","    end","537","  end"],"delete":[]}],"website\/source\/docs\/cli\/rsync.html.md":[{"add":["18","","19","## Options","20","","21","* `--[no-]rsync-chown` - Use rsync to modify ownership of transferred files. Enabling","22","    this option can result in faster completion due to a secondary process not being","23","    required to update ownership. By default this is disabled."],"delete":[]}],"plugins\/synced_folders\/rsync\/command\/rsync_auto.rb":[{"add":["35","","36","            o.on(\"--[no-]rsync-chown\", \"Use rsync to modify ownership\") do |chown|","37","              options[:rsync_chown] = chown","38","            end","89","                if options.has_key?(:rsync_chown)","90","                  folder_opts = folder_opts.merge(rsync_ownership: options[:rsync_chown])","91","                end"],"delete":["10","# This is to avoid a bug in nio 1.0.0. Remove around nio 1.0.1","11","if Vagrant::Util::Platform.windows?","12","  ENV[\"NIO4R_PURE\"] = \"1\"","13","end","14",""]}],"website\/source\/docs\/synced-folders\/rsync.html.md":[{"add":["71","* `rsync__rsync_ownership` (boolean) - If true, and rsync executables in use","72","  are >= 3.1.0, then rsync will be used to set the owner and group instead","73","  of a separate call to modify ownership. By default, this is false.","74",""],"delete":[]}],"plugins\/synced_folders\/rsync\/command\/rsync.rb":[{"add":["17","          options = {}","26","            o.on(\"--[no-]rsync-chown\", \"Use rsync to modify ownership\") do |chown|","27","              options[:rsync_chown] = chown","28","            end","65","              if options.has_key?(:rsync_chown)","66","                folder_opts = folder_opts.merge(rsync_ownership: options[:rsync_chown])","67","              end"],"delete":[]}],"test\/unit\/plugins\/synced_folders\/rsync\/command\/rsync_auto_test.rb":[{"add":["17","    {type: \"rsync\",","18","      exclude: false,","19","      hostpath: \"\/Users\/brian\/code\/vagrant-sandbox\"},","20","    \"5678\":","21","    {type: \"rsync\",","22","      exclude: false,","23","      hostpath: \"\/Not\/The\/Same\/Path\"},","24","    \"0912\":","25","    {type: \"rsync\",","26","      exclude: false,","27","      hostpath: \"\/Users\/brian\/code\/relative-dir\"}}}","67","      {type: \"rsync\",","68","        exclude: false,","69","        hostpath: \"\/Users\/brian\/code\/vagrant-sandbox\"},","70","      \"\/vagrant\/other-dir\":","71","      {type: \"rsync\",","72","        exclude: false,","73","        hostpath: \"\/Users\/brian\/code\/vagrant-sandbox\/other-dir\"},","74","      \"\/vagrant\/relative-dir\":","75","      {type: \"rsync\",","76","        exclude: false,","77","        hostpath: \"\/Users\/brian\/code\/relative-dir\"}}}","80","      allow(subject).to receive(:with_target_vms) { |&block| block.call machine }","94","    end","96","    it \"does not sync folders outside of the cwd\" do","105","      subject.execute","106","    end","107","","108","    context \"with --rsync-chown option\" do","109","      let(:argv) { [\"--rsync-chown\"] }","110","","111","      it \"should enable rsync_ownership on folder options\" do","112","        expect(helper_class).to receive(:rsync_single).","113","          with(anything, anything, hash_including(rsync_ownership: true))","114","        subject.execute","115","      end"],"delete":["17","                               {type: \"rsync\",","18","                                exclude: false,","19","                                hostpath: \"\/Users\/brian\/code\/vagrant-sandbox\"},","20","                               \"5678\":","21","                               {type: \"rsync\",","22","                                exclude: false,","23","                                hostpath: \"\/Not\/The\/Same\/Path\"},","24","                               \"0912\":","25","                               {type: \"rsync\",","26","                                exclude: false,","27","                                hostpath: \"\/Users\/brian\/code\/relative-dir\"}}}","67","                                   {type: \"rsync\",","68","                                    exclude: false,","69","                                    hostpath: \"\/Users\/brian\/code\/vagrant-sandbox\"},","70","                                  \"\/vagrant\/other-dir\":","71","                                   {type: \"rsync\",","72","                                    exclude: false,","73","                                    hostpath: \"\/Users\/brian\/code\/vagrant-sandbox\/other-dir\"},","74","                                  \"\/vagrant\/relative-dir\":","75","                                   {type: \"rsync\",","76","                                    exclude: false,","77","                                    hostpath: \"\/Users\/brian\/code\/relative-dir\"}}}","80","        allow(subject).to receive(:with_target_vms) { |&block| block.call machine }","81","    end","82","","83","    it \"does not sync folders outside of the cwd\" do","98","","107","      subject.execute()"]}],"test\/unit\/plugins\/synced_folders\/rsync\/command\/rsync_test.rb":[{"add":["69","","70","      context \"with --rsync-chown option\" do","71","        let(:argv) { [\"--rsync-chown\"] }","72","","73","        it \"should enable rsync_ownership on folder options\" do","74","          synced_folders[:rsync].each do |_, opts|","75","            expect(helper_class).to receive(:rsync_single).","76","              with(machine, ssh_info, hash_including(rsync_ownership: true)).","77","              ordered","78","          end","79","","80","          subject.execute","81","        end","82","      end"],"delete":[]}],"plugins\/synced_folders\/rsync\/helper.rb":[{"add":["12","      # rsync version requirement to support chown argument","13","      RSYNC_CHOWN_REQUIREMENT = Gem::Requirement.new(\">= 3.1.0\").freeze","14","","29","        # This is not an ideal solution, but it's a start. We can improve and","145","        if opts[:rsync_ownership] && rsync_chown_support?(machine)","146","          # Allow rsync to map ownership","147","          args << \"--chown=#{opts[:owner]}:#{opts[:group]}\"","148","          # Notify rsync post capability not to chown","149","          opts[:chown] = false","150","        else","151","          # Disable rsync's owner\/group preservation (implied by --archive) unless","152","          # specifically requested, since we adjust owner\/group to match shared","153","          # folder setting ourselves.","154","          args << \"--no-owner\" unless args.include?(\"--owner\") || args.include?(\"-o\")","155","          args << \"--no-group\" unless args.include?(\"--group\") || args.include?(\"-g\")","156","        end","235","","236","      # Check if rsync versions support using chown option","237","      #","238","      # @param [Vagrant::Machine] machine The remote machine","239","      # @return [Boolean]","240","      def self.rsync_chown_support?(machine)","241","        if !RSYNC_CHOWN_REQUIREMENT.satisfied_by?(Gem::Version.new(local_rsync_version))","242","          return false","243","        end","244","        mrv = machine_rsync_version(machine)","245","        if mrv && !RSYNC_CHOWN_REQUIREMENT.satisfied_by?(Gem::Version.new(mrv))","246","          return false","247","        end","248","        true","249","      end","250","","251","      # @return [String, nil] version of remote rsync","252","      def self.machine_rsync_version(machine)","253","        if machine.guest.capability?(:rsync_command)","254","          rsync_path = machine.guest.capability(:rsync_command)","255","        else","256","          rsync_path = \"rsync\"","257","        end","258","        output = \"\"","259","        machine.communicate.execute(rsync_path + \" --version\") { |_, data| output << data }","260","        vmatch = output.match(\/version\\s+(?<version>[\\d.]+)\\s\/)","261","        if vmatch","262","          vmatch[:version]","263","        end","264","      end","265","","266","      # @return [String, nil] version of local rsync","267","      def self.local_rsync_version","268","        if !@_rsync_version","269","          r = Vagrant::Util::Subprocess.execute(\"rsync\", \"--version\")","270","          vmatch = r.stdout.to_s.match(\/version\\s+(?<version>[\\d.]+)\\s\/)","271","          if vmatch","272","            @_rsync_version = vmatch[:version]","273","          end","274","        end","275","        @_rsync_version","276","      end","277","","278","      # @private","279","      # Reset the cached values for helper. This is not considered a public","280","      # API and should only be used for testing.","281","      def self.reset!","282","        instance_variables.each(&method(:remove_instance_variable))","283","      end"],"delete":["26","        # This is REALLY ghetto, but its a start. We can improve and","142","        # Disable rsync's owner\/group preservation (implied by --archive) unless","143","        # specifically requested, since we adjust owner\/group to match shared","144","        # folder setting ourselves.","145","        args << \"--no-owner\" unless args.include?(\"--owner\") || args.include?(\"-o\")","146","        args << \"--no-group\" unless args.include?(\"--group\") || args.include?(\"-g\")"]}]}},"fc4e03d559aaaf93347d9d898a586262f58b5a5f":{"changes":{"\/dev\/null":"DELETE","plugins\/hosts\/bsd\/cap\/nfs.rb":"MODIFY","templates\/nfs\/exports_bsd.erb":"ADD","plugins\/hosts\/freebsd\/cap\/nfs.rb":"MODIFY"},"diff":{"\/dev\/null":[{"add":[],"delete":[]}],"plugins\/hosts\/bsd\/cap\/nfs.rb":[{"add":["122","          \"nfs\/exports_bsd\""],"delete":["122","          \"nfs\/exports\""]}],"templates\/nfs\/exports_bsd.erb":[{"add":[],"delete":[]}],"plugins\/hosts\/freebsd\/cap\/nfs.rb":[{"add":["21","          \"nfs\/exports_bsd\""],"delete":["21","          \"nfs\/exports_freebsd\""]}]}},"a9223cf443ca391e18dba06cc14f944e956aa286":{"changes":{"lib\/vagrant\/action.rb":"MODIFY"},"diff":{"lib\/vagrant\/action.rb":[{"add":["38","      autoload :Package, 'vagrant\/action\/general\/package'","39","      autoload :PackageSetupFiles, 'vagrant\/action\/general\/package_setup_files'","40","      autoload :PackageSetupFolders, 'vagrant\/action\/general\/package_setup_folders'"],"delete":["38","      autoload :Package,  'vagrant\/action\/general\/package'"]}]}},"e47e1df228ba2746015a6fcf9287f2b460addce9":{"changes":{"plugins\/providers\/hyperv\/scripts\/import_vm_vmcx.ps1":"MODIFY","plugins\/providers\/hyperv\/scripts\/get_switches.ps1":"MODIFY","plugins\/providers\/hyperv\/action\/import.rb":"MODIFY"},"diff":{"plugins\/providers\/hyperv\/scripts\/import_vm_vmcx.ps1":[{"add":["10","    [string]$switchid=$null,","85","if (!$switchid) {","87","} else {","88","    $switchname = $(Hyper-V\\Get-VMSwitch -Id $switchid).Name"],"delete":["10","    [string]$switchname=$null,","85","if (!$switchname) {"]}],"plugins\/providers\/hyperv\/scripts\/get_switches.ps1":[{"add":["10","    | Select-Object Name,SwitchType,NetAdapterInterfaceDescription,Id)\r"],"delete":["10","    | Select-Object Name,SwitchType,NetAdapterInterfaceDescription)\r"]}],"plugins\/providers\/hyperv\/action\/import.rb":[{"add":["90","              @logger.debug(\"Looking for switch with name: #{switchToFind}\")","91","              switch = switches.find { |s| s[\"Name\"].downcase == switchToFind.downcase }[\"Id\"]","92","              @logger.debug(\"Found switch: #{switch}\")","112","              switch = switches[switch][\"Id\"]","114","              switch = switches[0][\"Id\"]"],"delete":["90","              puts \"Looking for switch with name: #{switchToFind}\"","91","              switch = switches.find { |s| s[\"Name\"].downcase == switchToFind.downcase }[\"Name\"]","92","              puts \"Found switch: #{switch}\"","112","              switch = switches[switch][\"Name\"]","114","              switch = switches[0][\"Name\"]"]}]}},"03178bbe04e0d051dda0458b920ebf656b27b0cf":{"changes":{"plugins\/providers\/docker\/driver.rb":"MODIFY"},"diff":{"plugins\/providers\/docker\/driver.rb":[{"add":["51","            if v.index(\":\") != v.rindex(\":\")","52","              # If we have 2 colons, the host path is an absolute Windows URL","53","              # and we need to remove the colon from it","54","              host, colon, guest = v.rpartition(\":\")","55","              host = \"\/\/\" + host[0].downcase + host[2..-1]","56","              v = [host, guest].join(\":\")","57","            else ","58","              host, guest = v.split(\":\", 2)","59","                  host = Vagrant::Util::Platform.windows_path(host)","60","                  # NOTE: Docker does not support UNC style paths (which also","61","                  # means that there's no long path support). Hopefully this","62","                  # will be fixed someday and the gsub below can be removed.","63","                  host.gsub!(\/^[^A-Za-z]+\/, \"\")","64","                  v = [host, guest].join(\":\")","65","            end","67",""],"delete":["51","            host, guest = v.split(\":\", 2)","52","            host = Vagrant::Util::Platform.windows_path(host)","53","            # NOTE: Docker does not support UNC style paths (which also","54","            # means that there's no long path support). Hopefully this","55","            # will be fixed someday and the gsub below can be removed.","56","            host.gsub!(\/^[^A-Za-z]+\/, \"\")","57","            v = [host, guest].join(\":\")"]}]}},"145f04893cbe07ffbee472aadd8641843213ff9c":{"changes":{"plugins\/commands\/cloud\/publish.rb":"MODIFY","test\/unit\/plugins\/commands\/cloud\/publish_test.rb":"MODIFY"},"diff":{"plugins\/commands\/cloud\/publish.rb":[{"add":["57","          if argv.empty? || argv.length > 4 || argv.length < 3 || (argv.length == 3 && !options[:url])"],"delete":["57","          if argv.empty? || argv.length > 4 || argv.length < 3"]}],"test\/unit\/plugins\/commands\/cloud\/publish_test.rb":[{"add":["54","      expect { subject.execute }.","55","        to raise_error(Vagrant::Errors::CLIInvalidUsage)","56","    end","57","  end","58","","59","  context \"missing box file\" do","60","    let(:argv) { [\"vagrant\/box\", \"1.0.0\", \"virtualbox\", \"\/notreal\/file.box\"] }","61","","62","    it \"raises an exception\" do"],"delete":[]}]}},"092e73d87fdd80fb873c521527cb648cca9e93a1":{"changes":{"lib\/vagrant\/machine.rb":"MODIFY","test\/unit\/vagrant\/machine_test.rb":"MODIFY"},"diff":{"lib\/vagrant\/machine.rb":[{"add":["112","      @triggers        = Vagrant::Plugin::V2::Trigger.new(@env, @config.trigger, self)"],"delete":["151","","152","      @triggers = Vagrant::Plugin::V2::Trigger.new(@env, @config.trigger, self)"]}],"test\/unit\/vagrant\/machine_test.rb":[{"add":["52","      allow(obj).to receive(:_initialize)","53","        .with(provider_name, anything).and_return(nil)","79","    context \"setting up triggers\" do","80","      before do","81","        expect(provider).to receive(:_initialize) do |*args|","82","          machine = args.last","83","          @trigger_instance = machine.instance_variable_get(:@triggers)","84","          true","85","        end","86","      end","87","","88","      it \"should initialize the trigger object\" do","89","        subject = new_instance","90","        expect(subject.instance_variable_get(:@triggers))","91","          .to be_a(Vagrant::Plugin::V2::Trigger)","92","        expect(subject.instance_variable_get(:@triggers))","93","          .to eq(@trigger_instance)","94","      end","95","    end","96",""],"delete":["52","      allow(obj).to receive(:_initialize).and_return(nil)"]}]}},"fb8180a8432f71a79cbe51f139094db36823f3fb":{"changes":{"plugins\/providers\/hyperv\/scripts\/utils\/VagrantVM\/VagrantVM.psm1":"MODIFY"},"diff":{"plugins\/providers\/hyperv\/scripts\/utils\/VagrantVM\/VagrantVM.psm1":[{"add":["724","        try { return $_.IdentityReference.Translate([System.Security.Principal.SecurityIdentifier]).Value -eq \"S-1-5-18\" } catch { return $false } -and"],"delete":["724","        $_.IdentityReference.Translate([System.Security.Principal.SecurityIdentifier]).Value -eq \"S-1-5-18\" -and"]}]}}}